import{r as Ym,t as lx,v as cx,a as He,o as Jt,w as Pb}from"./chunk-QMGIS6GS-DKq6P5ZB.js";import"./i18n-BjipxJH4.js";import{N as Ib}from"./navigation-bar-DvcDRNEg.js";import"./index-N8YdNN7z.js";/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Fa="178",Ob={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Bb={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},ux=0,Sm=1,hx=2,zb=3,fx=0,cf=1,ec=2,os=3,fs=0,En=1,ri=2,mi=0,Ta=1,Mm=2,Em=3,bm=4,dx=5,Tr=100,px=101,mx=102,gx=103,vx=104,_x=200,yx=201,xx=202,Sx=203,_h=204,yh=205,Mx=206,Ex=207,bx=208,Tx=209,Ax=210,Rx=211,wx=212,Cx=213,Dx=214,xh=0,Sh=1,Mh=2,Da=3,Eh=4,bh=5,Th=6,Ah=7,bc=0,Nx=1,Lx=2,hs=0,Ux=1,Px=2,Ix=3,Km=4,Ox=5,Bx=6,zx=7,Tm="attached",Fx="detached",uf=300,Js=301,Cr=302,hc=303,fc=304,nl=306,Dr=1e3,Ci=1001,Wo=1002,an=1003,hf=1004,Fb=1004,xa=1005,Hb=1005,jt=1006,Vo=1007,Vb=1007,Di=1008,Gb=1008,Bn=1009,jm=1010,Zm=1011,qo=1012,ff=1013,Rs=1014,Kn=1015,Lr=1016,df=1017,pf=1018,Na=1020,Jm=35902,Qm=1021,$m=1022,jn=1023,Yo=1026,La=1027,mf=1028,Tc=1029,eg=1030,gf=1031,kb=1032,vf=1033,tc=33776,nc=33777,ic=33778,sc=33779,Rh=35840,wh=35841,Ch=35842,Dh=35843,Nh=36196,Lh=37492,Uh=37496,Ph=37808,Ih=37809,Oh=37810,Bh=37811,zh=37812,Fh=37813,Hh=37814,Vh=37815,Gh=37816,kh=37817,Xh=37818,Wh=37819,qh=37820,Yh=37821,rc=36492,Kh=36494,jh=36495,tg=36283,Zh=36284,Jh=36285,Qh=36286,Hx=2200,Vx=2201,Gx=2202,Ko=2300,jo=2301,dh=2302,Sa=2400,Ma=2401,dc=2402,_f=2500,ng=2501,kx=0,ig=1,$h=2,Ur=3200,Xx=3201,Xb=3202,Wb=3203,Pr=0,Wx=1,cs="",kt="srgb",bn="srgb-linear",pc="linear",qt="srgb",qb=0,va=7680,Yb=7681,Kb=7682,jb=7683,Zb=34055,Jb=34056,Qb=5386,$b=512,eT=513,tT=514,nT=515,iT=516,sT=517,rT=518,Am=519,qx=512,Yx=513,Kx=514,sg=515,jx=516,Zx=517,Jx=518,Qx=519,mc=35044,aT=35048,oT=35040,lT=35045,cT=35049,uT=35041,hT=35046,fT=35050,dT=35042,pT="100",Rm="300 es",ji=2e3,gc=2001,mT={COMPUTE:"compute",RENDER:"render"},gT={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},vT={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};class Pi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const i=n[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,l=i.length;r<l;r++)i[r].call(this,e);e.target=null}}}const Wn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Z0=1234567;const Aa=Math.PI/180,Zo=180/Math.PI;function Li(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Wn[s&255]+Wn[s>>8&255]+Wn[s>>16&255]+Wn[s>>24&255]+"-"+Wn[e&255]+Wn[e>>8&255]+"-"+Wn[e>>16&15|64]+Wn[e>>24&255]+"-"+Wn[t&63|128]+Wn[t>>8&255]+"-"+Wn[t>>16&255]+Wn[t>>24&255]+Wn[n&255]+Wn[n>>8&255]+Wn[n>>16&255]+Wn[n>>24&255]).toLowerCase()}function dt(s,e,t){return Math.max(e,Math.min(t,s))}function rg(s,e){return(s%e+e)%e}function _T(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function yT(s,e,t){return s!==e?(t-s)/(e-s):0}function ac(s,e,t){return(1-t)*s+t*e}function xT(s,e,t,n){return ac(s,e,1-Math.exp(-t*n))}function ST(s,e=1){return e-Math.abs(rg(s,e*2)-e)}function MT(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function ET(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function bT(s,e){return s+Math.floor(Math.random()*(e-s+1))}function TT(s,e){return s+Math.random()*(e-s)}function AT(s){return s*(.5-Math.random())}function RT(s){s!==void 0&&(Z0=s);let e=Z0+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function wT(s){return s*Aa}function CT(s){return s*Zo}function DT(s){return(s&s-1)===0&&s!==0}function NT(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function LT(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function UT(s,e,t,n,i){const r=Math.cos,l=Math.sin,c=r(t/2),u=l(t/2),f=r((e+n)/2),d=l((e+n)/2),p=r((e-n)/2),g=l((e-n)/2),v=r((n-e)/2),x=l((n-e)/2);switch(i){case"XYX":s.set(c*d,u*p,u*g,c*f);break;case"YZY":s.set(u*g,c*d,u*p,c*f);break;case"ZXZ":s.set(u*p,u*g,c*d,c*f);break;case"XZX":s.set(c*d,u*x,u*v,c*f);break;case"YXY":s.set(u*v,c*d,u*x,c*f);break;case"ZYZ":s.set(u*x,u*v,c*d,c*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function ai(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function vt(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const $x={DEG2RAD:Aa,RAD2DEG:Zo,generateUUID:Li,clamp:dt,euclideanModulo:rg,mapLinear:_T,inverseLerp:yT,lerp:ac,damp:xT,pingpong:ST,smoothstep:MT,smootherstep:ET,randInt:bT,randFloat:TT,randFloatSpread:AT,seededRandom:RT,degToRad:wT,radToDeg:CT,isPowerOfTwo:DT,ceilPowerOfTwo:NT,floorPowerOfTwo:LT,setQuaternionFromProperEuler:UT,normalize:vt,denormalize:ai};class oe{constructor(e=0,t=0){oe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=dt(this.x,e.x,t.x),this.y=dt(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=dt(this.x,e,t),this.y=dt(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(dt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(dt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,l=this.y-e.y;return this.x=r*n-l*i+e.x,this.y=r*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Zn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,l,c){let u=n[i+0],f=n[i+1],d=n[i+2],p=n[i+3];const g=r[l+0],v=r[l+1],x=r[l+2],M=r[l+3];if(c===0){e[t+0]=u,e[t+1]=f,e[t+2]=d,e[t+3]=p;return}if(c===1){e[t+0]=g,e[t+1]=v,e[t+2]=x,e[t+3]=M;return}if(p!==M||u!==g||f!==v||d!==x){let S=1-c;const _=u*g+f*v+d*x+p*M,b=_>=0?1:-1,T=1-_*_;if(T>Number.EPSILON){const U=Math.sqrt(T),D=Math.atan2(U,_*b);S=Math.sin(S*D)/U,c=Math.sin(c*D)/U}const A=c*b;if(u=u*S+g*A,f=f*S+v*A,d=d*S+x*A,p=p*S+M*A,S===1-c){const U=1/Math.sqrt(u*u+f*f+d*d+p*p);u*=U,f*=U,d*=U,p*=U}}e[t]=u,e[t+1]=f,e[t+2]=d,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,r,l){const c=n[i],u=n[i+1],f=n[i+2],d=n[i+3],p=r[l],g=r[l+1],v=r[l+2],x=r[l+3];return e[t]=c*x+d*p+u*v-f*g,e[t+1]=u*x+d*g+f*p-c*v,e[t+2]=f*x+d*v+c*g-u*p,e[t+3]=d*x-c*p-u*g-f*v,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,r=e._z,l=e._order,c=Math.cos,u=Math.sin,f=c(n/2),d=c(i/2),p=c(r/2),g=u(n/2),v=u(i/2),x=u(r/2);switch(l){case"XYZ":this._x=g*d*p+f*v*x,this._y=f*v*p-g*d*x,this._z=f*d*x+g*v*p,this._w=f*d*p-g*v*x;break;case"YXZ":this._x=g*d*p+f*v*x,this._y=f*v*p-g*d*x,this._z=f*d*x-g*v*p,this._w=f*d*p+g*v*x;break;case"ZXY":this._x=g*d*p-f*v*x,this._y=f*v*p+g*d*x,this._z=f*d*x+g*v*p,this._w=f*d*p-g*v*x;break;case"ZYX":this._x=g*d*p-f*v*x,this._y=f*v*p+g*d*x,this._z=f*d*x-g*v*p,this._w=f*d*p+g*v*x;break;case"YZX":this._x=g*d*p+f*v*x,this._y=f*v*p+g*d*x,this._z=f*d*x-g*v*p,this._w=f*d*p-g*v*x;break;case"XZY":this._x=g*d*p-f*v*x,this._y=f*v*p-g*d*x,this._z=f*d*x+g*v*p,this._w=f*d*p+g*v*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],l=t[1],c=t[5],u=t[9],f=t[2],d=t[6],p=t[10],g=n+c+p;if(g>0){const v=.5/Math.sqrt(g+1);this._w=.25/v,this._x=(d-u)*v,this._y=(r-f)*v,this._z=(l-i)*v}else if(n>c&&n>p){const v=2*Math.sqrt(1+n-c-p);this._w=(d-u)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(r+f)/v}else if(c>p){const v=2*Math.sqrt(1+c-n-p);this._w=(r-f)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(u+d)/v}else{const v=2*Math.sqrt(1+p-n-c);this._w=(l-i)/v,this._x=(r+f)/v,this._y=(u+d)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<1e-8?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(dt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,l=e._w,c=t._x,u=t._y,f=t._z,d=t._w;return this._x=n*d+l*c+i*f-r*u,this._y=i*d+l*u+r*c-n*f,this._z=r*d+l*f+n*u-i*c,this._w=l*d-n*c-i*u-r*f,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+r*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=r,this;const u=1-c*c;if(u<=Number.EPSILON){const v=1-t;return this._w=v*l+t*this._w,this._x=v*n+t*this._x,this._y=v*i+t*this._y,this._z=v*r+t*this._z,this.normalize(),this}const f=Math.sqrt(u),d=Math.atan2(f,c),p=Math.sin((1-t)*d)/f,g=Math.sin(t*d)/f;return this._w=l*p+this._w*g,this._x=n*p+this._x*g,this._y=i*p+this._y*g,this._z=r*p+this._z*g,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class B{constructor(e=0,t=0,n=0){B.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(J0.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(J0.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,l=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*l,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*l,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,l=e.y,c=e.z,u=e.w,f=2*(l*i-c*n),d=2*(c*t-r*i),p=2*(r*n-l*t);return this.x=t+u*f+l*p-c*d,this.y=n+u*d+c*f-r*p,this.z=i+u*p+r*d-l*f,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=dt(this.x,e.x,t.x),this.y=dt(this.y,e.y,t.y),this.z=dt(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=dt(this.x,e,t),this.y=dt(this.y,e,t),this.z=dt(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(dt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,l=t.x,c=t.y,u=t.z;return this.x=i*u-r*c,this.y=r*l-n*u,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return hp.copy(this).projectOnVector(e),this.sub(hp)}reflect(e){return this.sub(hp.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(dt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const hp=new B,J0=new Zn;class mt{constructor(e,t,n,i,r,l,c,u,f){mt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,l,c,u,f)}set(e,t,n,i,r,l,c,u,f){const d=this.elements;return d[0]=e,d[1]=i,d[2]=c,d[3]=t,d[4]=r,d[5]=u,d[6]=n,d[7]=l,d[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,l=n[0],c=n[3],u=n[6],f=n[1],d=n[4],p=n[7],g=n[2],v=n[5],x=n[8],M=i[0],S=i[3],_=i[6],b=i[1],T=i[4],A=i[7],U=i[2],D=i[5],P=i[8];return r[0]=l*M+c*b+u*U,r[3]=l*S+c*T+u*D,r[6]=l*_+c*A+u*P,r[1]=f*M+d*b+p*U,r[4]=f*S+d*T+p*D,r[7]=f*_+d*A+p*P,r[2]=g*M+v*b+x*U,r[5]=g*S+v*T+x*D,r[8]=g*_+v*A+x*P,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],l=e[4],c=e[5],u=e[6],f=e[7],d=e[8];return t*l*d-t*c*f-n*r*d+n*c*u+i*r*f-i*l*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],l=e[4],c=e[5],u=e[6],f=e[7],d=e[8],p=d*l-c*f,g=c*u-d*r,v=f*r-l*u,x=t*p+n*g+i*v;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/x;return e[0]=p*M,e[1]=(i*f-d*n)*M,e[2]=(c*n-i*l)*M,e[3]=g*M,e[4]=(d*t-i*u)*M,e[5]=(i*r-c*t)*M,e[6]=v*M,e[7]=(n*u-f*t)*M,e[8]=(l*t-n*r)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,l,c){const u=Math.cos(r),f=Math.sin(r);return this.set(n*u,n*f,-n*(u*l+f*c)+l+e,-i*f,i*u,-i*(-f*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(fp.makeScale(e,t)),this}rotate(e){return this.premultiply(fp.makeRotation(-e)),this}translate(e,t){return this.premultiply(fp.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const fp=new mt;function eS(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const PT={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Fo(s,e){return new PT[s](e)}function vc(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function tS(){const s=vc("canvas");return s.style.display="block",s}const Q0={};function Go(s){s in Q0||(Q0[s]=!0,console.warn(s))}function IT(s,e,t){return new Promise(function(n,i){function r(){switch(s.clientWaitSync(e,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:n()}}setTimeout(r,t)})}function OT(s){const e=s.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function BT(s){const e=s.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const $0=new mt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),e_=new mt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function zT(){const s={enabled:!0,workingColorSpace:bn,spaces:{},convert:function(i,r,l){return this.enabled===!1||r===l||!r||!l||(this.spaces[r].transfer===qt&&(i.r=js(i.r),i.g=js(i.g),i.b=js(i.b)),this.spaces[r].primaries!==this.spaces[l].primaries&&(i.applyMatrix3(this.spaces[r].toXYZ),i.applyMatrix3(this.spaces[l].fromXYZ)),this.spaces[l].transfer===qt&&(i.r=ko(i.r),i.g=ko(i.g),i.b=ko(i.b))),i},workingToColorSpace:function(i,r){return this.convert(i,this.workingColorSpace,r)},colorSpaceToWorking:function(i,r){return this.convert(i,r,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===cs?pc:this.spaces[i].transfer},getLuminanceCoefficients:function(i,r=this.workingColorSpace){return i.fromArray(this.spaces[r].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,r,l){return i.copy(this.spaces[r].toXYZ).multiply(this.spaces[l].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,r){return Go("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),s.workingToColorSpace(i,r)},toWorkingColorSpace:function(i,r){return Go("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),s.colorSpaceToWorking(i,r)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[bn]:{primaries:e,whitePoint:n,transfer:pc,toXYZ:$0,fromXYZ:e_,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:kt},outputColorSpaceConfig:{drawingBufferColorSpace:kt}},[kt]:{primaries:e,whitePoint:n,transfer:qt,toXYZ:$0,fromXYZ:e_,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:kt}}}),s}const bt=zT();function js(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function ko(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let vo;class nS{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{vo===void 0&&(vo=vc("canvas")),vo.width=e.width,vo.height=e.height;const i=vo.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=vo}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=vc("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let l=0;l<r.length;l++)r[l]=js(r[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(js(t[n]/255)*255):t[n]=js(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let FT=0;class Rr{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:FT++}),this.uuid=Li(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?r.push(dp(i[l].image)):r.push(dp(i[l]))}else r=dp(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function dp(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?nS.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let HT=0;const pp=new B;class nn extends Pi{constructor(e=nn.DEFAULT_IMAGE,t=nn.DEFAULT_MAPPING,n=Ci,i=Ci,r=jt,l=Di,c=jn,u=Bn,f=nn.DEFAULT_ANISOTROPY,d=cs){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:HT++}),this.uuid=Li(),this.name="",this.source=new Rr(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=l,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=u,this.offset=new oe(0,0),this.repeat=new oe(1,1),this.center=new oe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new mt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=d,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(pp).x}get height(){return this.source.getSize(pp).y}get depth(){return this.source.getSize(pp).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==uf)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Dr:e.x=e.x-Math.floor(e.x);break;case Ci:e.x=e.x<0?0:1;break;case Wo:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Dr:e.y=e.y-Math.floor(e.y);break;case Ci:e.y=e.y<0?0:1;break;case Wo:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}nn.DEFAULT_IMAGE=null;nn.DEFAULT_MAPPING=uf;nn.DEFAULT_ANISOTROPY=1;class Lt{constructor(e=0,t=0,n=0,i=1){Lt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*r,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*r,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*r,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const u=e.elements,f=u[0],d=u[4],p=u[8],g=u[1],v=u[5],x=u[9],M=u[2],S=u[6],_=u[10];if(Math.abs(d-g)<.01&&Math.abs(p-M)<.01&&Math.abs(x-S)<.01){if(Math.abs(d+g)<.1&&Math.abs(p+M)<.1&&Math.abs(x+S)<.1&&Math.abs(f+v+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const T=(f+1)/2,A=(v+1)/2,U=(_+1)/2,D=(d+g)/4,P=(p+M)/4,I=(x+S)/4;return T>A&&T>U?T<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(T),i=D/n,r=P/n):A>U?A<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(A),n=D/i,r=I/i):U<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(U),n=P/r,i=I/r),this.set(n,i,r,t),this}let b=Math.sqrt((S-x)*(S-x)+(p-M)*(p-M)+(g-d)*(g-d));return Math.abs(b)<.001&&(b=1),this.x=(S-x)/b,this.y=(p-M)/b,this.z=(g-d)/b,this.w=Math.acos((f+v+_-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=dt(this.x,e.x,t.x),this.y=dt(this.y,e.y,t.y),this.z=dt(this.z,e.z,t.z),this.w=dt(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=dt(this.x,e,t),this.y=dt(this.y,e,t),this.z=dt(this.z,e,t),this.w=dt(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(dt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class ag extends Pi{constructor(e=1,t=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:jt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth,this.scissor=new Lt(0,0,e,t),this.scissorTest=!1,this.viewport=new Lt(0,0,e,t);const i={width:e,height:t,depth:n.depth},r=new nn(i);this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=r.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(e={}){const t={minFilter:jt,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const i=Object.assign({},e.textures[t].image);this.textures[t].source=new Rr(i)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Sn extends ag{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class yf extends nn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=an,this.minFilter=an,this.wrapR=Ci,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class VT extends Sn{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new yf(null,e,t,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class xf extends nn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=an,this.minFilter=an,this.wrapR=Ci,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class GT extends Sn{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new xf(null,e,t,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class On{constructor(e=new B(1/0,1/0,1/0),t=new B(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(ss.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(ss.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=ss.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const r=n.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let l=0,c=r.count;l<c;l++)e.isMesh===!0?e.getVertexPosition(l,ss):ss.fromBufferAttribute(r,l),ss.applyMatrix4(e.matrixWorld),this.expandByPoint(ss);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),xu.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),xu.copy(n.boundingBox)),xu.applyMatrix4(e.matrixWorld),this.union(xu)}const i=e.children;for(let r=0,l=i.length;r<l;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,ss),ss.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(zl),Su.subVectors(this.max,zl),_o.subVectors(e.a,zl),yo.subVectors(e.b,zl),xo.subVectors(e.c,zl),mr.subVectors(yo,_o),gr.subVectors(xo,yo),na.subVectors(_o,xo);let t=[0,-mr.z,mr.y,0,-gr.z,gr.y,0,-na.z,na.y,mr.z,0,-mr.x,gr.z,0,-gr.x,na.z,0,-na.x,-mr.y,mr.x,0,-gr.y,gr.x,0,-na.y,na.x,0];return!mp(t,_o,yo,xo,Su)||(t=[1,0,0,0,1,0,0,0,1],!mp(t,_o,yo,xo,Su))?!1:(Mu.crossVectors(mr,gr),t=[Mu.x,Mu.y,Mu.z],mp(t,_o,yo,xo,Su))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,ss).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(ss).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Fs[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Fs[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Fs[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Fs[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Fs[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Fs[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Fs[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Fs[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Fs),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const Fs=[new B,new B,new B,new B,new B,new B,new B,new B],ss=new B,xu=new On,_o=new B,yo=new B,xo=new B,mr=new B,gr=new B,na=new B,zl=new B,Su=new B,Mu=new B,ia=new B;function mp(s,e,t,n,i){for(let r=0,l=s.length-3;r<=l;r+=3){ia.fromArray(s,r);const c=i.x*Math.abs(ia.x)+i.y*Math.abs(ia.y)+i.z*Math.abs(ia.z),u=e.dot(ia),f=t.dot(ia),d=n.dot(ia);if(Math.max(-Math.max(u,f,d),Math.min(u,f,d))>c)return!1}return!0}const kT=new On,Fl=new B,gp=new B;class Nn{constructor(e=new B,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):kT.setFromPoints(e).getCenter(n);let i=0;for(let r=0,l=e.length;r<l;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Fl.subVectors(e,this.center);const t=Fl.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Fl,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(gp.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Fl.copy(e.center).add(gp)),this.expandByPoint(Fl.copy(e.center).sub(gp))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const Hs=new B,vp=new B,Eu=new B,vr=new B,_p=new B,bu=new B,yp=new B;class il{constructor(e=new B,t=new B(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Hs)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Hs.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Hs.copy(this.origin).addScaledVector(this.direction,t),Hs.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){vp.copy(e).add(t).multiplyScalar(.5),Eu.copy(t).sub(e).normalize(),vr.copy(this.origin).sub(vp);const r=e.distanceTo(t)*.5,l=-this.direction.dot(Eu),c=vr.dot(this.direction),u=-vr.dot(Eu),f=vr.lengthSq(),d=Math.abs(1-l*l);let p,g,v,x;if(d>0)if(p=l*u-c,g=l*c-u,x=r*d,p>=0)if(g>=-x)if(g<=x){const M=1/d;p*=M,g*=M,v=p*(p+l*g+2*c)+g*(l*p+g+2*u)+f}else g=r,p=Math.max(0,-(l*g+c)),v=-p*p+g*(g+2*u)+f;else g=-r,p=Math.max(0,-(l*g+c)),v=-p*p+g*(g+2*u)+f;else g<=-x?(p=Math.max(0,-(-l*r+c)),g=p>0?-r:Math.min(Math.max(-r,-u),r),v=-p*p+g*(g+2*u)+f):g<=x?(p=0,g=Math.min(Math.max(-r,-u),r),v=g*(g+2*u)+f):(p=Math.max(0,-(l*r+c)),g=p>0?r:Math.min(Math.max(-r,-u),r),v=-p*p+g*(g+2*u)+f);else g=l>0?-r:r,p=Math.max(0,-(l*g+c)),v=-p*p+g*(g+2*u)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(vp).addScaledVector(Eu,g),v}intersectSphere(e,t){Hs.subVectors(e.center,this.origin);const n=Hs.dot(this.direction),i=Hs.dot(Hs)-n*n,r=e.radius*e.radius;if(i>r)return null;const l=Math.sqrt(r-i),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,l,c,u;const f=1/this.direction.x,d=1/this.direction.y,p=1/this.direction.z,g=this.origin;return f>=0?(n=(e.min.x-g.x)*f,i=(e.max.x-g.x)*f):(n=(e.max.x-g.x)*f,i=(e.min.x-g.x)*f),d>=0?(r=(e.min.y-g.y)*d,l=(e.max.y-g.y)*d):(r=(e.max.y-g.y)*d,l=(e.min.y-g.y)*d),n>l||r>i||((r>n||isNaN(n))&&(n=r),(l<i||isNaN(i))&&(i=l),p>=0?(c=(e.min.z-g.z)*p,u=(e.max.z-g.z)*p):(c=(e.max.z-g.z)*p,u=(e.min.z-g.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Hs)!==null}intersectTriangle(e,t,n,i,r){_p.subVectors(t,e),bu.subVectors(n,e),yp.crossVectors(_p,bu);let l=this.direction.dot(yp),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;vr.subVectors(this.origin,e);const u=c*this.direction.dot(bu.crossVectors(vr,bu));if(u<0)return null;const f=c*this.direction.dot(_p.cross(vr));if(f<0||u+f>l)return null;const d=-c*vr.dot(yp);return d<0?null:this.at(d/l,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class it{constructor(e,t,n,i,r,l,c,u,f,d,p,g,v,x,M,S){it.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,l,c,u,f,d,p,g,v,x,M,S)}set(e,t,n,i,r,l,c,u,f,d,p,g,v,x,M,S){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=r,_[5]=l,_[9]=c,_[13]=u,_[2]=f,_[6]=d,_[10]=p,_[14]=g,_[3]=v,_[7]=x,_[11]=M,_[15]=S,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new it().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/So.setFromMatrixColumn(e,0).length(),r=1/So.setFromMatrixColumn(e,1).length(),l=1/So.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(i),f=Math.sin(i),d=Math.cos(r),p=Math.sin(r);if(e.order==="XYZ"){const g=l*d,v=l*p,x=c*d,M=c*p;t[0]=u*d,t[4]=-u*p,t[8]=f,t[1]=v+x*f,t[5]=g-M*f,t[9]=-c*u,t[2]=M-g*f,t[6]=x+v*f,t[10]=l*u}else if(e.order==="YXZ"){const g=u*d,v=u*p,x=f*d,M=f*p;t[0]=g+M*c,t[4]=x*c-v,t[8]=l*f,t[1]=l*p,t[5]=l*d,t[9]=-c,t[2]=v*c-x,t[6]=M+g*c,t[10]=l*u}else if(e.order==="ZXY"){const g=u*d,v=u*p,x=f*d,M=f*p;t[0]=g-M*c,t[4]=-l*p,t[8]=x+v*c,t[1]=v+x*c,t[5]=l*d,t[9]=M-g*c,t[2]=-l*f,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const g=l*d,v=l*p,x=c*d,M=c*p;t[0]=u*d,t[4]=x*f-v,t[8]=g*f+M,t[1]=u*p,t[5]=M*f+g,t[9]=v*f-x,t[2]=-f,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const g=l*u,v=l*f,x=c*u,M=c*f;t[0]=u*d,t[4]=M-g*p,t[8]=x*p+v,t[1]=p,t[5]=l*d,t[9]=-c*d,t[2]=-f*d,t[6]=v*p+x,t[10]=g-M*p}else if(e.order==="XZY"){const g=l*u,v=l*f,x=c*u,M=c*f;t[0]=u*d,t[4]=-p,t[8]=f*d,t[1]=g*p+M,t[5]=l*d,t[9]=v*p-x,t[2]=x*p-v,t[6]=c*d,t[10]=M*p+g}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(XT,e,WT)}lookAt(e,t,n){const i=this.elements;return Ai.subVectors(e,t),Ai.lengthSq()===0&&(Ai.z=1),Ai.normalize(),_r.crossVectors(n,Ai),_r.lengthSq()===0&&(Math.abs(n.z)===1?Ai.x+=1e-4:Ai.z+=1e-4,Ai.normalize(),_r.crossVectors(n,Ai)),_r.normalize(),Tu.crossVectors(Ai,_r),i[0]=_r.x,i[4]=Tu.x,i[8]=Ai.x,i[1]=_r.y,i[5]=Tu.y,i[9]=Ai.y,i[2]=_r.z,i[6]=Tu.z,i[10]=Ai.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,l=n[0],c=n[4],u=n[8],f=n[12],d=n[1],p=n[5],g=n[9],v=n[13],x=n[2],M=n[6],S=n[10],_=n[14],b=n[3],T=n[7],A=n[11],U=n[15],D=i[0],P=i[4],I=i[8],w=i[12],R=i[1],F=i[5],j=i[9],k=i[13],J=i[2],se=i[6],V=i[10],$=i[14],W=i[3],le=i[7],me=i[11],ye=i[15];return r[0]=l*D+c*R+u*J+f*W,r[4]=l*P+c*F+u*se+f*le,r[8]=l*I+c*j+u*V+f*me,r[12]=l*w+c*k+u*$+f*ye,r[1]=d*D+p*R+g*J+v*W,r[5]=d*P+p*F+g*se+v*le,r[9]=d*I+p*j+g*V+v*me,r[13]=d*w+p*k+g*$+v*ye,r[2]=x*D+M*R+S*J+_*W,r[6]=x*P+M*F+S*se+_*le,r[10]=x*I+M*j+S*V+_*me,r[14]=x*w+M*k+S*$+_*ye,r[3]=b*D+T*R+A*J+U*W,r[7]=b*P+T*F+A*se+U*le,r[11]=b*I+T*j+A*V+U*me,r[15]=b*w+T*k+A*$+U*ye,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],l=e[1],c=e[5],u=e[9],f=e[13],d=e[2],p=e[6],g=e[10],v=e[14],x=e[3],M=e[7],S=e[11],_=e[15];return x*(+r*u*p-i*f*p-r*c*g+n*f*g+i*c*v-n*u*v)+M*(+t*u*v-t*f*g+r*l*g-i*l*v+i*f*d-r*u*d)+S*(+t*f*p-t*c*v-r*l*p+n*l*v+r*c*d-n*f*d)+_*(-i*c*d-t*u*p+t*c*g+i*l*p-n*l*g+n*u*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],l=e[4],c=e[5],u=e[6],f=e[7],d=e[8],p=e[9],g=e[10],v=e[11],x=e[12],M=e[13],S=e[14],_=e[15],b=p*S*f-M*g*f+M*u*v-c*S*v-p*u*_+c*g*_,T=x*g*f-d*S*f-x*u*v+l*S*v+d*u*_-l*g*_,A=d*M*f-x*p*f+x*c*v-l*M*v-d*c*_+l*p*_,U=x*p*u-d*M*u-x*c*g+l*M*g+d*c*S-l*p*S,D=t*b+n*T+i*A+r*U;if(D===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/D;return e[0]=b*P,e[1]=(M*g*r-p*S*r-M*i*v+n*S*v+p*i*_-n*g*_)*P,e[2]=(c*S*r-M*u*r+M*i*f-n*S*f-c*i*_+n*u*_)*P,e[3]=(p*u*r-c*g*r-p*i*f+n*g*f+c*i*v-n*u*v)*P,e[4]=T*P,e[5]=(d*S*r-x*g*r+x*i*v-t*S*v-d*i*_+t*g*_)*P,e[6]=(x*u*r-l*S*r-x*i*f+t*S*f+l*i*_-t*u*_)*P,e[7]=(l*g*r-d*u*r+d*i*f-t*g*f-l*i*v+t*u*v)*P,e[8]=A*P,e[9]=(x*p*r-d*M*r-x*n*v+t*M*v+d*n*_-t*p*_)*P,e[10]=(l*M*r-x*c*r+x*n*f-t*M*f-l*n*_+t*c*_)*P,e[11]=(d*c*r-l*p*r-d*n*f+t*p*f+l*n*v-t*c*v)*P,e[12]=U*P,e[13]=(d*M*i-x*p*i+x*n*g-t*M*g-d*n*S+t*p*S)*P,e[14]=(x*c*i-l*M*i-x*n*u+t*M*u+l*n*S-t*c*S)*P,e[15]=(l*p*i-d*c*i+d*n*u-t*p*u-l*n*g+t*c*g)*P,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,l=e.x,c=e.y,u=e.z,f=r*l,d=r*c;return this.set(f*l+n,f*c-i*u,f*u+i*c,0,f*c+i*u,d*c+n,d*u-i*l,0,f*u-i*c,d*u+i*l,r*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,l){return this.set(1,n,r,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,l=t._y,c=t._z,u=t._w,f=r+r,d=l+l,p=c+c,g=r*f,v=r*d,x=r*p,M=l*d,S=l*p,_=c*p,b=u*f,T=u*d,A=u*p,U=n.x,D=n.y,P=n.z;return i[0]=(1-(M+_))*U,i[1]=(v+A)*U,i[2]=(x-T)*U,i[3]=0,i[4]=(v-A)*D,i[5]=(1-(g+_))*D,i[6]=(S+b)*D,i[7]=0,i[8]=(x+T)*P,i[9]=(S-b)*P,i[10]=(1-(g+M))*P,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=So.set(i[0],i[1],i[2]).length();const l=So.set(i[4],i[5],i[6]).length(),c=So.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],rs.copy(this);const f=1/r,d=1/l,p=1/c;return rs.elements[0]*=f,rs.elements[1]*=f,rs.elements[2]*=f,rs.elements[4]*=d,rs.elements[5]*=d,rs.elements[6]*=d,rs.elements[8]*=p,rs.elements[9]*=p,rs.elements[10]*=p,t.setFromRotationMatrix(rs),n.x=r,n.y=l,n.z=c,this}makePerspective(e,t,n,i,r,l,c=ji){const u=this.elements,f=2*r/(t-e),d=2*r/(n-i),p=(t+e)/(t-e),g=(n+i)/(n-i);let v,x;if(c===ji)v=-(l+r)/(l-r),x=-2*l*r/(l-r);else if(c===gc)v=-l/(l-r),x=-l*r/(l-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=f,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=d,u[9]=g,u[13]=0,u[2]=0,u[6]=0,u[10]=v,u[14]=x,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,r,l,c=ji){const u=this.elements,f=1/(t-e),d=1/(n-i),p=1/(l-r),g=(t+e)*f,v=(n+i)*d;let x,M;if(c===ji)x=(l+r)*p,M=-2*p;else if(c===gc)x=r*p,M=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*f,u[4]=0,u[8]=0,u[12]=-g,u[1]=0,u[5]=2*d,u[9]=0,u[13]=-v,u[2]=0,u[6]=0,u[10]=M,u[14]=-x,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const So=new B,rs=new it,XT=new B(0,0,0),WT=new B(1,1,1),_r=new B,Tu=new B,Ai=new B,t_=new it,n_=new Zn;class Ui{constructor(e=0,t=0,n=0,i=Ui.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],l=i[4],c=i[8],u=i[1],f=i[5],d=i[9],p=i[2],g=i[6],v=i[10];switch(t){case"XYZ":this._y=Math.asin(dt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,v),this._z=Math.atan2(-l,r)):(this._x=Math.atan2(g,f),this._z=0);break;case"YXZ":this._x=Math.asin(-dt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(u,f)):(this._y=Math.atan2(-p,r),this._z=0);break;case"ZXY":this._x=Math.asin(dt(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-p,v),this._z=Math.atan2(-l,f)):(this._y=0,this._z=Math.atan2(u,r));break;case"ZYX":this._y=Math.asin(-dt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(g,v),this._z=Math.atan2(u,r)):(this._x=0,this._z=Math.atan2(-l,f));break;case"YZX":this._z=Math.asin(dt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,f),this._y=Math.atan2(-p,r)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-dt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(g,f),this._y=Math.atan2(c,r)):(this._x=Math.atan2(-d,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return t_.makeRotationFromQuaternion(e),this.setFromRotationMatrix(t_,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return n_.setFromEuler(this),this.setFromQuaternion(n_,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ui.DEFAULT_ORDER="XYZ";class Jo{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let qT=0;const i_=new B,Mo=new Zn,Vs=new it,Au=new B,Hl=new B,YT=new B,KT=new Zn,s_=new B(1,0,0),r_=new B(0,1,0),a_=new B(0,0,1),o_={type:"added"},jT={type:"removed"},Eo={type:"childadded",child:null},xp={type:"childremoved",child:null};class wt extends Pi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:qT++}),this.uuid=Li(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=wt.DEFAULT_UP.clone();const e=new B,t=new Ui,n=new Zn,i=new B(1,1,1);function r(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new it},normalMatrix:{value:new mt}}),this.matrix=new it,this.matrixWorld=new it,this.matrixAutoUpdate=wt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=wt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Jo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Mo.setFromAxisAngle(e,t),this.quaternion.multiply(Mo),this}rotateOnWorldAxis(e,t){return Mo.setFromAxisAngle(e,t),this.quaternion.premultiply(Mo),this}rotateX(e){return this.rotateOnAxis(s_,e)}rotateY(e){return this.rotateOnAxis(r_,e)}rotateZ(e){return this.rotateOnAxis(a_,e)}translateOnAxis(e,t){return i_.copy(e).applyQuaternion(this.quaternion),this.position.add(i_.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(s_,e)}translateY(e){return this.translateOnAxis(r_,e)}translateZ(e){return this.translateOnAxis(a_,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Vs.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Au.copy(e):Au.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Hl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Vs.lookAt(Hl,Au,this.up):Vs.lookAt(Au,Hl,this.up),this.quaternion.setFromRotationMatrix(Vs),i&&(Vs.extractRotation(i.matrixWorld),Mo.setFromRotationMatrix(Vs),this.quaternion.premultiply(Mo.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(o_),Eo.child=e,this.dispatchEvent(Eo),Eo.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(jT),xp.child=e,this.dispatchEvent(xp),xp.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Vs.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Vs.multiply(e.parent.matrixWorld)),e.applyMatrix4(Vs),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(o_),Eo.child=e,this.dispatchEvent(Eo),Eo.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let r=0,l=i.length;r<l;r++)i[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Hl,e,YT),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Hl,KT,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let r=0,l=i.length;r<l;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(c=>({...c,boundingBox:c.boundingBox?c.boundingBox.toJSON():void 0,boundingSphere:c.boundingSphere?c.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(c=>({...c})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(e),i.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function r(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let f=0,d=u.length;f<d;f++){const p=u[f];r(e.shapes,p)}else r(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,f=this.material.length;u<f;u++)c.push(r(e.materials,this.material[u]));i.material=c}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(r(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),f=l(e.textures),d=l(e.images),p=l(e.shapes),g=l(e.skeletons),v=l(e.animations),x=l(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),f.length>0&&(n.textures=f),d.length>0&&(n.images=d),p.length>0&&(n.shapes=p),g.length>0&&(n.skeletons=g),v.length>0&&(n.animations=v),x.length>0&&(n.nodes=x)}return n.object=i,n;function l(c){const u=[];for(const f in c){const d=c[f];delete d.metadata,u.push(d)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}wt.DEFAULT_UP=new B(0,1,0);wt.DEFAULT_MATRIX_AUTO_UPDATE=!0;wt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const as=new B,Gs=new B,Sp=new B,ks=new B,bo=new B,To=new B,l_=new B,Mp=new B,Ep=new B,bp=new B,Tp=new Lt,Ap=new Lt,Rp=new Lt;class pi{constructor(e=new B,t=new B,n=new B){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),as.subVectors(e,t),i.cross(as);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){as.subVectors(i,t),Gs.subVectors(n,t),Sp.subVectors(e,t);const l=as.dot(as),c=as.dot(Gs),u=as.dot(Sp),f=Gs.dot(Gs),d=Gs.dot(Sp),p=l*f-c*c;if(p===0)return r.set(0,0,0),null;const g=1/p,v=(f*u-c*d)*g,x=(l*d-c*u)*g;return r.set(1-v-x,x,v)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,ks)===null?!1:ks.x>=0&&ks.y>=0&&ks.x+ks.y<=1}static getInterpolation(e,t,n,i,r,l,c,u){return this.getBarycoord(e,t,n,i,ks)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(r,ks.x),u.addScaledVector(l,ks.y),u.addScaledVector(c,ks.z),u)}static getInterpolatedAttribute(e,t,n,i,r,l){return Tp.setScalar(0),Ap.setScalar(0),Rp.setScalar(0),Tp.fromBufferAttribute(e,t),Ap.fromBufferAttribute(e,n),Rp.fromBufferAttribute(e,i),l.setScalar(0),l.addScaledVector(Tp,r.x),l.addScaledVector(Ap,r.y),l.addScaledVector(Rp,r.z),l}static isFrontFacing(e,t,n,i){return as.subVectors(n,t),Gs.subVectors(e,t),as.cross(Gs).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return as.subVectors(this.c,this.b),Gs.subVectors(this.a,this.b),as.cross(Gs).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return pi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return pi.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,r){return pi.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return pi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return pi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let l,c;bo.subVectors(i,n),To.subVectors(r,n),Mp.subVectors(e,n);const u=bo.dot(Mp),f=To.dot(Mp);if(u<=0&&f<=0)return t.copy(n);Ep.subVectors(e,i);const d=bo.dot(Ep),p=To.dot(Ep);if(d>=0&&p<=d)return t.copy(i);const g=u*p-d*f;if(g<=0&&u>=0&&d<=0)return l=u/(u-d),t.copy(n).addScaledVector(bo,l);bp.subVectors(e,r);const v=bo.dot(bp),x=To.dot(bp);if(x>=0&&v<=x)return t.copy(r);const M=v*f-u*x;if(M<=0&&f>=0&&x<=0)return c=f/(f-x),t.copy(n).addScaledVector(To,c);const S=d*x-v*p;if(S<=0&&p-d>=0&&v-x>=0)return l_.subVectors(r,i),c=(p-d)/(p-d+(v-x)),t.copy(i).addScaledVector(l_,c);const _=1/(S+M+g);return l=M*_,c=g*_,t.copy(n).addScaledVector(bo,l).addScaledVector(To,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const iS={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},yr={h:0,s:0,l:0},Ru={h:0,s:0,l:0};function wp(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class Re{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=kt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,bt.colorSpaceToWorking(this,t),this}setRGB(e,t,n,i=bt.workingColorSpace){return this.r=e,this.g=t,this.b=n,bt.colorSpaceToWorking(this,i),this}setHSL(e,t,n,i=bt.workingColorSpace){if(e=rg(e,1),t=dt(t,0,1),n=dt(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,l=2*n-r;this.r=wp(l,r,e+1/3),this.g=wp(l,r,e),this.b=wp(l,r,e-1/3)}return bt.colorSpaceToWorking(this,i),this}setStyle(e,t=kt){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],l=r.length;if(l===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=kt){const n=iS[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=js(e.r),this.g=js(e.g),this.b=js(e.b),this}copyLinearToSRGB(e){return this.r=ko(e.r),this.g=ko(e.g),this.b=ko(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=kt){return bt.workingToColorSpace(qn.copy(this),e),Math.round(dt(qn.r*255,0,255))*65536+Math.round(dt(qn.g*255,0,255))*256+Math.round(dt(qn.b*255,0,255))}getHexString(e=kt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=bt.workingColorSpace){bt.workingToColorSpace(qn.copy(this),t);const n=qn.r,i=qn.g,r=qn.b,l=Math.max(n,i,r),c=Math.min(n,i,r);let u,f;const d=(c+l)/2;if(c===l)u=0,f=0;else{const p=l-c;switch(f=d<=.5?p/(l+c):p/(2-l-c),l){case n:u=(i-r)/p+(i<r?6:0);break;case i:u=(r-n)/p+2;break;case r:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=f,e.l=d,e}getRGB(e,t=bt.workingColorSpace){return bt.workingToColorSpace(qn.copy(this),t),e.r=qn.r,e.g=qn.g,e.b=qn.b,e}getStyle(e=kt){bt.workingToColorSpace(qn.copy(this),e);const t=qn.r,n=qn.g,i=qn.b;return e!==kt?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(yr),this.setHSL(yr.h+e,yr.s+t,yr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(yr),e.getHSL(Ru);const n=ac(yr.h,Ru.h,t),i=ac(yr.s,Ru.s,t),r=ac(yr.l,Ru.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const qn=new Re;Re.NAMES=iS;let ZT=0;class gn extends Pi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:ZT++}),this.uuid=Li(),this.name="",this.type="Material",this.blending=Ta,this.side=fs,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=_h,this.blendDst=yh,this.blendEquation=Tr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Re(0,0,0),this.blendAlpha=0,this.depthFunc=Da,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Am,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=va,this.stencilZFail=va,this.stencilZPass=va,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ta&&(n.blending=this.blending),this.side!==fs&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==_h&&(n.blendSrc=this.blendSrc),this.blendDst!==yh&&(n.blendDst=this.blendDst),this.blendEquation!==Tr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Da&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Am&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==va&&(n.stencilFail=this.stencilFail),this.stencilZFail!==va&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==va&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const l=[];for(const c in r){const u=r[c];delete u.metadata,l.push(u)}return l}if(t){const r=i(e.textures),l=i(e.images);r.length>0&&(n.textures=r),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Ni extends gn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Re(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ui,this.combine=bc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Ys=JT();function JT(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const f=u-127;f<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):f<-14?(n[u]=1024>>-f-14,n[u|256]=1024>>-f-14|32768,i[u]=-f-1,i[u|256]=-f-1):f<=15?(n[u]=f+15<<10,n[u|256]=f+15<<10|32768,i[u]=13,i[u|256]=13):f<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const r=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let f=u<<13,d=0;for(;(f&8388608)===0;)f<<=1,d-=8388608;f&=-8388609,d+=947912704,r[u]=f|d}for(let u=1024;u<2048;++u)r[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:l,offsetTable:c}}function di(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=dt(s,-65504,65504),Ys.floatView[0]=s;const e=Ys.uint32View[0],t=e>>23&511;return Ys.baseTable[t]+((e&8388607)>>Ys.shiftTable[t])}function Jl(s){const e=s>>10;return Ys.uint32View[0]=Ys.mantissaTable[Ys.offsetTable[e]+(s&1023)]+Ys.exponentTable[e],Ys.floatView[0]}class QT{static toHalfFloat(e){return di(e)}static fromHalfFloat(e){return Jl(e)}}const yn=new B,wu=new oe;let $T=0;class Ut{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:$T++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=mc,this.updateRanges=[],this.gpuType=Kn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)wu.fromBufferAttribute(this,t),wu.applyMatrix3(e),this.setXY(t,wu.x,wu.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)yn.fromBufferAttribute(this,t),yn.applyMatrix3(e),this.setXYZ(t,yn.x,yn.y,yn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)yn.fromBufferAttribute(this,t),yn.applyMatrix4(e),this.setXYZ(t,yn.x,yn.y,yn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)yn.fromBufferAttribute(this,t),yn.applyNormalMatrix(e),this.setXYZ(t,yn.x,yn.y,yn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)yn.fromBufferAttribute(this,t),yn.transformDirection(e),this.setXYZ(t,yn.x,yn.y,yn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=ai(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=vt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=ai(t,this.array)),t}setX(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=ai(t,this.array)),t}setY(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=ai(t,this.array)),t}setZ(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=ai(t,this.array)),t}setW(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array),r=vt(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==mc&&(e.usage=this.usage),e}}class e1 extends Ut{constructor(e,t,n){super(new Int8Array(e),t,n)}}class t1 extends Ut{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class n1 extends Ut{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class i1 extends Ut{constructor(e,t,n){super(new Int16Array(e),t,n)}}class og extends Ut{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class s1 extends Ut{constructor(e,t,n){super(new Int32Array(e),t,n)}}class lg extends Ut{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class r1 extends Ut{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Jl(this.array[e*this.itemSize]);return this.normalized&&(t=ai(t,this.array)),t}setX(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize]=di(t),this}getY(e){let t=Jl(this.array[e*this.itemSize+1]);return this.normalized&&(t=ai(t,this.array)),t}setY(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+1]=di(t),this}getZ(e){let t=Jl(this.array[e*this.itemSize+2]);return this.normalized&&(t=ai(t,this.array)),t}setZ(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+2]=di(t),this}getW(e){let t=Jl(this.array[e*this.itemSize+3]);return this.normalized&&(t=ai(t,this.array)),t}setW(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+3]=di(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array)),this.array[e+0]=di(t),this.array[e+1]=di(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array)),this.array[e+0]=di(t),this.array[e+1]=di(n),this.array[e+2]=di(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array),r=vt(r,this.array)),this.array[e+0]=di(t),this.array[e+1]=di(n),this.array[e+2]=di(i),this.array[e+3]=di(r),this}}class Ye extends Ut{constructor(e,t,n){super(new Float32Array(e),t,n)}}let a1=0;const qi=new it,Cp=new wt,Ao=new B,Ri=new On,Vl=new On,Dn=new B;class pt extends Pi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:a1++}),this.uuid=Li(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(eS(e)?lg:og)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new mt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return qi.makeRotationFromQuaternion(e),this.applyMatrix4(qi),this}rotateX(e){return qi.makeRotationX(e),this.applyMatrix4(qi),this}rotateY(e){return qi.makeRotationY(e),this.applyMatrix4(qi),this}rotateZ(e){return qi.makeRotationZ(e),this.applyMatrix4(qi),this}translate(e,t,n){return qi.makeTranslation(e,t,n),this.applyMatrix4(qi),this}scale(e,t,n){return qi.makeScale(e,t,n),this.applyMatrix4(qi),this}lookAt(e){return Cp.lookAt(e),Cp.updateMatrix(),this.applyMatrix4(Cp.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ao).negate(),this.translate(Ao.x,Ao.y,Ao.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,r=e.length;i<r;i++){const l=e[i];n.push(l.x,l.y,l.z||0)}this.setAttribute("position",new Ye(n,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const r=e[i];t.setXYZ(i,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new On);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new B(-1/0,-1/0,-1/0),new B(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Ri.setFromBufferAttribute(r),this.morphTargetsRelative?(Dn.addVectors(this.boundingBox.min,Ri.min),this.boundingBox.expandByPoint(Dn),Dn.addVectors(this.boundingBox.max,Ri.max),this.boundingBox.expandByPoint(Dn)):(this.boundingBox.expandByPoint(Ri.min),this.boundingBox.expandByPoint(Ri.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Nn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new B,1/0);return}if(e){const n=this.boundingSphere.center;if(Ri.setFromBufferAttribute(e),t)for(let r=0,l=t.length;r<l;r++){const c=t[r];Vl.setFromBufferAttribute(c),this.morphTargetsRelative?(Dn.addVectors(Ri.min,Vl.min),Ri.expandByPoint(Dn),Dn.addVectors(Ri.max,Vl.max),Ri.expandByPoint(Dn)):(Ri.expandByPoint(Vl.min),Ri.expandByPoint(Vl.max))}Ri.getCenter(n);let i=0;for(let r=0,l=e.count;r<l;r++)Dn.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(Dn));if(t)for(let r=0,l=t.length;r<l;r++){const c=t[r],u=this.morphTargetsRelative;for(let f=0,d=c.count;f<d;f++)Dn.fromBufferAttribute(c,f),u&&(Ao.fromBufferAttribute(e,f),Dn.add(Ao)),i=Math.max(i,n.distanceToSquared(Dn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ut(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],u=[];for(let I=0;I<n.count;I++)c[I]=new B,u[I]=new B;const f=new B,d=new B,p=new B,g=new oe,v=new oe,x=new oe,M=new B,S=new B;function _(I,w,R){f.fromBufferAttribute(n,I),d.fromBufferAttribute(n,w),p.fromBufferAttribute(n,R),g.fromBufferAttribute(r,I),v.fromBufferAttribute(r,w),x.fromBufferAttribute(r,R),d.sub(f),p.sub(f),v.sub(g),x.sub(g);const F=1/(v.x*x.y-x.x*v.y);isFinite(F)&&(M.copy(d).multiplyScalar(x.y).addScaledVector(p,-v.y).multiplyScalar(F),S.copy(p).multiplyScalar(v.x).addScaledVector(d,-x.x).multiplyScalar(F),c[I].add(M),c[w].add(M),c[R].add(M),u[I].add(S),u[w].add(S),u[R].add(S))}let b=this.groups;b.length===0&&(b=[{start:0,count:e.count}]);for(let I=0,w=b.length;I<w;++I){const R=b[I],F=R.start,j=R.count;for(let k=F,J=F+j;k<J;k+=3)_(e.getX(k+0),e.getX(k+1),e.getX(k+2))}const T=new B,A=new B,U=new B,D=new B;function P(I){U.fromBufferAttribute(i,I),D.copy(U);const w=c[I];T.copy(w),T.sub(U.multiplyScalar(U.dot(w))).normalize(),A.crossVectors(D,w);const F=A.dot(u[I])<0?-1:1;l.setXYZW(I,T.x,T.y,T.z,F)}for(let I=0,w=b.length;I<w;++I){const R=b[I],F=R.start,j=R.count;for(let k=F,J=F+j;k<J;k+=3)P(e.getX(k+0)),P(e.getX(k+1)),P(e.getX(k+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Ut(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let g=0,v=n.count;g<v;g++)n.setXYZ(g,0,0,0);const i=new B,r=new B,l=new B,c=new B,u=new B,f=new B,d=new B,p=new B;if(e)for(let g=0,v=e.count;g<v;g+=3){const x=e.getX(g+0),M=e.getX(g+1),S=e.getX(g+2);i.fromBufferAttribute(t,x),r.fromBufferAttribute(t,M),l.fromBufferAttribute(t,S),d.subVectors(l,r),p.subVectors(i,r),d.cross(p),c.fromBufferAttribute(n,x),u.fromBufferAttribute(n,M),f.fromBufferAttribute(n,S),c.add(d),u.add(d),f.add(d),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(S,f.x,f.y,f.z)}else for(let g=0,v=t.count;g<v;g+=3)i.fromBufferAttribute(t,g+0),r.fromBufferAttribute(t,g+1),l.fromBufferAttribute(t,g+2),d.subVectors(l,r),p.subVectors(i,r),d.cross(p),n.setXYZ(g+0,d.x,d.y,d.z),n.setXYZ(g+1,d.x,d.y,d.z),n.setXYZ(g+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Dn.fromBufferAttribute(e,t),Dn.normalize(),e.setXYZ(t,Dn.x,Dn.y,Dn.z)}toNonIndexed(){function e(c,u){const f=c.array,d=c.itemSize,p=c.normalized,g=new f.constructor(u.length*d);let v=0,x=0;for(let M=0,S=u.length;M<S;M++){c.isInterleavedBufferAttribute?v=u[M]*c.data.stride+c.offset:v=u[M]*d;for(let _=0;_<d;_++)g[x++]=f[v++]}return new Ut(g,d,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new pt,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],f=e(u,n);t.setAttribute(c,f)}const r=this.morphAttributes;for(const c in r){const u=[],f=r[c];for(let d=0,p=f.length;d<p;d++){const g=f[d],v=e(g,n);u.push(v)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const f=l[c];t.addGroup(f.start,f.count,f.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const f in u)u[f]!==void 0&&(e[f]=u[f]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const f=n[u];e.data.attributes[u]=f.toJSON(e.data)}const i={};let r=!1;for(const u in this.morphAttributes){const f=this.morphAttributes[u],d=[];for(let p=0,g=f.length;p<g;p++){const v=f[p];d.push(v.toJSON(e.data))}d.length>0&&(i[u]=d,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere=c.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const i=e.attributes;for(const f in i){const d=i[f];this.setAttribute(f,d.clone(t))}const r=e.morphAttributes;for(const f in r){const d=[],p=r[f];for(let g=0,v=p.length;g<v;g++)d.push(p[g].clone(t));this.morphAttributes[f]=d}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let f=0,d=l.length;f<d;f++){const p=l[f];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const c_=new it,sa=new il,Cu=new Nn,u_=new B,Du=new B,Nu=new B,Lu=new B,Dp=new B,Uu=new B,h_=new B,Pu=new B;class pn extends wt{constructor(e=new pt,t=new Ni){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,l=i.length;r<l;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(r&&c){Uu.set(0,0,0);for(let u=0,f=r.length;u<f;u++){const d=c[u],p=r[u];d!==0&&(Dp.fromBufferAttribute(p,e),l?Uu.addScaledVector(Dp,d):Uu.addScaledVector(Dp.sub(t),d))}t.add(Uu)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Cu.copy(n.boundingSphere),Cu.applyMatrix4(r),sa.copy(e.ray).recast(e.near),!(Cu.containsPoint(sa.origin)===!1&&(sa.intersectSphere(Cu,u_)===null||sa.origin.distanceToSquared(u_)>(e.far-e.near)**2))&&(c_.copy(r).invert(),sa.copy(e.ray).applyMatrix4(c_),!(n.boundingBox!==null&&sa.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,sa)))}_computeIntersections(e,t,n){let i;const r=this.geometry,l=this.material,c=r.index,u=r.attributes.position,f=r.attributes.uv,d=r.attributes.uv1,p=r.attributes.normal,g=r.groups,v=r.drawRange;if(c!==null)if(Array.isArray(l))for(let x=0,M=g.length;x<M;x++){const S=g[x],_=l[S.materialIndex],b=Math.max(S.start,v.start),T=Math.min(c.count,Math.min(S.start+S.count,v.start+v.count));for(let A=b,U=T;A<U;A+=3){const D=c.getX(A),P=c.getX(A+1),I=c.getX(A+2);i=Iu(this,_,e,n,f,d,p,D,P,I),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=S.materialIndex,t.push(i))}}else{const x=Math.max(0,v.start),M=Math.min(c.count,v.start+v.count);for(let S=x,_=M;S<_;S+=3){const b=c.getX(S),T=c.getX(S+1),A=c.getX(S+2);i=Iu(this,l,e,n,f,d,p,b,T,A),i&&(i.faceIndex=Math.floor(S/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(l))for(let x=0,M=g.length;x<M;x++){const S=g[x],_=l[S.materialIndex],b=Math.max(S.start,v.start),T=Math.min(u.count,Math.min(S.start+S.count,v.start+v.count));for(let A=b,U=T;A<U;A+=3){const D=A,P=A+1,I=A+2;i=Iu(this,_,e,n,f,d,p,D,P,I),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=S.materialIndex,t.push(i))}}else{const x=Math.max(0,v.start),M=Math.min(u.count,v.start+v.count);for(let S=x,_=M;S<_;S+=3){const b=S,T=S+1,A=S+2;i=Iu(this,l,e,n,f,d,p,b,T,A),i&&(i.faceIndex=Math.floor(S/3),t.push(i))}}}}function o1(s,e,t,n,i,r,l,c){let u;if(e.side===En?u=n.intersectTriangle(l,r,i,!0,c):u=n.intersectTriangle(i,r,l,e.side===fs,c),u===null)return null;Pu.copy(c),Pu.applyMatrix4(s.matrixWorld);const f=t.ray.origin.distanceTo(Pu);return f<t.near||f>t.far?null:{distance:f,point:Pu.clone(),object:s}}function Iu(s,e,t,n,i,r,l,c,u,f){s.getVertexPosition(c,Du),s.getVertexPosition(u,Nu),s.getVertexPosition(f,Lu);const d=o1(s,e,t,n,Du,Nu,Lu,h_);if(d){const p=new B;pi.getBarycoord(h_,Du,Nu,Lu,p),i&&(d.uv=pi.getInterpolatedAttribute(i,c,u,f,p,new oe)),r&&(d.uv1=pi.getInterpolatedAttribute(r,c,u,f,p,new oe)),l&&(d.normal=pi.getInterpolatedAttribute(l,c,u,f,p,new B),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const g={a:c,b:u,c:f,normal:new B,materialIndex:0};pi.getNormal(Du,Nu,Lu,g.normal),d.face=g,d.barycoord=p}return d}class Ha extends pt{constructor(e=1,t=1,n=1,i=1,r=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:l};const c=this;i=Math.floor(i),r=Math.floor(r),l=Math.floor(l);const u=[],f=[],d=[],p=[];let g=0,v=0;x("z","y","x",-1,-1,n,t,e,l,r,0),x("z","y","x",1,-1,n,t,-e,l,r,1),x("x","z","y",1,1,e,n,t,i,l,2),x("x","z","y",1,-1,e,n,-t,i,l,3),x("x","y","z",1,-1,e,t,n,i,r,4),x("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(u),this.setAttribute("position",new Ye(f,3)),this.setAttribute("normal",new Ye(d,3)),this.setAttribute("uv",new Ye(p,2));function x(M,S,_,b,T,A,U,D,P,I,w){const R=A/P,F=U/I,j=A/2,k=U/2,J=D/2,se=P+1,V=I+1;let $=0,W=0;const le=new B;for(let me=0;me<V;me++){const ye=me*F-k;for(let Pe=0;Pe<se;Pe++){const Je=Pe*R-j;le[M]=Je*b,le[S]=ye*T,le[_]=J,f.push(le.x,le.y,le.z),le[M]=0,le[S]=0,le[_]=D>0?1:-1,d.push(le.x,le.y,le.z),p.push(Pe/P),p.push(1-me/I),$+=1}}for(let me=0;me<I;me++)for(let ye=0;ye<P;ye++){const Pe=g+ye+se*me,Je=g+ye+se*(me+1),te=g+(ye+1)+se*(me+1),xe=g+(ye+1)+se*me;u.push(Pe,Je,xe),u.push(Je,te,xe),W+=6}c.addGroup(v,W,w),v+=W,g+=$}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ha(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Qo(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function ii(s){const e={};for(let t=0;t<s.length;t++){const n=Qo(s[t]);for(const i in n)e[i]=n[i]}return e}function l1(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function sS(s){const e=s.getRenderTarget();return e===null?s.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:bt.workingColorSpace}const rS={clone:Qo,merge:ii};var c1=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,u1=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class zn extends gn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=c1,this.fragmentShader=u1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Qo(e.uniforms),this.uniformsGroups=l1(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Ac extends wt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new it,this.projectionMatrix=new it,this.projectionMatrixInverse=new it,this.coordinateSystem=ji}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const xr=new B,f_=new oe,d_=new oe;class xn extends Ac{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Zo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Aa*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Zo*2*Math.atan(Math.tan(Aa*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){xr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(xr.x,xr.y).multiplyScalar(-e/xr.z),xr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(xr.x,xr.y).multiplyScalar(-e/xr.z)}getViewSize(e,t){return this.getViewBounds(e,f_,d_),t.subVectors(d_,f_)}setViewOffset(e,t,n,i,r,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Aa*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,f=l.fullHeight;r+=l.offsetX*i/u,t-=l.offsetY*n/f,i*=l.width/u,n*=l.height/f}const c=this.filmOffset;c!==0&&(r+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Ro=-90,wo=1;class aS extends wt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new xn(Ro,wo,e,t);i.layers=this.layers,this.add(i);const r=new xn(Ro,wo,e,t);r.layers=this.layers,this.add(r);const l=new xn(Ro,wo,e,t);l.layers=this.layers,this.add(l);const c=new xn(Ro,wo,e,t);c.layers=this.layers,this.add(c);const u=new xn(Ro,wo,e,t);u.layers=this.layers,this.add(u);const f=new xn(Ro,wo,e,t);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,l,c,u]=t;for(const f of t)this.remove(f);if(e===ji)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===gc)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const f of t)this.add(f),f.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,l,c,u,f,d]=this.children,p=e.getRenderTarget(),g=e.getActiveCubeFace(),v=e.getActiveMipmapLevel(),x=e.xr.enabled;e.xr.enabled=!1;const M=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,r),e.setRenderTarget(n,1,i),e.render(t,l),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,f),n.texture.generateMipmaps=M,e.setRenderTarget(n,5,i),e.render(t,d),e.setRenderTarget(p,g,v),e.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class Rc extends nn{constructor(e=[],t=Js,n,i,r,l,c,u,f,d){super(e,t,n,i,r,l,c,u,f,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class oS extends Sn{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Rc(i),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Ha(5,5,5),r=new zn({name:"CubemapFromEquirect",uniforms:Qo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:En,blending:mi});r.uniforms.tEquirect.value=t;const l=new pn(i,r),c=t.minFilter;return t.minFilter===Di&&(t.minFilter=jt),new aS(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t=!0,n=!0,i=!0){const r=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(r)}}class Ks extends wt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const h1={type:"move"};class ph{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Ks,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Ks,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new B,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new B),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Ks,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new B,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new B),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,l=null;const c=this._targetRay,u=this._grip,f=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(f&&e.hand){l=!0;for(const M of e.hand.values()){const S=t.getJointPose(M,n),_=this._getHandJoint(f,M);S!==null&&(_.matrix.fromArray(S.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=S.radius),_.visible=S!==null}const d=f.joints["index-finger-tip"],p=f.joints["thumb-tip"],g=d.position.distanceTo(p.position),v=.02,x=.005;f.inputState.pinching&&g>v+x?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!f.inputState.pinching&&g<=v-x&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(u.matrix.fromArray(r.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,r.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(r.linearVelocity)):u.hasLinearVelocity=!1,r.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(r.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(h1)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=r!==null),f!==null&&(f.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Ks;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Sf{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Re(e),this.density=t}clone(){return new Sf(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Mf{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Re(e),this.near=t,this.far=n}clone(){return new Mf(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class _c extends wt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ui,this.environmentIntensity=1,this.environmentRotation=new Ui,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class wc{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=mc,this.updateRanges=[],this.version=0,this.uuid=Li()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Li()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Li()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const ni=new B;class Nr{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)ni.fromBufferAttribute(this,t),ni.applyMatrix4(e),this.setXYZ(t,ni.x,ni.y,ni.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)ni.fromBufferAttribute(this,t),ni.applyNormalMatrix(e),this.setXYZ(t,ni.x,ni.y,ni.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)ni.fromBufferAttribute(this,t),ni.transformDirection(e),this.setXYZ(t,ni.x,ni.y,ni.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=ai(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=vt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=vt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=vt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=vt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=vt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=ai(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=ai(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=ai(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=ai(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array),r=vt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Ut(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Nr(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class cg extends gn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Re(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Co;const Gl=new B,Do=new B,No=new B,Lo=new oe,kl=new oe,lS=new it,Ou=new B,Xl=new B,Bu=new B,p_=new oe,Np=new oe,m_=new oe;class cS extends wt{constructor(e=new cg){if(super(),this.isSprite=!0,this.type="Sprite",Co===void 0){Co=new pt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new wc(t,5);Co.setIndex([0,1,2,0,2,3]),Co.setAttribute("position",new Nr(n,3,0,!1)),Co.setAttribute("uv",new Nr(n,2,3,!1))}this.geometry=Co,this.material=e,this.center=new oe(.5,.5),this.count=1}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Do.setFromMatrixScale(this.matrixWorld),lS.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),No.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Do.multiplyScalar(-No.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const l=this.center;zu(Ou.set(-.5,-.5,0),No,l,Do,i,r),zu(Xl.set(.5,-.5,0),No,l,Do,i,r),zu(Bu.set(.5,.5,0),No,l,Do,i,r),p_.set(0,0),Np.set(1,0),m_.set(1,1);let c=e.ray.intersectTriangle(Ou,Xl,Bu,!1,Gl);if(c===null&&(zu(Xl.set(-.5,.5,0),No,l,Do,i,r),Np.set(0,1),c=e.ray.intersectTriangle(Ou,Bu,Xl,!1,Gl),c===null))return;const u=e.ray.origin.distanceTo(Gl);u<e.near||u>e.far||t.push({distance:u,point:Gl.clone(),uv:pi.getInterpolation(Gl,Ou,Xl,Bu,p_,Np,m_,new oe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function zu(s,e,t,n,i,r){Lo.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(kl.x=r*Lo.x-i*Lo.y,kl.y=i*Lo.x+r*Lo.y):kl.copy(Lo),s.copy(e),s.x+=kl.x,s.y+=kl.y,s.applyMatrix4(lS)}const Fu=new B,g_=new B;class uS extends wt{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const i=t.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Fu.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Fu);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Fu.setFromMatrixPosition(e.matrixWorld),g_.setFromMatrixPosition(this.matrixWorld);const n=Fu.distanceTo(g_)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const v_=new B,__=new Lt,y_=new Lt,f1=new B,x_=new it,Hu=new B,Lp=new Nn,S_=new it,Up=new il;class ug extends pn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Tm,this.bindMatrix=new it,this.bindMatrixInverse=new it,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new On),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Hu),this.boundingBox.expandByPoint(Hu)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Nn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Hu),this.boundingSphere.expandByPoint(Hu)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Lp.copy(this.boundingSphere),Lp.applyMatrix4(i),e.ray.intersectsSphere(Lp)!==!1&&(S_.copy(i).invert(),Up.copy(e.ray).applyMatrix4(S_),!(this.boundingBox!==null&&Up.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Up)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Lt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Tm?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Fx?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;__.fromBufferAttribute(i.attributes.skinIndex,e),y_.fromBufferAttribute(i.attributes.skinWeight,e),v_.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const l=y_.getComponent(r);if(l!==0){const c=__.getComponent(r);x_.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(f1.copy(v_).applyMatrix4(x_),l)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Ef extends wt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class As extends nn{constructor(e=null,t=1,n=1,i,r,l,c,u,f=an,d=an,p,g){super(null,l,c,u,f,d,i,r,p,g),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const M_=new it,d1=new it;class Cc{constructor(e=[],t=[]){this.uuid=Li(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new it)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new it;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,l=e.length;r<l;r++){const c=e[r]?e[r].matrixWorld:d1;M_.multiplyMatrices(c,t[r]),M_.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Cc(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new As(t,e,e,jn,Kn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let l=t[r];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),l=new Ef),this.bones.push(l),this.boneInverses.push(new it().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class Ua extends Ut{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Uo=new it,E_=new it,Vu=[],b_=new On,p1=new it,Wl=new pn,ql=new Nn;class hg extends pn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Ua(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,p1)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new On),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Uo),b_.copy(e.boundingBox).applyMatrix4(Uo),this.boundingBox.union(b_)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Nn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Uo),ql.copy(e.boundingSphere).applyMatrix4(Uo),this.boundingSphere.union(ql)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,r=n.length+1,l=e*r+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Wl.geometry=this.geometry,Wl.material=this.material,Wl.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),ql.copy(this.boundingSphere),ql.applyMatrix4(n),e.ray.intersectsSphere(ql)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,Uo),E_.multiplyMatrices(n,Uo),Wl.matrixWorld=E_,Wl.raycast(e,Vu);for(let l=0,c=Vu.length;l<c;l++){const u=Vu[l];u.instanceId=r,u.object=this,t.push(u)}Vu.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Ua(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new As(new Float32Array(i*this.count),i,this.count,mf,Kn));const r=this.morphTexture.source.data.data;let l=0;for(let f=0;f<n.length;f++)l+=n[f];const c=this.geometry.morphTargetsRelative?1:1-l,u=i*e;r[u]=c,r.set(n,u+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Pp=new B,m1=new B,g1=new mt;class br{constructor(e=new B(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Pp.subVectors(n,t).cross(m1.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Pp),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||g1.getNormalMatrix(e),i=this.coplanarPoint(Pp).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ra=new Nn,v1=new oe(.5,.5),Gu=new B;class sl{constructor(e=new br,t=new br,n=new br,i=new br,r=new br,l=new br){this.planes=[e,t,n,i,r,l]}set(e,t,n,i,r,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(r),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=ji){const n=this.planes,i=e.elements,r=i[0],l=i[1],c=i[2],u=i[3],f=i[4],d=i[5],p=i[6],g=i[7],v=i[8],x=i[9],M=i[10],S=i[11],_=i[12],b=i[13],T=i[14],A=i[15];if(n[0].setComponents(u-r,g-f,S-v,A-_).normalize(),n[1].setComponents(u+r,g+f,S+v,A+_).normalize(),n[2].setComponents(u+l,g+d,S+x,A+b).normalize(),n[3].setComponents(u-l,g-d,S-x,A-b).normalize(),n[4].setComponents(u-c,g-p,S-M,A-T).normalize(),t===ji)n[5].setComponents(u+c,g+p,S+M,A+T).normalize();else if(t===gc)n[5].setComponents(c,p,M,T).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),ra.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),ra.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ra)}intersectsSprite(e){ra.center.set(0,0,0);const t=v1.distanceTo(e.center);return ra.radius=.7071067811865476+t,ra.applyMatrix4(e.matrixWorld),this.intersectsSphere(ra)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Gu.x=i.normal.x>0?e.max.x:e.min.x,Gu.y=i.normal.y>0?e.max.y:e.min.y,Gu.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Gu)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const Es=new it,bs=new sl;class bf{constructor(){this.coordinateSystem=ji}intersectsObject(e,t){if(!t.isArrayCamera||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),bs.setFromProjectionMatrix(Es,this.coordinateSystem),bs.intersectsObject(e))return!0}return!1}intersectsSprite(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),bs.setFromProjectionMatrix(Es,this.coordinateSystem),bs.intersectsSprite(e))return!0}return!1}intersectsSphere(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),bs.setFromProjectionMatrix(Es,this.coordinateSystem),bs.intersectsSphere(e))return!0}return!1}intersectsBox(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),bs.setFromProjectionMatrix(Es,this.coordinateSystem),bs.intersectsBox(e))return!0}return!1}containsPoint(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),bs.setFromProjectionMatrix(Es,this.coordinateSystem),bs.containsPoint(e))return!0}return!1}clone(){return new bf}}function Ip(s,e){return s-e}function _1(s,e){return s.z-e.z}function y1(s,e){return e.z-s.z}class x1{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,i){const r=this.pool,l=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});const c=r[this.index];l.push(c),this.index++,c.start=e,c.count=t,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const fi=new it,S1=new Re(1,1,1),T_=new sl,M1=new bf,ku=new On,aa=new Nn,Yl=new B,A_=new B,E1=new B,Op=new x1,Yn=new pn,Xu=[];function b1(s,e,t=0){const n=e.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==e.array.constructor){const i=s.count;for(let r=0;r<i;r++)for(let l=0;l<n;l++)e.setComponent(r+t,l,s.getComponent(r,l))}else e.array.set(s.array,t*n);e.needsUpdate=!0}function oa(s,e){if(s.constructor!==e.constructor){const t=Math.min(s.length,e.length);for(let n=0;n<t;n++)e[n]=s[n]}else{const t=Math.min(s.length,e.length);e.set(new s.constructor(s.buffer,0,t))}}class hS extends pn{constructor(e,t,n=t*2,i){super(new pt,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new As(t,e,e,jn,Kn);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new As(t,e,e,Tc,Rs);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new As(t,e,e,jn,Kn);n.colorSpace=bt.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const r in e.attributes){const l=e.getAttribute(r),{array:c,itemSize:u,normalized:f}=l,d=new c.constructor(n*u),p=new Ut(d,u,f);t.setAttribute(r,p)}if(e.getIndex()!==null){const r=n>65535?new Uint32Array(i):new Uint16Array(i);t.setIndex(new Ut(r,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),r=t.getAttribute(n);if(i.itemSize!==r.itemSize||i.normalized!==r.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new On);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const r=t[n].geometryIndex;this.getMatrixAt(n,fi),this.getBoundingBoxAt(r,ku).applyMatrix4(fi),e.union(ku)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Nn);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const r=t[n].geometryIndex;this.getMatrixAt(n,fi),this.getBoundingSphereAt(r,aa).applyMatrix4(fi),e.union(aa)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:e};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Ip),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const r=this._matricesTexture;fi.identity().toArray(r.image.data,i*16),r.needsUpdate=!0;const l=this._colorsTexture;return l&&(S1.toArray(l.image.data,i*4),l.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},r=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const l=e.getIndex();if(l!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?l.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let u;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Ip),u=this._availableGeometryIds.shift(),r[u]=i):(u=this._geometryCount,this._geometryCount++,r.push(i)),this.setGeometryAt(u,e),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,u}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,r=n.getIndex(),l=t.getIndex(),c=this._geometryInfo[e];if(i&&l.count>c.reservedIndexCount||t.attributes.position.count>c.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,f=c.reservedVertexCount;c.vertexCount=t.getAttribute("position").count;for(const d in n.attributes){const p=t.getAttribute(d),g=n.getAttribute(d);b1(p,g,u);const v=p.itemSize;for(let x=p.count,M=f;x<M;x++){const S=u+x;for(let _=0;_<v;_++)g.setComponent(S,_,0)}g.needsUpdate=!0,g.addUpdateRange(u*v,f*v)}if(i){const d=c.indexStart,p=c.reservedIndexCount;c.indexCount=t.getIndex().count;for(let g=0;g<l.count;g++)r.setX(d+g,u+l.getX(g));for(let g=l.count,v=p;g<v;g++)r.setX(d+g,u);r.needsUpdate=!0,r.addUpdateRange(d,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,t.boundingBox!==null&&(c.boundingBox=t.boundingBox.clone()),c.boundingSphere=null,t.boundingSphere!==null&&(c.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const n=this._instanceInfo;for(let i=0,r=n.length;i<r;i++)n[i].active&&n[i].geometryIndex===e&&this.deleteInstance(i);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const n=this._geometryInfo,i=n.map((l,c)=>c).sort((l,c)=>n[l].vertexStart-n[c].vertexStart),r=this.geometry;for(let l=0,c=n.length;l<c;l++){const u=i[l],f=n[u];if(f.active!==!1){if(r.index!==null){if(f.indexStart!==t){const{indexStart:d,vertexStart:p,reservedIndexCount:g}=f,v=r.index,x=v.array,M=e-p;for(let S=d;S<d+g;S++)x[S]=x[S]+M;v.array.copyWithin(t,d,d+g),v.addUpdateRange(t,g),f.indexStart=t}t+=f.reservedIndexCount}if(f.vertexStart!==e){const{vertexStart:d,reservedVertexCount:p}=f,g=r.attributes;for(const v in g){const x=g[v],{array:M,itemSize:S}=x;M.copyWithin(e*S,d*S,(d+p)*S),x.addUpdateRange(e*S,p*S)}f.vertexStart=e}e+=f.reservedVertexCount,f.start=r.index?f.indexStart:f.vertexStart,this._nextIndexStart=r.index?f.indexStart+f.reservedIndexCount:0,this._nextVertexStart=f.vertexStart+f.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingBox===null){const r=new On,l=n.index,c=n.attributes.position;for(let u=i.start,f=i.start+i.count;u<f;u++){let d=u;l&&(d=l.getX(d)),r.expandByPoint(Yl.fromBufferAttribute(c,d))}i.boundingBox=r}return t.copy(i.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingSphere===null){const r=new Nn;this.getBoundingBoxAt(e,ku),ku.getCenter(r.center);const l=n.index,c=n.attributes.position;let u=0;for(let f=i.start,d=i.start+i.count;f<d;f++){let p=f;l&&(p=l.getX(p)),Yl.fromBufferAttribute(c,p),u=Math.max(u,r.center.distanceToSquared(Yl))}r.radius=Math.sqrt(u),i.boundingSphere=r}return t.copy(i.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const n=this._matricesTexture,i=this._matricesTexture.image.data;return t.toArray(i,e*16),n.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(Ip);t[t.length-1]===n.length;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const i=new Int32Array(e),r=new Int32Array(e);oa(this._multiDrawCounts,i),oa(this._multiDrawStarts,r),this._multiDrawCounts=i,this._multiDrawStarts=r,this._maxInstanceCount=e;const l=this._indirectTexture,c=this._matricesTexture,u=this._colorsTexture;l.dispose(),this._initIndirectTexture(),oa(l.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),oa(c.image.data,this._matricesTexture.image.data),u&&(u.dispose(),this._initColorsTexture(),oa(u.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(u=>u.indexStart+u.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const r=this.geometry;r.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new pt,this._initializeGeometry(r));const l=this.geometry;r.index&&oa(r.index.array,l.index.array);for(const c in r.attributes)oa(r.attributes[c].array,l.attributes[c].array)}raycast(e,t){const n=this._instanceInfo,i=this._geometryInfo,r=this.matrixWorld,l=this.geometry;Yn.material=this.material,Yn.geometry.index=l.index,Yn.geometry.attributes=l.attributes,Yn.geometry.boundingBox===null&&(Yn.geometry.boundingBox=new On),Yn.geometry.boundingSphere===null&&(Yn.geometry.boundingSphere=new Nn);for(let c=0,u=n.length;c<u;c++){if(!n[c].visible||!n[c].active)continue;const f=n[c].geometryIndex,d=i[f];Yn.geometry.setDrawRange(d.start,d.count),this.getMatrixAt(c,Yn.matrixWorld).premultiply(r),this.getBoundingBoxAt(f,Yn.geometry.boundingBox),this.getBoundingSphereAt(f,Yn.geometry.boundingSphere),Yn.raycast(e,Xu);for(let p=0,g=Xu.length;p<g;p++){const v=Xu[p];v.object=this,v.batchId=c,t.push(v)}Xu.length=0}Yn.material=null,Yn.geometry.index=null,Yn.geometry.attributes={},Yn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._availableInstanceIds=e._availableInstanceIds.slice(),this._availableGeometryIds=e._availableGeometryIds.slice(),this._nextIndexStart=e._nextIndexStart,this._nextVertexStart=e._nextVertexStart,this._geometryCount=e._geometryCount,this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._indirectTexture=e._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(e,t,n,i,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,u=this._instanceInfo,f=this._multiDrawStarts,d=this._multiDrawCounts,p=this._geometryInfo,g=this.perObjectFrustumCulled,v=this._indirectTexture,x=v.image.data,M=n.isArrayCamera?M1:T_;g&&!n.isArrayCamera&&(fi.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),T_.setFromProjectionMatrix(fi,e.coordinateSystem));let S=0;if(this.sortObjects){fi.copy(this.matrixWorld).invert(),Yl.setFromMatrixPosition(n.matrixWorld).applyMatrix4(fi),A_.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(fi);for(let T=0,A=u.length;T<A;T++)if(u[T].visible&&u[T].active){const U=u[T].geometryIndex;this.getMatrixAt(T,fi),this.getBoundingSphereAt(U,aa).applyMatrix4(fi);let D=!1;if(g&&(D=!M.intersectsSphere(aa,n)),!D){const P=p[U],I=E1.subVectors(aa.center,Yl).dot(A_);Op.push(P.start,P.count,I,T)}}const _=Op.list,b=this.customSort;b===null?_.sort(r.transparent?y1:_1):b.call(this,_,n);for(let T=0,A=_.length;T<A;T++){const U=_[T];f[S]=U.start*c,d[S]=U.count,x[S]=U.index,S++}Op.reset()}else for(let _=0,b=u.length;_<b;_++)if(u[_].visible&&u[_].active){const T=u[_].geometryIndex;let A=!1;if(g&&(this.getMatrixAt(_,fi),this.getBoundingSphereAt(T,aa).applyMatrix4(fi),A=!M.intersectsSphere(aa,n)),!A){const U=p[T];f[S]=U.start*c,d[S]=U.count,x[S]=_,S++}}v.needsUpdate=!0,this._multiDrawCount=S,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,r,l){this.onBeforeRender(e,null,i,r,l)}}class Jn extends gn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Re(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const ef=new B,tf=new B,R_=new it,Kl=new il,Wu=new Nn,Bp=new B,w_=new B;class Qs extends wt{constructor(e=new pt,t=new Jn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)ef.fromBufferAttribute(t,i-1),tf.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=ef.distanceTo(tf);e.setAttribute("lineDistance",new Ye(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Wu.copy(n.boundingSphere),Wu.applyMatrix4(i),Wu.radius+=r,e.ray.intersectsSphere(Wu)===!1)return;R_.copy(i).invert(),Kl.copy(e.ray).applyMatrix4(R_);const c=r/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,f=this.isLineSegments?2:1,d=n.index,g=n.attributes.position;if(d!==null){const v=Math.max(0,l.start),x=Math.min(d.count,l.start+l.count);for(let M=v,S=x-1;M<S;M+=f){const _=d.getX(M),b=d.getX(M+1),T=qu(this,e,Kl,u,_,b,M);T&&t.push(T)}if(this.isLineLoop){const M=d.getX(x-1),S=d.getX(v),_=qu(this,e,Kl,u,M,S,x-1);_&&t.push(_)}}else{const v=Math.max(0,l.start),x=Math.min(g.count,l.start+l.count);for(let M=v,S=x-1;M<S;M+=f){const _=qu(this,e,Kl,u,M,M+1,M);_&&t.push(_)}if(this.isLineLoop){const M=qu(this,e,Kl,u,x-1,v,x-1);M&&t.push(M)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,l=i.length;r<l;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}}function qu(s,e,t,n,i,r,l){const c=s.geometry.attributes.position;if(ef.fromBufferAttribute(c,i),tf.fromBufferAttribute(c,r),t.distanceSqToSegment(ef,tf,Bp,w_)>n)return;Bp.applyMatrix4(s.matrixWorld);const f=e.ray.origin.distanceTo(Bp);if(!(f<e.near||f>e.far))return{distance:f,point:w_.clone().applyMatrix4(s.matrixWorld),index:l,face:null,faceIndex:null,barycoord:null,object:s}}const C_=new B,D_=new B;class ps extends Qs{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)C_.fromBufferAttribute(t,i),D_.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+C_.distanceTo(D_);e.setAttribute("lineDistance",new Ye(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class fg extends Qs{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Tf extends gn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Re(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const N_=new it,wm=new il,Yu=new Nn,Ku=new B;class dg extends wt{constructor(e=new pt,t=new Tf){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Yu.copy(n.boundingSphere),Yu.applyMatrix4(i),Yu.radius+=r,e.ray.intersectsSphere(Yu)===!1)return;N_.copy(i).invert(),wm.copy(e.ray).applyMatrix4(N_);const c=r/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,f=n.index,p=n.attributes.position;if(f!==null){const g=Math.max(0,l.start),v=Math.min(f.count,l.start+l.count);for(let x=g,M=v;x<M;x++){const S=f.getX(x);Ku.fromBufferAttribute(p,S),L_(Ku,S,u,i,e,t,this)}}else{const g=Math.max(0,l.start),v=Math.min(p.count,l.start+l.count);for(let x=g,M=v;x<M;x++)Ku.fromBufferAttribute(p,x),L_(Ku,x,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,l=i.length;r<l;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}}function L_(s,e,t,n,i,r,l){const c=wm.distanceSqToPoint(s);if(c<t){const u=new B;wm.closestPointToPoint(s,u),u.applyMatrix4(n);const f=i.ray.origin.distanceTo(u);if(f<i.near||f>i.far)return;r.push({distance:f,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,faceIndex:null,barycoord:null,object:l})}}class fS extends nn{constructor(e,t,n,i,r=jt,l=jt,c,u,f){super(e,t,n,i,r,l,c,u,f),this.isVideoTexture=!0,this.generateMipmaps=!1;const d=this;function p(){d.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class T1 extends fS{constructor(e,t,n,i,r,l,c,u){super({},e,t,n,i,r,l,c,u),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class A1 extends nn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=an,this.minFilter=an,this.generateMipmaps=!1,this.needsUpdate=!0}}class Af extends nn{constructor(e,t,n,i,r,l,c,u,f,d,p,g){super(null,l,c,u,f,d,i,r,p,g),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class R1 extends Af{constructor(e,t,n,i,r,l){super(e,t,n,r,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Ci,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class w1 extends Af{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,Js),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class C1 extends nn{constructor(e,t,n,i,r,l,c,u,f){super(e,t,n,i,r,l,c,u,f),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Dc extends nn{constructor(e,t,n=Rs,i,r,l,c=an,u=an,f,d=Yo,p=1){if(d!==Yo&&d!==La)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const g={width:e,height:t,depth:p};super(g,i,r,l,c,u,d,n,f),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Rr(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Rf extends pt{constructor(e=1,t=1,n=4,i=8,r=1){super(),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i,heightSegments:r},t=Math.max(0,t),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),r=Math.max(1,Math.floor(r));const l=[],c=[],u=[],f=[],d=t/2,p=Math.PI/2*e,g=t,v=2*p+g,x=n*2+r,M=i+1,S=new B,_=new B;for(let b=0;b<=x;b++){let T=0,A=0,U=0,D=0;if(b<=n){const w=b/n,R=w*Math.PI/2;A=-d-e*Math.cos(R),U=e*Math.sin(R),D=-e*Math.cos(R),T=w*p}else if(b<=n+r){const w=(b-n)/r;A=-d+w*t,U=e,D=0,T=p+w*g}else{const w=(b-n-r)/n,R=w*Math.PI/2;A=d+e*Math.sin(R),U=e*Math.cos(R),D=e*Math.sin(R),T=p+g+w*p}const P=Math.max(0,Math.min(1,T/v));let I=0;b===0?I=.5/i:b===x&&(I=-.5/i);for(let w=0;w<=i;w++){const R=w/i,F=R*Math.PI*2,j=Math.sin(F),k=Math.cos(F);_.x=-U*k,_.y=A,_.z=U*j,c.push(_.x,_.y,_.z),S.set(-U*k,D,U*j),S.normalize(),u.push(S.x,S.y,S.z),f.push(R+I,P)}if(b>0){const w=(b-1)*M;for(let R=0;R<i;R++){const F=w+R,j=w+R+1,k=b*M+R,J=b*M+R+1;l.push(F,j,k),l.push(j,J,k)}}}this.setIndex(l),this.setAttribute("position",new Ye(c,3)),this.setAttribute("normal",new Ye(u,3)),this.setAttribute("uv",new Ye(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Rf(e.radius,e.height,e.capSegments,e.radialSegments,e.heightSegments)}}class wf extends pt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],l=[],c=[],u=[],f=new B,d=new oe;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,g=3;p<=t;p++,g+=3){const v=n+p/t*i;f.x=e*Math.cos(v),f.y=e*Math.sin(v),l.push(f.x,f.y,f.z),c.push(0,0,1),d.x=(l[g]/e+1)/2,d.y=(l[g+1]/e+1)/2,u.push(d.x,d.y)}for(let p=1;p<=t;p++)r.push(p,p+1,0);this.setIndex(r),this.setAttribute("position",new Ye(l,3)),this.setAttribute("normal",new Ye(c,3)),this.setAttribute("uv",new Ye(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wf(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Nc extends pt{constructor(e=1,t=1,n=1,i=32,r=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:l,thetaStart:c,thetaLength:u};const f=this;i=Math.floor(i),r=Math.floor(r);const d=[],p=[],g=[],v=[];let x=0;const M=[],S=n/2;let _=0;b(),l===!1&&(e>0&&T(!0),t>0&&T(!1)),this.setIndex(d),this.setAttribute("position",new Ye(p,3)),this.setAttribute("normal",new Ye(g,3)),this.setAttribute("uv",new Ye(v,2));function b(){const A=new B,U=new B;let D=0;const P=(t-e)/n;for(let I=0;I<=r;I++){const w=[],R=I/r,F=R*(t-e)+e;for(let j=0;j<=i;j++){const k=j/i,J=k*u+c,se=Math.sin(J),V=Math.cos(J);U.x=F*se,U.y=-R*n+S,U.z=F*V,p.push(U.x,U.y,U.z),A.set(se,P,V).normalize(),g.push(A.x,A.y,A.z),v.push(k,1-R),w.push(x++)}M.push(w)}for(let I=0;I<i;I++)for(let w=0;w<r;w++){const R=M[w][I],F=M[w+1][I],j=M[w+1][I+1],k=M[w][I+1];(e>0||w!==0)&&(d.push(R,F,k),D+=3),(t>0||w!==r-1)&&(d.push(F,j,k),D+=3)}f.addGroup(_,D,0),_+=D}function T(A){const U=x,D=new oe,P=new B;let I=0;const w=A===!0?e:t,R=A===!0?1:-1;for(let j=1;j<=i;j++)p.push(0,S*R,0),g.push(0,R,0),v.push(.5,.5),x++;const F=x;for(let j=0;j<=i;j++){const J=j/i*u+c,se=Math.cos(J),V=Math.sin(J);P.x=w*V,P.y=S*R,P.z=w*se,p.push(P.x,P.y,P.z),g.push(0,R,0),D.x=se*.5+.5,D.y=V*.5*R+.5,v.push(D.x,D.y),x++}for(let j=0;j<i;j++){const k=U+j,J=F+j;A===!0?d.push(J,J+1,k):d.push(J+1,J,k),I+=3}f.addGroup(_,I,A===!0?1:2),_+=I}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nc(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Lc extends Nc{constructor(e=1,t=1,n=32,i=1,r=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,r,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:l,thetaLength:c}}static fromJSON(e){return new Lc(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ir extends pt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],l=[];c(i),f(n),d(),this.setAttribute("position",new Ye(r,3)),this.setAttribute("normal",new Ye(r.slice(),3)),this.setAttribute("uv",new Ye(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(b){const T=new B,A=new B,U=new B;for(let D=0;D<t.length;D+=3)v(t[D+0],T),v(t[D+1],A),v(t[D+2],U),u(T,A,U,b)}function u(b,T,A,U){const D=U+1,P=[];for(let I=0;I<=D;I++){P[I]=[];const w=b.clone().lerp(A,I/D),R=T.clone().lerp(A,I/D),F=D-I;for(let j=0;j<=F;j++)j===0&&I===D?P[I][j]=w:P[I][j]=w.clone().lerp(R,j/F)}for(let I=0;I<D;I++)for(let w=0;w<2*(D-I)-1;w++){const R=Math.floor(w/2);w%2===0?(g(P[I][R+1]),g(P[I+1][R]),g(P[I][R])):(g(P[I][R+1]),g(P[I+1][R+1]),g(P[I+1][R]))}}function f(b){const T=new B;for(let A=0;A<r.length;A+=3)T.x=r[A+0],T.y=r[A+1],T.z=r[A+2],T.normalize().multiplyScalar(b),r[A+0]=T.x,r[A+1]=T.y,r[A+2]=T.z}function d(){const b=new B;for(let T=0;T<r.length;T+=3){b.x=r[T+0],b.y=r[T+1],b.z=r[T+2];const A=S(b)/2/Math.PI+.5,U=_(b)/Math.PI+.5;l.push(A,1-U)}x(),p()}function p(){for(let b=0;b<l.length;b+=6){const T=l[b+0],A=l[b+2],U=l[b+4],D=Math.max(T,A,U),P=Math.min(T,A,U);D>.9&&P<.1&&(T<.2&&(l[b+0]+=1),A<.2&&(l[b+2]+=1),U<.2&&(l[b+4]+=1))}}function g(b){r.push(b.x,b.y,b.z)}function v(b,T){const A=b*3;T.x=e[A+0],T.y=e[A+1],T.z=e[A+2]}function x(){const b=new B,T=new B,A=new B,U=new B,D=new oe,P=new oe,I=new oe;for(let w=0,R=0;w<r.length;w+=9,R+=6){b.set(r[w+0],r[w+1],r[w+2]),T.set(r[w+3],r[w+4],r[w+5]),A.set(r[w+6],r[w+7],r[w+8]),D.set(l[R+0],l[R+1]),P.set(l[R+2],l[R+3]),I.set(l[R+4],l[R+5]),U.copy(b).add(T).add(A).divideScalar(3);const F=S(U);M(D,R+0,b,F),M(P,R+2,T,F),M(I,R+4,A,F)}}function M(b,T,A,U){U<0&&b.x===1&&(l[T]=b.x-1),A.x===0&&A.z===0&&(l[T]=U/2/Math.PI+.5)}function S(b){return Math.atan2(b.z,-b.x)}function _(b){return Math.atan2(-b.y,Math.sqrt(b.x*b.x+b.z*b.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ir(e.vertices,e.indices,e.radius,e.details)}}class Cf extends Ir{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Cf(e.radius,e.detail)}}const ju=new B,Zu=new B,zp=new B,Ju=new pi;class dS extends pt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(Aa*t),l=e.getIndex(),c=e.getAttribute("position"),u=l?l.count:c.count,f=[0,0,0],d=["a","b","c"],p=new Array(3),g={},v=[];for(let x=0;x<u;x+=3){l?(f[0]=l.getX(x),f[1]=l.getX(x+1),f[2]=l.getX(x+2)):(f[0]=x,f[1]=x+1,f[2]=x+2);const{a:M,b:S,c:_}=Ju;if(M.fromBufferAttribute(c,f[0]),S.fromBufferAttribute(c,f[1]),_.fromBufferAttribute(c,f[2]),Ju.getNormal(zp),p[0]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,p[1]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,p[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let b=0;b<3;b++){const T=(b+1)%3,A=p[b],U=p[T],D=Ju[d[b]],P=Ju[d[T]],I=`${A}_${U}`,w=`${U}_${A}`;w in g&&g[w]?(zp.dot(g[w].normal)<=r&&(v.push(D.x,D.y,D.z),v.push(P.x,P.y,P.z)),g[w]=null):I in g||(g[I]={index0:f[b],index1:f[T],normal:zp.clone()})}}for(const x in g)if(g[x]){const{index0:M,index1:S}=g[x];ju.fromBufferAttribute(c,M),Zu.fromBufferAttribute(c,S),v.push(ju.x,ju.y,ju.z),v.push(Zu.x,Zu.y,Zu.z)}this.setAttribute("position",new Ye(v,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class ms{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const n=this.getLengths();let i=0;const r=n.length;let l;t?l=t:l=e*n[r-1];let c=0,u=r-1,f;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),f=n[i]-l,f<0)c=i+1;else if(f>0)u=i-1;else{u=i;break}if(i=u,n[i]===l)return i/(r-1);const d=n[i],g=n[i+1]-d,v=(l-d)/g;return(i+v)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const l=this.getPoint(i),c=this.getPoint(r),u=t||(l.isVector2?new oe:new B);return u.copy(c).sub(l).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t=!1){const n=new B,i=[],r=[],l=[],c=new B,u=new it;for(let v=0;v<=e;v++){const x=v/e;i[v]=this.getTangentAt(x,new B)}r[0]=new B,l[0]=new B;let f=Number.MAX_VALUE;const d=Math.abs(i[0].x),p=Math.abs(i[0].y),g=Math.abs(i[0].z);d<=f&&(f=d,n.set(1,0,0)),p<=f&&(f=p,n.set(0,1,0)),g<=f&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],c),l[0].crossVectors(i[0],r[0]);for(let v=1;v<=e;v++){if(r[v]=r[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(dt(i[v-1].dot(i[v]),-1,1));r[v].applyMatrix4(u.makeRotationAxis(c,x))}l[v].crossVectors(i[v],r[v])}if(t===!0){let v=Math.acos(dt(r[0].dot(r[e]),-1,1));v/=e,i[0].dot(c.crossVectors(r[0],r[e]))>0&&(v=-v);for(let x=1;x<=e;x++)r[x].applyMatrix4(u.makeRotationAxis(i[x],v*x)),l[x].crossVectors(i[x],r[x])}return{tangents:i,normals:r,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Df extends ms{constructor(e=0,t=0,n=1,i=1,r=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(e,t=new oe){const n=t,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const l=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(l?r=0:r=i),this.aClockwise===!0&&!l&&(r===i?r=-i:r=r-i);const c=this.aStartAngle+e*r;let u=this.aX+this.xRadius*Math.cos(c),f=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const d=Math.cos(this.aRotation),p=Math.sin(this.aRotation),g=u-this.aX,v=f-this.aY;u=g*d-v*p+this.aX,f=g*p+v*d+this.aY}return n.set(u,f)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class pS extends Df{constructor(e,t,n,i,r,l){super(e,t,n,n,i,r,l),this.isArcCurve=!0,this.type="ArcCurve"}}function pg(){let s=0,e=0,t=0,n=0;function i(r,l,c,u){s=r,e=c,t=-3*r+3*l-2*c-u,n=2*r-2*l+c+u}return{initCatmullRom:function(r,l,c,u,f){i(l,c,f*(c-r),f*(u-l))},initNonuniformCatmullRom:function(r,l,c,u,f,d,p){let g=(l-r)/f-(c-r)/(f+d)+(c-l)/d,v=(c-l)/d-(u-l)/(d+p)+(u-c)/p;g*=d,v*=d,i(l,c,g,v)},calc:function(r){const l=r*r,c=l*r;return s+e*r+t*l+n*c}}}const Qu=new B,Fp=new pg,Hp=new pg,Vp=new pg;class mS extends ms{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new B){const n=t,i=this.points,r=i.length,l=(r-(this.closed?0:1))*e;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/r)+1)*r:u===0&&c===r-1&&(c=r-2,u=1);let f,d;this.closed||c>0?f=i[(c-1)%r]:(Qu.subVectors(i[0],i[1]).add(i[0]),f=Qu);const p=i[c%r],g=i[(c+1)%r];if(this.closed||c+2<r?d=i[(c+2)%r]:(Qu.subVectors(i[r-1],i[r-2]).add(i[r-1]),d=Qu),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let x=Math.pow(f.distanceToSquared(p),v),M=Math.pow(p.distanceToSquared(g),v),S=Math.pow(g.distanceToSquared(d),v);M<1e-4&&(M=1),x<1e-4&&(x=M),S<1e-4&&(S=M),Fp.initNonuniformCatmullRom(f.x,p.x,g.x,d.x,x,M,S),Hp.initNonuniformCatmullRom(f.y,p.y,g.y,d.y,x,M,S),Vp.initNonuniformCatmullRom(f.z,p.z,g.z,d.z,x,M,S)}else this.curveType==="catmullrom"&&(Fp.initCatmullRom(f.x,p.x,g.x,d.x,this.tension),Hp.initCatmullRom(f.y,p.y,g.y,d.y,this.tension),Vp.initCatmullRom(f.z,p.z,g.z,d.z,this.tension));return n.set(Fp.calc(u),Hp.calc(u),Vp.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new B().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function U_(s,e,t,n,i){const r=(n-e)*.5,l=(i-t)*.5,c=s*s,u=s*c;return(2*t-2*n+r+l)*u+(-3*t+3*n-2*r-l)*c+r*s+t}function D1(s,e){const t=1-s;return t*t*e}function N1(s,e){return 2*(1-s)*s*e}function L1(s,e){return s*s*e}function oc(s,e,t,n){return D1(s,e)+N1(s,t)+L1(s,n)}function U1(s,e){const t=1-s;return t*t*t*e}function P1(s,e){const t=1-s;return 3*t*t*s*e}function I1(s,e){return 3*(1-s)*s*s*e}function O1(s,e){return s*s*s*e}function lc(s,e,t,n,i){return U1(s,e)+P1(s,t)+I1(s,n)+O1(s,i)}class mg extends ms{constructor(e=new oe,t=new oe,n=new oe,i=new oe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new oe){const n=t,i=this.v0,r=this.v1,l=this.v2,c=this.v3;return n.set(lc(e,i.x,r.x,l.x,c.x),lc(e,i.y,r.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class gS extends ms{constructor(e=new B,t=new B,n=new B,i=new B){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new B){const n=t,i=this.v0,r=this.v1,l=this.v2,c=this.v3;return n.set(lc(e,i.x,r.x,l.x,c.x),lc(e,i.y,r.y,l.y,c.y),lc(e,i.z,r.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class gg extends ms{constructor(e=new oe,t=new oe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new oe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new oe){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class vS extends ms{constructor(e=new B,t=new B){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new B){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new B){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class vg extends ms{constructor(e=new oe,t=new oe,n=new oe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new oe){const n=t,i=this.v0,r=this.v1,l=this.v2;return n.set(oc(e,i.x,r.x,l.x),oc(e,i.y,r.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class _g extends ms{constructor(e=new B,t=new B,n=new B){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new B){const n=t,i=this.v0,r=this.v1,l=this.v2;return n.set(oc(e,i.x,r.x,l.x),oc(e,i.y,r.y,l.y),oc(e,i.z,r.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class yg extends ms{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new oe){const n=t,i=this.points,r=(i.length-1)*e,l=Math.floor(r),c=r-l,u=i[l===0?l:l-1],f=i[l],d=i[l>i.length-2?i.length-1:l+1],p=i[l>i.length-3?i.length-1:l+2];return n.set(U_(c,u.x,f.x,d.x,p.x),U_(c,u.y,f.y,d.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new oe().fromArray(i))}return this}}var nf=Object.freeze({__proto__:null,ArcCurve:pS,CatmullRomCurve3:mS,CubicBezierCurve:mg,CubicBezierCurve3:gS,EllipseCurve:Df,LineCurve:gg,LineCurve3:vS,QuadraticBezierCurve:vg,QuadraticBezierCurve3:_g,SplineCurve:yg});class _S extends ms{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new nf[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const l=i[r]-n,c=this.curves[r],u=c.getLength(),f=u===0?0:1-l/u;return c.getPointAt(f,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const l=r[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,u=l.getPoints(c);for(let f=0;f<u.length;f++){const d=u[f];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new nf[i.type]().fromJSON(i))}return this}}class sf extends _S{constructor(e){super(),this.type="Path",this.currentPoint=new oe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new gg(this.currentPoint.clone(),new oe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new vg(this.currentPoint.clone(),new oe(e,t),new oe(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,l){const c=new mg(this.currentPoint.clone(),new oe(e,t),new oe(n,i),new oe(r,l));return this.curves.push(c),this.currentPoint.set(r,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new yg(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,r,l),this}absarc(e,t,n,i,r,l){return this.absellipse(e,t,n,n,i,r,l),this}ellipse(e,t,n,i,r,l,c,u){const f=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+f,t+d,n,i,r,l,c,u),this}absellipse(e,t,n,i,r,l,c,u){const f=new Df(e,t,n,i,r,l,c,u);if(this.curves.length>0){const p=f.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(f);const d=f.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Ra extends sf{constructor(e){super(e),this.uuid=Li(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new sf().fromJSON(i))}return this}}function B1(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=yS(s,0,i,t,!0);const l=[];if(!r||r.next===r.prev)return l;let c,u,f;if(n&&(r=G1(s,e,r,t)),s.length>80*t){c=1/0,u=1/0;let d=-1/0,p=-1/0;for(let g=t;g<i;g+=t){const v=s[g],x=s[g+1];v<c&&(c=v),x<u&&(u=x),v>d&&(d=v),x>p&&(p=x)}f=Math.max(d-c,p-u),f=f!==0?32767/f:0}return yc(r,l,t,c,u,f,0),l}function yS(s,e,t,n,i){let r;if(i===$1(s,e,t,n)>0)for(let l=e;l<t;l+=n)r=P_(l/n|0,s[l],s[l+1],r);else for(let l=t-n;l>=e;l-=n)r=P_(l/n|0,s[l],s[l+1],r);return r&&$o(r,r.next)&&(Sc(r),r=r.next),r}function Pa(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&($o(t,t.next)||cn(t.prev,t,t.next)===0)){if(Sc(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function yc(s,e,t,n,i,r,l){if(!s)return;!l&&r&&Y1(s,n,i,r);let c=s;for(;s.prev!==s.next;){const u=s.prev,f=s.next;if(r?F1(s,n,i,r):z1(s)){e.push(u.i,s.i,f.i),Sc(s),s=f.next,c=f.next;continue}if(s=f,s===c){l?l===1?(s=H1(Pa(s),e),yc(s,e,t,n,i,r,2)):l===2&&V1(s,e,t,n,i,r):yc(Pa(s),e,t,n,i,r,1);break}}}function z1(s){const e=s.prev,t=s,n=s.next;if(cn(e,t,n)>=0)return!1;const i=e.x,r=t.x,l=n.x,c=e.y,u=t.y,f=n.y,d=Math.min(i,r,l),p=Math.min(c,u,f),g=Math.max(i,r,l),v=Math.max(c,u,f);let x=n.next;for(;x!==e;){if(x.x>=d&&x.x<=g&&x.y>=p&&x.y<=v&&Ql(i,c,r,u,l,f,x.x,x.y)&&cn(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function F1(s,e,t,n){const i=s.prev,r=s,l=s.next;if(cn(i,r,l)>=0)return!1;const c=i.x,u=r.x,f=l.x,d=i.y,p=r.y,g=l.y,v=Math.min(c,u,f),x=Math.min(d,p,g),M=Math.max(c,u,f),S=Math.max(d,p,g),_=Cm(v,x,e,t,n),b=Cm(M,S,e,t,n);let T=s.prevZ,A=s.nextZ;for(;T&&T.z>=_&&A&&A.z<=b;){if(T.x>=v&&T.x<=M&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Ql(c,d,u,p,f,g,T.x,T.y)&&cn(T.prev,T,T.next)>=0||(T=T.prevZ,A.x>=v&&A.x<=M&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Ql(c,d,u,p,f,g,A.x,A.y)&&cn(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;T&&T.z>=_;){if(T.x>=v&&T.x<=M&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Ql(c,d,u,p,f,g,T.x,T.y)&&cn(T.prev,T,T.next)>=0)return!1;T=T.prevZ}for(;A&&A.z<=b;){if(A.x>=v&&A.x<=M&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Ql(c,d,u,p,f,g,A.x,A.y)&&cn(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}function H1(s,e){let t=s;do{const n=t.prev,i=t.next.next;!$o(n,i)&&SS(n,t,t.next,i)&&xc(n,i)&&xc(i,n)&&(e.push(n.i,t.i,i.i),Sc(t),Sc(t.next),t=s=i),t=t.next}while(t!==s);return Pa(t)}function V1(s,e,t,n,i,r){let l=s;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&Z1(l,c)){let u=MS(l,c);l=Pa(l,l.next),u=Pa(u,u.next),yc(l,e,t,n,i,r,0),yc(u,e,t,n,i,r,0);return}c=c.next}l=l.next}while(l!==s)}function G1(s,e,t,n){const i=[];for(let r=0,l=e.length;r<l;r++){const c=e[r]*n,u=r<l-1?e[r+1]*n:s.length,f=yS(s,c,u,n,!1);f===f.next&&(f.steiner=!0),i.push(j1(f))}i.sort(k1);for(let r=0;r<i.length;r++)t=X1(i[r],t);return t}function k1(s,e){let t=s.x-e.x;if(t===0&&(t=s.y-e.y,t===0)){const n=(s.next.y-s.y)/(s.next.x-s.x),i=(e.next.y-e.y)/(e.next.x-e.x);t=n-i}return t}function X1(s,e){const t=W1(s,e);if(!t)return e;const n=MS(t,s);return Pa(n,n.next),Pa(t,t.next)}function W1(s,e){let t=e;const n=s.x,i=s.y;let r=-1/0,l;if($o(s,t))return t;do{if($o(s,t.next))return t.next;if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const p=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(p<=n&&p>r&&(r=p,l=t.x<t.next.x?t:t.next,p===n))return l}t=t.next}while(t!==e);if(!l)return null;const c=l,u=l.x,f=l.y;let d=1/0;t=l;do{if(n>=t.x&&t.x>=u&&n!==t.x&&xS(i<f?n:r,i,u,f,i<f?r:n,i,t.x,t.y)){const p=Math.abs(i-t.y)/(n-t.x);xc(t,s)&&(p<d||p===d&&(t.x>l.x||t.x===l.x&&q1(l,t)))&&(l=t,d=p)}t=t.next}while(t!==c);return l}function q1(s,e){return cn(s.prev,s,e.prev)<0&&cn(e.next,s,s.next)<0}function Y1(s,e,t,n){let i=s;do i.z===0&&(i.z=Cm(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,K1(i)}function K1(s){let e,t=1;do{let n=s,i;s=null;let r=null;for(e=0;n;){e++;let l=n,c=0;for(let f=0;f<t&&(c++,l=l.nextZ,!!l);f++);let u=t;for(;c>0||u>0&&l;)c!==0&&(u===0||!l||n.z<=l.z)?(i=n,n=n.nextZ,c--):(i=l,l=l.nextZ,u--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;n=l}r.nextZ=null,t*=2}while(e>1);return s}function Cm(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function j1(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function xS(s,e,t,n,i,r,l,c){return(i-l)*(e-c)>=(s-l)*(r-c)&&(s-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(r-c)>=(i-l)*(n-c)}function Ql(s,e,t,n,i,r,l,c){return!(s===l&&e===c)&&xS(s,e,t,n,i,r,l,c)}function Z1(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!J1(s,e)&&(xc(s,e)&&xc(e,s)&&Q1(s,e)&&(cn(s.prev,s,e.prev)||cn(s,e.prev,e))||$o(s,e)&&cn(s.prev,s,s.next)>0&&cn(e.prev,e,e.next)>0)}function cn(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function $o(s,e){return s.x===e.x&&s.y===e.y}function SS(s,e,t,n){const i=eh(cn(s,e,t)),r=eh(cn(s,e,n)),l=eh(cn(t,n,s)),c=eh(cn(t,n,e));return!!(i!==r&&l!==c||i===0&&$u(s,t,e)||r===0&&$u(s,n,e)||l===0&&$u(t,s,n)||c===0&&$u(t,e,n))}function $u(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function eh(s){return s>0?1:s<0?-1:0}function J1(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&SS(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function xc(s,e){return cn(s.prev,s,s.next)<0?cn(s,e,s.next)>=0&&cn(s,s.prev,e)>=0:cn(s,e,s.prev)<0||cn(s,s.next,e)<0}function Q1(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function MS(s,e){const t=Dm(s.i,s.x,s.y),n=Dm(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function P_(s,e,t,n){const i=Dm(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Sc(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Dm(s,e,t){return{i:s,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function $1(s,e,t,n){let i=0;for(let r=e,l=t-n;r<t;r+=n)i+=(s[l]-s[r])*(s[r+1]+s[l+1]),l=r;return i}class eA{static triangulate(e,t,n=2){return B1(e,t,n)}}class us{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return us.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];I_(e),O_(n,e);let l=e.length;t.forEach(I_);for(let u=0;u<t.length;u++)i.push(l),l+=t[u].length,O_(n,t[u]);const c=eA.triangulate(n,i);for(let u=0;u<c.length;u+=3)r.push(c.slice(u,u+3));return r}}function I_(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function O_(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class Nf extends pt{constructor(e=new Ra([new oe(.5,.5),new oe(-.5,.5),new oe(-.5,-.5),new oe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let c=0,u=e.length;c<u;c++){const f=e[c];l(f)}this.setAttribute("position",new Ye(i,3)),this.setAttribute("uv",new Ye(r,2)),this.computeVertexNormals();function l(c){const u=[],f=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let g=t.bevelEnabled!==void 0?t.bevelEnabled:!0,v=t.bevelThickness!==void 0?t.bevelThickness:.2,x=t.bevelSize!==void 0?t.bevelSize:v-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,S=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,b=t.UVGenerator!==void 0?t.UVGenerator:tA;let T,A=!1,U,D,P,I;_&&(T=_.getSpacedPoints(d),A=!0,g=!1,U=_.computeFrenetFrames(d,!1),D=new B,P=new B,I=new B),g||(S=0,v=0,x=0,M=0);const w=c.extractPoints(f);let R=w.shape;const F=w.holes;if(!us.isClockWise(R)){R=R.reverse();for(let O=0,Te=F.length;O<Te;O++){const ge=F[O];us.isClockWise(ge)&&(F[O]=ge.reverse())}}function k(O){const ge=10000000000000001e-36;let Ee=O[0];for(let ue=1;ue<=O.length;ue++){const Be=ue%O.length,pe=O[Be],Oe=pe.x-Ee.x,ut=pe.y-Ee.y,z=Oe*Oe+ut*ut,C=Math.max(Math.abs(pe.x),Math.abs(pe.y),Math.abs(Ee.x),Math.abs(Ee.y)),Z=ge*C*C;if(z<=Z){O.splice(Be,1),ue--;continue}Ee=pe}}k(R),F.forEach(k);const J=F.length,se=R;for(let O=0;O<J;O++){const Te=F[O];R=R.concat(Te)}function V(O,Te,ge){return Te||console.error("THREE.ExtrudeGeometry: vec does not exist"),O.clone().addScaledVector(Te,ge)}const $=R.length;function W(O,Te,ge){let Ee,ue,Be;const pe=O.x-Te.x,Oe=O.y-Te.y,ut=ge.x-O.x,z=ge.y-O.y,C=pe*pe+Oe*Oe,Z=pe*z-Oe*ut;if(Math.abs(Z)>Number.EPSILON){const re=Math.sqrt(C),de=Math.sqrt(ut*ut+z*z),ae=Te.x-Oe/re,je=Te.y+pe/re,we=ge.x-z/de,ke=ge.y+ut/de,Ke=((we-ae)*z-(ke-je)*ut)/(pe*z-Oe*ut);Ee=ae+pe*Ke-O.x,ue=je+Oe*Ke-O.y;const fe=Ee*Ee+ue*ue;if(fe<=2)return new oe(Ee,ue);Be=Math.sqrt(fe/2)}else{let re=!1;pe>Number.EPSILON?ut>Number.EPSILON&&(re=!0):pe<-Number.EPSILON?ut<-Number.EPSILON&&(re=!0):Math.sign(Oe)===Math.sign(z)&&(re=!0),re?(Ee=-Oe,ue=pe,Be=Math.sqrt(C)):(Ee=pe,ue=Oe,Be=Math.sqrt(C/2))}return new oe(Ee/Be,ue/Be)}const le=[];for(let O=0,Te=se.length,ge=Te-1,Ee=O+1;O<Te;O++,ge++,Ee++)ge===Te&&(ge=0),Ee===Te&&(Ee=0),le[O]=W(se[O],se[ge],se[Ee]);const me=[];let ye,Pe=le.concat();for(let O=0,Te=J;O<Te;O++){const ge=F[O];ye=[];for(let Ee=0,ue=ge.length,Be=ue-1,pe=Ee+1;Ee<ue;Ee++,Be++,pe++)Be===ue&&(Be=0),pe===ue&&(pe=0),ye[Ee]=W(ge[Ee],ge[Be],ge[pe]);me.push(ye),Pe=Pe.concat(ye)}let Je;if(S===0)Je=us.triangulateShape(se,F);else{const O=[],Te=[];for(let ge=0;ge<S;ge++){const Ee=ge/S,ue=v*Math.cos(Ee*Math.PI/2),Be=x*Math.sin(Ee*Math.PI/2)+M;for(let pe=0,Oe=se.length;pe<Oe;pe++){const ut=V(se[pe],le[pe],Be);ft(ut.x,ut.y,-ue),Ee===0&&O.push(ut)}for(let pe=0,Oe=J;pe<Oe;pe++){const ut=F[pe];ye=me[pe];const z=[];for(let C=0,Z=ut.length;C<Z;C++){const re=V(ut[C],ye[C],Be);ft(re.x,re.y,-ue),Ee===0&&z.push(re)}Ee===0&&Te.push(z)}}Je=us.triangulateShape(O,Te)}const te=Je.length,xe=x+M;for(let O=0;O<$;O++){const Te=g?V(R[O],Pe[O],xe):R[O];A?(P.copy(U.normals[0]).multiplyScalar(Te.x),D.copy(U.binormals[0]).multiplyScalar(Te.y),I.copy(T[0]).add(P).add(D),ft(I.x,I.y,I.z)):ft(Te.x,Te.y,0)}for(let O=1;O<=d;O++)for(let Te=0;Te<$;Te++){const ge=g?V(R[Te],Pe[Te],xe):R[Te];A?(P.copy(U.normals[O]).multiplyScalar(ge.x),D.copy(U.binormals[O]).multiplyScalar(ge.y),I.copy(T[O]).add(P).add(D),ft(I.x,I.y,I.z)):ft(ge.x,ge.y,p/d*O)}for(let O=S-1;O>=0;O--){const Te=O/S,ge=v*Math.cos(Te*Math.PI/2),Ee=x*Math.sin(Te*Math.PI/2)+M;for(let ue=0,Be=se.length;ue<Be;ue++){const pe=V(se[ue],le[ue],Ee);ft(pe.x,pe.y,p+ge)}for(let ue=0,Be=F.length;ue<Be;ue++){const pe=F[ue];ye=me[ue];for(let Oe=0,ut=pe.length;Oe<ut;Oe++){const z=V(pe[Oe],ye[Oe],Ee);A?ft(z.x,z.y+T[d-1].y,T[d-1].x+ge):ft(z.x,z.y,p+ge)}}}We(),De();function We(){const O=i.length/3;if(g){let Te=0,ge=$*Te;for(let Ee=0;Ee<te;Ee++){const ue=Je[Ee];Qe(ue[2]+ge,ue[1]+ge,ue[0]+ge)}Te=d+S*2,ge=$*Te;for(let Ee=0;Ee<te;Ee++){const ue=Je[Ee];Qe(ue[0]+ge,ue[1]+ge,ue[2]+ge)}}else{for(let Te=0;Te<te;Te++){const ge=Je[Te];Qe(ge[2],ge[1],ge[0])}for(let Te=0;Te<te;Te++){const ge=Je[Te];Qe(ge[0]+$*d,ge[1]+$*d,ge[2]+$*d)}}n.addGroup(O,i.length/3-O,0)}function De(){const O=i.length/3;let Te=0;Ge(se,Te),Te+=se.length;for(let ge=0,Ee=F.length;ge<Ee;ge++){const ue=F[ge];Ge(ue,Te),Te+=ue.length}n.addGroup(O,i.length/3-O,1)}function Ge(O,Te){let ge=O.length;for(;--ge>=0;){const Ee=ge;let ue=ge-1;ue<0&&(ue=O.length-1);for(let Be=0,pe=d+S*2;Be<pe;Be++){const Oe=$*Be,ut=$*(Be+1),z=Te+Ee+Oe,C=Te+ue+Oe,Z=Te+ue+ut,re=Te+Ee+ut;zt(z,C,Z,re)}}}function ft(O,Te,ge){u.push(O),u.push(Te),u.push(ge)}function Qe(O,Te,ge){yt(O),yt(Te),yt(ge);const Ee=i.length/3,ue=b.generateTopUV(n,i,Ee-3,Ee-2,Ee-1);lt(ue[0]),lt(ue[1]),lt(ue[2])}function zt(O,Te,ge,Ee){yt(O),yt(Te),yt(Ee),yt(Te),yt(ge),yt(Ee);const ue=i.length/3,Be=b.generateSideWallUV(n,i,ue-6,ue-3,ue-2,ue-1);lt(Be[0]),lt(Be[1]),lt(Be[3]),lt(Be[1]),lt(Be[2]),lt(Be[3])}function yt(O){i.push(u[O*3+0]),i.push(u[O*3+1]),i.push(u[O*3+2])}function lt(O){r.push(O.x),r.push(O.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return nA(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,l=e.shapes.length;r<l;r++){const c=t[e.shapes[r]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new nf[i.type]().fromJSON(i)),new Nf(n,e.options)}}const tA={generateTopUV:function(s,e,t,n,i){const r=e[t*3],l=e[t*3+1],c=e[n*3],u=e[n*3+1],f=e[i*3],d=e[i*3+1];return[new oe(r,l),new oe(c,u),new oe(f,d)]},generateSideWallUV:function(s,e,t,n,i,r){const l=e[t*3],c=e[t*3+1],u=e[t*3+2],f=e[n*3],d=e[n*3+1],p=e[n*3+2],g=e[i*3],v=e[i*3+1],x=e[i*3+2],M=e[r*3],S=e[r*3+1],_=e[r*3+2];return Math.abs(c-d)<Math.abs(l-f)?[new oe(l,1-u),new oe(f,1-p),new oe(g,1-x),new oe(M,1-_)]:[new oe(c,1-u),new oe(d,1-p),new oe(v,1-x),new oe(S,1-_)]}};function nA(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Lf extends Ir{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Lf(e.radius,e.detail)}}class Uf extends pt{constructor(e=[new oe(0,-.5),new oe(.5,0),new oe(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=dt(i,0,Math.PI*2);const r=[],l=[],c=[],u=[],f=[],d=1/t,p=new B,g=new oe,v=new B,x=new B,M=new B;let S=0,_=0;for(let b=0;b<=e.length-1;b++)switch(b){case 0:S=e[b+1].x-e[b].x,_=e[b+1].y-e[b].y,v.x=_*1,v.y=-S,v.z=_*0,M.copy(v),v.normalize(),u.push(v.x,v.y,v.z);break;case e.length-1:u.push(M.x,M.y,M.z);break;default:S=e[b+1].x-e[b].x,_=e[b+1].y-e[b].y,v.x=_*1,v.y=-S,v.z=_*0,x.copy(v),v.x+=M.x,v.y+=M.y,v.z+=M.z,v.normalize(),u.push(v.x,v.y,v.z),M.copy(x)}for(let b=0;b<=t;b++){const T=n+b*d*i,A=Math.sin(T),U=Math.cos(T);for(let D=0;D<=e.length-1;D++){p.x=e[D].x*A,p.y=e[D].y,p.z=e[D].x*U,l.push(p.x,p.y,p.z),g.x=b/t,g.y=D/(e.length-1),c.push(g.x,g.y);const P=u[3*D+0]*A,I=u[3*D+1],w=u[3*D+0]*U;f.push(P,I,w)}}for(let b=0;b<t;b++)for(let T=0;T<e.length-1;T++){const A=T+b*e.length,U=A,D=A+e.length,P=A+e.length+1,I=A+1;r.push(U,D,I),r.push(P,I,D)}this.setIndex(r),this.setAttribute("position",new Ye(l,3)),this.setAttribute("uv",new Ye(c,2)),this.setAttribute("normal",new Ye(f,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Uf(e.points,e.segments,e.phiStart,e.phiLength)}}class Uc extends Ir{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Uc(e.radius,e.detail)}}class rl extends pt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,l=t/2,c=Math.floor(n),u=Math.floor(i),f=c+1,d=u+1,p=e/c,g=t/u,v=[],x=[],M=[],S=[];for(let _=0;_<d;_++){const b=_*g-l;for(let T=0;T<f;T++){const A=T*p-r;x.push(A,-b,0),M.push(0,0,1),S.push(T/c),S.push(1-_/u)}}for(let _=0;_<u;_++)for(let b=0;b<c;b++){const T=b+f*_,A=b+f*(_+1),U=b+1+f*(_+1),D=b+1+f*_;v.push(T,A,D),v.push(A,U,D)}this.setIndex(v),this.setAttribute("position",new Ye(x,3)),this.setAttribute("normal",new Ye(M,3)),this.setAttribute("uv",new Ye(S,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rl(e.width,e.height,e.widthSegments,e.heightSegments)}}class Pf extends pt{constructor(e=.5,t=1,n=32,i=1,r=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],f=[],d=[];let p=e;const g=(t-e)/i,v=new B,x=new oe;for(let M=0;M<=i;M++){for(let S=0;S<=n;S++){const _=r+S/n*l;v.x=p*Math.cos(_),v.y=p*Math.sin(_),u.push(v.x,v.y,v.z),f.push(0,0,1),x.x=(v.x/t+1)/2,x.y=(v.y/t+1)/2,d.push(x.x,x.y)}p+=g}for(let M=0;M<i;M++){const S=M*(n+1);for(let _=0;_<n;_++){const b=_+S,T=b,A=b+n+1,U=b+n+2,D=b+1;c.push(T,A,D),c.push(A,U,D)}}this.setIndex(c),this.setAttribute("position",new Ye(u,3)),this.setAttribute("normal",new Ye(f,3)),this.setAttribute("uv",new Ye(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Pf(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class If extends pt{constructor(e=new Ra([new oe(0,.5),new oe(-.5,-.5),new oe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],l=[];let c=0,u=0;if(Array.isArray(e)===!1)f(e);else for(let d=0;d<e.length;d++)f(e[d]),this.addGroup(c,u,d),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Ye(i,3)),this.setAttribute("normal",new Ye(r,3)),this.setAttribute("uv",new Ye(l,2));function f(d){const p=i.length/3,g=d.extractPoints(t);let v=g.shape;const x=g.holes;us.isClockWise(v)===!1&&(v=v.reverse());for(let S=0,_=x.length;S<_;S++){const b=x[S];us.isClockWise(b)===!0&&(x[S]=b.reverse())}const M=us.triangulateShape(v,x);for(let S=0,_=x.length;S<_;S++){const b=x[S];v=v.concat(b)}for(let S=0,_=v.length;S<_;S++){const b=v[S];i.push(b.x,b.y,0),r.push(0,0,1),l.push(b.x,b.y)}for(let S=0,_=M.length;S<_;S++){const b=M[S],T=b[0]+p,A=b[1]+p,U=b[2]+p;n.push(T,A,U),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return iA(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const l=t[e.shapes[i]];n.push(l)}return new If(n,e.curveSegments)}}function iA(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class Pc extends pt{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let f=0;const d=[],p=new B,g=new B,v=[],x=[],M=[],S=[];for(let _=0;_<=n;_++){const b=[],T=_/n;let A=0;_===0&&l===0?A=.5/t:_===n&&u===Math.PI&&(A=-.5/t);for(let U=0;U<=t;U++){const D=U/t;p.x=-e*Math.cos(i+D*r)*Math.sin(l+T*c),p.y=e*Math.cos(l+T*c),p.z=e*Math.sin(i+D*r)*Math.sin(l+T*c),x.push(p.x,p.y,p.z),g.copy(p).normalize(),M.push(g.x,g.y,g.z),S.push(D+A,1-T),b.push(f++)}d.push(b)}for(let _=0;_<n;_++)for(let b=0;b<t;b++){const T=d[_][b+1],A=d[_][b],U=d[_+1][b],D=d[_+1][b+1];(_!==0||l>0)&&v.push(T,A,D),(_!==n-1||u<Math.PI)&&v.push(A,U,D)}this.setIndex(v),this.setAttribute("position",new Ye(x,3)),this.setAttribute("normal",new Ye(M,3)),this.setAttribute("uv",new Ye(S,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Pc(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Of extends Ir{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Of(e.radius,e.detail)}}class Bf extends pt{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],u=[],f=[],d=new B,p=new B,g=new B;for(let v=0;v<=n;v++)for(let x=0;x<=i;x++){const M=x/i*r,S=v/n*Math.PI*2;p.x=(e+t*Math.cos(S))*Math.cos(M),p.y=(e+t*Math.cos(S))*Math.sin(M),p.z=t*Math.sin(S),c.push(p.x,p.y,p.z),d.x=e*Math.cos(M),d.y=e*Math.sin(M),g.subVectors(p,d).normalize(),u.push(g.x,g.y,g.z),f.push(x/i),f.push(v/n)}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const M=(i+1)*v+x-1,S=(i+1)*(v-1)+x-1,_=(i+1)*(v-1)+x,b=(i+1)*v+x;l.push(M,S,b),l.push(S,_,b)}this.setIndex(l),this.setAttribute("position",new Ye(c,3)),this.setAttribute("normal",new Ye(u,3)),this.setAttribute("uv",new Ye(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Bf(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class zf extends pt{constructor(e=1,t=.4,n=64,i=8,r=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],f=[],d=[],p=new B,g=new B,v=new B,x=new B,M=new B,S=new B,_=new B;for(let T=0;T<=n;++T){const A=T/n*r*Math.PI*2;b(A,r,l,e,v),b(A+.01,r,l,e,x),S.subVectors(x,v),_.addVectors(x,v),M.crossVectors(S,_),_.crossVectors(M,S),M.normalize(),_.normalize();for(let U=0;U<=i;++U){const D=U/i*Math.PI*2,P=-t*Math.cos(D),I=t*Math.sin(D);p.x=v.x+(P*_.x+I*M.x),p.y=v.y+(P*_.y+I*M.y),p.z=v.z+(P*_.z+I*M.z),u.push(p.x,p.y,p.z),g.subVectors(p,v).normalize(),f.push(g.x,g.y,g.z),d.push(T/n),d.push(U/i)}}for(let T=1;T<=n;T++)for(let A=1;A<=i;A++){const U=(i+1)*(T-1)+(A-1),D=(i+1)*T+(A-1),P=(i+1)*T+A,I=(i+1)*(T-1)+A;c.push(U,D,I),c.push(D,P,I)}this.setIndex(c),this.setAttribute("position",new Ye(u,3)),this.setAttribute("normal",new Ye(f,3)),this.setAttribute("uv",new Ye(d,2));function b(T,A,U,D,P){const I=Math.cos(T),w=Math.sin(T),R=U/A*T,F=Math.cos(R);P.x=D*(2+F)*.5*I,P.y=D*(2+F)*w*.5,P.z=D*Math.sin(R)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new zf(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Ff extends pt{constructor(e=new _g(new B(-1,-1,0),new B(-1,1,0),new B(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const l=e.computeFrenetFrames(t,r);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new B,u=new B,f=new oe;let d=new B;const p=[],g=[],v=[],x=[];M(),this.setIndex(x),this.setAttribute("position",new Ye(p,3)),this.setAttribute("normal",new Ye(g,3)),this.setAttribute("uv",new Ye(v,2));function M(){for(let T=0;T<t;T++)S(T);S(r===!1?t:0),b(),_()}function S(T){d=e.getPointAt(T/t,d);const A=l.normals[T],U=l.binormals[T];for(let D=0;D<=i;D++){const P=D/i*Math.PI*2,I=Math.sin(P),w=-Math.cos(P);u.x=w*A.x+I*U.x,u.y=w*A.y+I*U.y,u.z=w*A.z+I*U.z,u.normalize(),g.push(u.x,u.y,u.z),c.x=d.x+n*u.x,c.y=d.y+n*u.y,c.z=d.z+n*u.z,p.push(c.x,c.y,c.z)}}function _(){for(let T=1;T<=t;T++)for(let A=1;A<=i;A++){const U=(i+1)*(T-1)+(A-1),D=(i+1)*T+(A-1),P=(i+1)*T+A,I=(i+1)*(T-1)+A;x.push(U,D,I),x.push(D,P,I)}}function b(){for(let T=0;T<=t;T++)for(let A=0;A<=i;A++)f.x=T/t,f.y=A/i,v.push(f.x,f.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Ff(new nf[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class ES extends pt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new B,r=new B;if(e.index!==null){const l=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let f=0,d=u.length;f<d;++f){const p=u[f],g=p.start,v=p.count;for(let x=g,M=g+v;x<M;x+=3)for(let S=0;S<3;S++){const _=c.getX(x+S),b=c.getX(x+(S+1)%3);i.fromBufferAttribute(l,_),r.fromBufferAttribute(l,b),B_(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const l=e.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let f=0;f<3;f++){const d=3*c+f,p=3*c+(f+1)%3;i.fromBufferAttribute(l,d),r.fromBufferAttribute(l,p),B_(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Ye(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function B_(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var z_=Object.freeze({__proto__:null,BoxGeometry:Ha,CapsuleGeometry:Rf,CircleGeometry:wf,ConeGeometry:Lc,CylinderGeometry:Nc,DodecahedronGeometry:Cf,EdgesGeometry:dS,ExtrudeGeometry:Nf,IcosahedronGeometry:Lf,LatheGeometry:Uf,OctahedronGeometry:Uc,PlaneGeometry:rl,PolyhedronGeometry:Ir,RingGeometry:Pf,ShapeGeometry:If,SphereGeometry:Pc,TetrahedronGeometry:Of,TorusGeometry:Bf,TorusKnotGeometry:zf,TubeGeometry:Ff,WireframeGeometry:ES});class bS extends gn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Re(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class TS extends zn{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Ic extends gn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Re(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Re(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ui,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Zi extends Ic{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new oe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return dt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Re(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Re(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Re(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class AS extends gn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Re(16777215),this.specular=new Re(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Re(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ui,this.combine=bc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class RS extends gn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Re(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Re(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class xg extends gn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class wS extends gn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Re(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Re(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ui,this.combine=bc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Sg extends gn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Ur,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Mg extends gn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class CS extends gn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Re(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class DS extends Jn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Ea(s,e){return!s||s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function NS(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function LS(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Nm(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,l=0;l!==n;++r){const c=t[r]*e;for(let u=0;u!==e;++u)i[l++]=s[c+u]}return i}function Eg(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let l=r[n];if(l!==void 0)if(Array.isArray(l))do l=r[n],l!==void 0&&(e.push(r.time),t.push(...l)),r=s[i++];while(r!==void 0);else if(l.toArray!==void 0)do l=r[n],l!==void 0&&(e.push(r.time),l.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do l=r[n],l!==void 0&&(e.push(r.time),t.push(l)),r=s[i++];while(r!==void 0)}function sA(s,e,t,n,i=30){const r=s.clone();r.name=e;const l=[];for(let u=0;u<r.tracks.length;++u){const f=r.tracks[u],d=f.getValueSize(),p=[],g=[];for(let v=0;v<f.times.length;++v){const x=f.times[v]*i;if(!(x<t||x>=n)){p.push(f.times[v]);for(let M=0;M<d;++M)g.push(f.values[v*d+M])}}p.length!==0&&(f.times=Ea(p,f.times.constructor),f.values=Ea(g,f.values.constructor),l.push(f))}r.tracks=l;let c=1/0;for(let u=0;u<r.tracks.length;++u)c>r.tracks[u].times[0]&&(c=r.tracks[u].times[0]);for(let u=0;u<r.tracks.length;++u)r.tracks[u].shift(-1*c);return r.resetDuration(),r}function rA(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const f=s.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===u});if(f===void 0)continue;let d=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let g=0;const v=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(g=v/3);const x=c.times.length-1;let M;if(r<=c.times[0]){const _=d,b=p-d;M=c.values.slice(_,b)}else if(r>=c.times[x]){const _=x*p+d,b=_+p-d;M=c.values.slice(_,b)}else{const _=c.createInterpolant(),b=d,T=p-d;_.evaluate(r),M=_.resultBuffer.slice(b,T)}u==="quaternion"&&new Zn().fromArray(M).normalize().conjugate().toArray(M);const S=f.times.length;for(let _=0;_<S;++_){const b=_*v+g;if(u==="quaternion")Zn.multiplyQuaternionsFlat(f.values,b,M,0,f.values,b);else{const T=v-g*2;for(let A=0;A<T;++A)f.values[b+A]-=M[A]}}}return s.blendMode=ng,s}class aA{static convertArray(e,t){return Ea(e,t)}static isTypedArray(e){return NS(e)}static getKeyframeOrder(e){return LS(e)}static sortedArray(e,t,n){return Nm(e,t,n)}static flattenJSON(e,t,n,i){Eg(e,t,n,i)}static subclip(e,t,n,i,r=30){return sA(e,t,n,i,r)}static makeClipAdditive(e,t=0,n=e,i=30){return rA(e,t,n,i)}}class al{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(r=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=r)){const c=t[1];e<c&&(n=2,r=c);for(let u=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=r,r=t[--n-1],e>=r)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let l=0;l!==i;++l)t[l]=n[r+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class US extends al{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Sa,endingEnd:Sa}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,l=e+1,c=i[r],u=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case Ma:r=e,c=2*t-n;break;case dc:r=i.length-2,c=t+i[r]-i[r+1];break;default:r=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case Ma:l=e,u=2*n-t;break;case dc:l=1,u=n+i[1]-i[0];break;default:l=e-1,u=t}const f=(n-t)*.5,d=this.valueSize;this._weightPrev=f/(t-c),this._weightNext=f/(u-n),this._offsetPrev=r*d,this._offsetNext=l*d}interpolate_(e,t,n,i){const r=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,f=u-c,d=this._offsetPrev,p=this._offsetNext,g=this._weightPrev,v=this._weightNext,x=(n-t)/(i-t),M=x*x,S=M*x,_=-g*S+2*g*M-g*x,b=(1+g)*S+(-1.5-2*g)*M+(-.5+g)*x+1,T=(-1-v)*S+(1.5+v)*M+.5*x,A=v*S-v*M;for(let U=0;U!==c;++U)r[U]=_*l[d+U]+b*l[f+U]+T*l[u+U]+A*l[p+U];return r}}class bg extends al{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,f=u-c,d=(n-t)/(i-t),p=1-d;for(let g=0;g!==c;++g)r[g]=l[f+g]*p+l[u+g]*d;return r}}class PS extends al{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ji{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ea(t,this.TimeBufferType),this.values=Ea(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Ea(e.times,Array),values:Ea(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new PS(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new bg(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new US(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ko:t=this.InterpolantFactoryMethodDiscrete;break;case jo:t=this.InterpolantFactoryMethodLinear;break;case dh:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ko;case this.InterpolantFactoryMethodLinear:return jo;case this.InterpolantFactoryMethodSmooth:return dh}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,l=i-1;for(;r!==i&&n[r]<e;)++r;for(;l!==-1&&n[l]>t;)--l;if(++l,r!==0||l!==i){r>=l&&(l=Math.max(l,1),r=l-1);const c=this.getValueSize();this.times=n.slice(r,l),this.values=this.values.slice(r*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let l=null;for(let c=0;c!==r;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(l!==null&&l>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,l),e=!1;break}l=u}if(i!==void 0&&NS(i))for(let c=0,u=i.length;c!==u;++c){const f=i[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===dh,r=e.length-1;let l=1;for(let c=1;c<r;++c){let u=!1;const f=e[c],d=e[c+1];if(f!==d&&(c!==1||f!==e[0]))if(i)u=!0;else{const p=c*n,g=p-n,v=p+n;for(let x=0;x!==n;++x){const M=t[p+x];if(M!==t[g+x]||M!==t[v+x]){u=!0;break}}}if(u){if(c!==l){e[l]=e[c];const p=c*n,g=l*n;for(let v=0;v!==n;++v)t[g+v]=t[p+v]}++l}}if(r>0){e[l]=e[r];for(let c=r*n,u=l*n,f=0;f!==n;++f)t[u+f]=t[c+f];++l}return l!==e.length?(this.times=e.slice(0,l),this.values=t.slice(0,l*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Ji.prototype.ValueTypeName="";Ji.prototype.TimeBufferType=Float32Array;Ji.prototype.ValueBufferType=Float32Array;Ji.prototype.DefaultInterpolation=jo;class Va extends Ji{constructor(e,t,n){super(e,t,n)}}Va.prototype.ValueTypeName="bool";Va.prototype.ValueBufferType=Array;Va.prototype.DefaultInterpolation=Ko;Va.prototype.InterpolantFactoryMethodLinear=void 0;Va.prototype.InterpolantFactoryMethodSmooth=void 0;class Tg extends Ji{constructor(e,t,n,i){super(e,t,n,i)}}Tg.prototype.ValueTypeName="color";class Ia extends Ji{constructor(e,t,n,i){super(e,t,n,i)}}Ia.prototype.ValueTypeName="number";class IS extends al{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let f=e*c;for(let d=f+c;f!==d;f+=4)Zn.slerpFlat(r,0,l,f-c,l,f,u);return r}}class Oa extends Ji{constructor(e,t,n,i){super(e,t,n,i)}InterpolantFactoryMethodLinear(e){return new IS(this.times,this.values,this.getValueSize(),e)}}Oa.prototype.ValueTypeName="quaternion";Oa.prototype.InterpolantFactoryMethodSmooth=void 0;class Ga extends Ji{constructor(e,t,n){super(e,t,n)}}Ga.prototype.ValueTypeName="string";Ga.prototype.ValueBufferType=Array;Ga.prototype.DefaultInterpolation=Ko;Ga.prototype.InterpolantFactoryMethodLinear=void 0;Ga.prototype.InterpolantFactoryMethodSmooth=void 0;class Ba extends Ji{constructor(e,t,n,i){super(e,t,n,i)}}Ba.prototype.ValueTypeName="vector";class el{constructor(e="",t=-1,n=[],i=_f){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Li(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(lA(n[l]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,l=n.length;r!==l;++r)t.push(Ji.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,l=[];for(let c=0;c<r;c++){let u=[],f=[];u.push((c+r-1)%r,c,(c+1)%r),f.push(0,1,0);const d=LS(u);u=Nm(u,1,d),f=Nm(f,1,d),!i&&u[0]===0&&(u.push(r),f.push(f[0])),l.push(new Ia(".morphTargetInfluences["+t[c].name+"]",u,f).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const f=e[c],d=f.name.match(r);if(d&&d.length>1){const p=d[1];let g=i[p];g||(i[p]=g=[]),g.push(f)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,g,v,x,M){if(v.length!==0){const S=[],_=[];Eg(v,S,_,x),S.length!==0&&M.push(new p(g,S,_))}},i=[],r=e.name||"default",l=e.fps||30,c=e.blendMode;let u=e.length||-1;const f=e.hierarchy||[];for(let p=0;p<f.length;p++){const g=f[p].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const v={};let x;for(x=0;x<g.length;x++)if(g[x].morphTargets)for(let M=0;M<g[x].morphTargets.length;M++)v[g[x].morphTargets[M]]=-1;for(const M in v){const S=[],_=[];for(let b=0;b!==g[x].morphTargets.length;++b){const T=g[x];S.push(T.time),_.push(T.morphTarget===M?1:0)}i.push(new Ia(".morphTargetInfluence["+M+"]",S,_))}u=v.length*l}else{const v=".bones["+t[p].name+"]";n(Ba,v+".position",g,"pos",i),n(Oa,v+".quaternion",g,"rot",i),n(Ba,v+".scale",g,"scl",i)}}return i.length===0?null:new this(r,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function oA(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ia;case"vector":case"vector2":case"vector3":case"vector4":return Ba;case"color":return Tg;case"quaternion":return Oa;case"bool":case"boolean":return Va;case"string":return Ga}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function lA(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=oA(s.type);if(s.times===void 0){const t=[],n=[];Eg(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const Ts={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Ag{constructor(e,t,n){const i=this;let r=!1,l=0,c=0,u;const f=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){c++,r===!1&&i.onStart!==void 0&&i.onStart(d,l,c),r=!0},this.itemEnd=function(d){l++,i.onProgress!==void 0&&i.onProgress(d,l,c),l===c&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,p){return f.push(d,p),this},this.removeHandler=function(d){const p=f.indexOf(d);return p!==-1&&f.splice(p,2),this},this.getHandler=function(d){for(let p=0,g=f.length;p<g;p+=2){const v=f[p],x=f[p+1];if(v.global&&(v.lastIndex=0),v.test(d))return x}return null}}}const OS=new Ag;class oi{constructor(e){this.manager=e!==void 0?e:OS,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}oi.DEFAULT_MATERIAL_NAME="__DEFAULT";const Xs={};class cA extends Error{constructor(e,t){super(e),this.response=t}}class ds extends oi{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Ts.get(`file:${e}`);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Xs[e]!==void 0){Xs[e].push({onLoad:t,onProgress:n,onError:i});return}Xs[e]=[],Xs[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||f.body===void 0||f.body.getReader===void 0)return f;const d=Xs[e],p=f.body.getReader(),g=f.headers.get("X-File-Size")||f.headers.get("Content-Length"),v=g?parseInt(g):0,x=v!==0;let M=0;const S=new ReadableStream({start(_){b();function b(){p.read().then(({done:T,value:A})=>{if(T)_.close();else{M+=A.byteLength;const U=new ProgressEvent("progress",{lengthComputable:x,loaded:M,total:v});for(let D=0,P=d.length;D<P;D++){const I=d[D];I.onProgress&&I.onProgress(U)}_.enqueue(A),b()}},T=>{_.error(T)})}}});return new Response(S)}else throw new cA(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`,f)}).then(f=>{switch(u){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(d=>new DOMParser().parseFromString(d,c));case"json":return f.json();default:if(c==="")return f.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),g=p&&p[1]?p[1].toLowerCase():void 0,v=new TextDecoder(g);return f.arrayBuffer().then(x=>v.decode(x))}}}).then(f=>{Ts.add(`file:${e}`,f);const d=Xs[e];delete Xs[e];for(let p=0,g=d.length;p<g;p++){const v=d[p];v.onLoad&&v.onLoad(f)}}).catch(f=>{const d=Xs[e];if(d===void 0)throw this.manager.itemError(e),f;delete Xs[e];for(let p=0,g=d.length;p<g;p++){const v=d[p];v.onError&&v.onError(f)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class uA extends oi{constructor(e){super(e)}load(e,t,n,i){const r=this,l=new ds(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(r.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=el.parse(e[n]);t.push(i)}return t}}class hA extends oi{constructor(e){super(e)}load(e,t,n,i){const r=this,l=[],c=new Af,u=new ds(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(r.withCredentials);let f=0;function d(p){u.load(e[p],function(g){const v=r.parse(g,!0);l[p]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},f+=1,f===6&&(v.mipmapCount===1&&(c.minFilter=jt),c.image=l,c.format=v.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,g=e.length;p<g;++p)d(p);else u.load(e,function(p){const g=r.parse(p,!0);if(g.isCubemap){const v=g.mipmaps.length/g.mipmapCount;for(let x=0;x<v;x++){l[x]={mipmaps:[]};for(let M=0;M<g.mipmapCount;M++)l[x].mipmaps.push(g.mipmaps[x*g.mipmapCount+M]),l[x].format=g.format,l[x].width=g.width,l[x].height=g.height}c.image=l}else c.image.width=g.width,c.image.height=g.height,c.mipmaps=g.mipmaps;g.mipmapCount===1&&(c.minFilter=jt),c.format=g.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}const Po=new WeakMap;class Mc extends oi{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,l=Ts.get(`image:${e}`);if(l!==void 0){if(l.complete===!0)r.manager.itemStart(e),setTimeout(function(){t&&t(l),r.manager.itemEnd(e)},0);else{let p=Po.get(l);p===void 0&&(p=[],Po.set(l,p)),p.push({onLoad:t,onError:i})}return l}const c=vc("img");function u(){d(),t&&t(this);const p=Po.get(this)||[];for(let g=0;g<p.length;g++){const v=p[g];v.onLoad&&v.onLoad(this)}Po.delete(this),r.manager.itemEnd(e)}function f(p){d(),i&&i(p),Ts.remove(`image:${e}`);const g=Po.get(this)||[];for(let v=0;v<g.length;v++){const x=g[v];x.onError&&x.onError(p)}Po.delete(this),r.manager.itemError(e),r.manager.itemEnd(e)}function d(){c.removeEventListener("load",u,!1),c.removeEventListener("error",f,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",f,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),Ts.add(`image:${e}`,c),r.manager.itemStart(e),c.src=e,c}}class fA extends oi{constructor(e){super(e)}load(e,t,n,i){const r=new Rc;r.colorSpace=kt;const l=new Mc(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(f){l.load(e[f],function(d){r.images[f]=d,c++,c===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let f=0;f<e.length;++f)u(f);return r}}class dA extends oi{constructor(e){super(e)}load(e,t,n,i){const r=this,l=new As,c=new ds(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(r.withCredentials),c.load(e,function(u){let f;try{f=r.parse(u)}catch(d){if(i!==void 0)i(d);else{console.error(d);return}}f.image!==void 0?l.image=f.image:f.data!==void 0&&(l.image.width=f.width,l.image.height=f.height,l.image.data=f.data),l.wrapS=f.wrapS!==void 0?f.wrapS:Ci,l.wrapT=f.wrapT!==void 0?f.wrapT:Ci,l.magFilter=f.magFilter!==void 0?f.magFilter:jt,l.minFilter=f.minFilter!==void 0?f.minFilter:jt,l.anisotropy=f.anisotropy!==void 0?f.anisotropy:1,f.colorSpace!==void 0&&(l.colorSpace=f.colorSpace),f.flipY!==void 0&&(l.flipY=f.flipY),f.format!==void 0&&(l.format=f.format),f.type!==void 0&&(l.type=f.type),f.mipmaps!==void 0&&(l.mipmaps=f.mipmaps,l.minFilter=Di),f.mipmapCount===1&&(l.minFilter=jt),f.generateMipmaps!==void 0&&(l.generateMipmaps=f.generateMipmaps),l.needsUpdate=!0,t&&t(l,f)},n,i),l}}class BS extends oi{constructor(e){super(e)}load(e,t,n,i){const r=new nn,l=new Mc(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){r.image=c,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class Or extends wt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Re(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class zS extends Or{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Re(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Gp=new it,F_=new B,H_=new B;class Rg{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new oe(512,512),this.mapType=Bn,this.map=null,this.mapPass=null,this.matrix=new it,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new sl,this._frameExtents=new oe(1,1),this._viewportCount=1,this._viewports=[new Lt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;F_.setFromMatrixPosition(e.matrixWorld),t.position.copy(F_),H_.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(H_),t.updateMatrixWorld(),Gp.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Gp),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Gp)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class pA extends Rg{constructor(){super(new xn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const t=this.camera,n=Zo*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class wg extends Or{constructor(e,t,n=0,i=Math.PI/3,r=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.target=new wt,this.distance=n,this.angle=i,this.penumbra=r,this.decay=l,this.map=null,this.shadow=new pA}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const V_=new it,jl=new B,kp=new B;class mA extends Rg{constructor(){super(new xn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new oe(4,2),this._viewportCount=6,this._viewports=[new Lt(2,1,1,1),new Lt(0,1,1,1),new Lt(3,1,1,1),new Lt(1,1,1,1),new Lt(3,0,1,1),new Lt(1,0,1,1)],this._cubeDirections=[new B(1,0,0),new B(-1,0,0),new B(0,0,1),new B(0,0,-1),new B(0,1,0),new B(0,-1,0)],this._cubeUps=[new B(0,1,0),new B(0,1,0),new B(0,1,0),new B(0,1,0),new B(0,0,1),new B(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),jl.setFromMatrixPosition(e.matrixWorld),n.position.copy(jl),kp.copy(n.position),kp.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(kp),n.updateMatrixWorld(),i.makeTranslation(-jl.x,-jl.y,-jl.z),V_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(V_)}}class Cg extends Or{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new mA}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}let ol=class extends Ac{constructor(e=-1,t=1,n=1,i=-1,r=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,l=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=f*this.view.offsetX,l=r+f*this.view.width,c-=d*this.view.offsetY,u=c-d*this.view.height}this.projectionMatrix.makeOrthographic(r,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}};class gA extends Rg{constructor(){super(new ol(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Dg extends Or{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.target=new wt,this.shadow=new gA}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class FS extends Or{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class HS extends Or{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class VS{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new B)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*r),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*r)),t.addScaledVector(l[6],.315392*(3*r*r-1)),t.addScaledVector(l[7],1.092548*(n*r)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*r),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*r),t.addScaledVector(l[6],.743125*r*r-.247708),t.addScaledVector(l[7],2*.429043*n*r),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class GS extends Or{constructor(e=new VS,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Hf extends oi{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,l=new ds(r.manager);l.setPath(r.path),l.setRequestHeader(r.requestHeader),l.setWithCredentials(r.withCredentials),l.load(e,function(c){try{t(r.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Re().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(i.dispersion=e.dispersion),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const l=e.uniforms[r];switch(i.uniforms[r]={},l.type){case"t":i.uniforms[r].value=n(l.value);break;case"c":i.uniforms[r].value=new Re().setHex(l.value);break;case"v2":i.uniforms[r].value=new oe().fromArray(l.value);break;case"v3":i.uniforms[r].value=new B().fromArray(l.value);break;case"v4":i.uniforms[r].value=new Lt().fromArray(l.value);break;case"m3":i.uniforms[r].value=new mt().fromArray(l.value);break;case"m4":i.uniforms[r].value=new it().fromArray(l.value);break;default:i.uniforms[r].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new oe().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new oe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return Hf.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:bS,SpriteMaterial:cg,RawShaderMaterial:TS,ShaderMaterial:zn,PointsMaterial:Tf,MeshPhysicalMaterial:Zi,MeshStandardMaterial:Ic,MeshPhongMaterial:AS,MeshToonMaterial:RS,MeshNormalMaterial:xg,MeshLambertMaterial:wS,MeshDepthMaterial:Sg,MeshDistanceMaterial:Mg,MeshBasicMaterial:Ni,MeshMatcapMaterial:CS,LineDashedMaterial:DS,LineBasicMaterial:Jn,Material:gn};return new t[e]}}class wr{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class kS extends pt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class XS extends oi{constructor(e){super(e)}load(e,t,n,i){const r=this,l=new ds(r.manager);l.setPath(r.path),l.setRequestHeader(r.requestHeader),l.setWithCredentials(r.withCredentials),l.load(e,function(c){try{t(r.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(v,x){if(t[x]!==void 0)return t[x];const S=v.interleavedBuffers[x],_=r(v,S.buffer),b=Fo(S.type,_),T=new wc(b,S.stride);return T.uuid=S.uuid,t[x]=T,T}function r(v,x){if(n[x]!==void 0)return n[x];const S=v.arrayBuffers[x],_=new Uint32Array(S).buffer;return n[x]=_,_}const l=e.isInstancedBufferGeometry?new kS:new pt,c=e.data.index;if(c!==void 0){const v=Fo(c.type,c.array);l.setIndex(new Ut(v,1))}const u=e.data.attributes;for(const v in u){const x=u[v];let M;if(x.isInterleavedBufferAttribute){const S=i(e.data,x.data);M=new Nr(S,x.itemSize,x.offset,x.normalized)}else{const S=Fo(x.type,x.array),_=x.isInstancedBufferAttribute?Ua:Ut;M=new _(S,x.itemSize,x.normalized)}x.name!==void 0&&(M.name=x.name),x.usage!==void 0&&M.setUsage(x.usage),l.setAttribute(v,M)}const f=e.data.morphAttributes;if(f)for(const v in f){const x=f[v],M=[];for(let S=0,_=x.length;S<_;S++){const b=x[S];let T;if(b.isInterleavedBufferAttribute){const A=i(e.data,b.data);T=new Nr(A,b.itemSize,b.offset,b.normalized)}else{const A=Fo(b.type,b.array);T=new Ut(A,b.itemSize,b.normalized)}b.name!==void 0&&(T.name=b.name),M.push(T)}l.morphAttributes[v]=M}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let v=0,x=p.length;v!==x;++v){const M=p[v];l.addGroup(M.start,M.count,M.materialIndex)}const g=e.data.boundingSphere;return g!==void 0&&(l.boundingSphere=new Nn().fromJSON(g)),e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class vA extends oi{constructor(e){super(e)}load(e,t,n,i){const r=this,l=this.path===""?wr.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new ds(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let f=null;try{f=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const d=f.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(f,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?wr.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new ds(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const l=await r.loadAsync(e,t),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(f)}),c=this.parseTextures(e.textures,l),u=this.parseMaterials(e.materials,c),f=this.parseObject(e.object,r,u,c,n),d=this.parseSkeletons(e.skeletons,f);if(this.bindSkeletons(f,d),this.bindLightTargets(f),t!==void 0){let p=!1;for(const g in l)if(l[g].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(f)}return f}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,r),c=this.parseMaterials(e.materials,l),u=this.parseObject(e.object,i,c,l,t),f=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,f),this.bindLightTargets(u),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new Ra().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,l=e.length;r<l;r++){const c=new Cc().fromJSON(e[r],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new XS;for(let r=0,l=e.length;r<l;r++){let c;const u=e[r];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in z_?c=z_[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new Hf;r.setTextures(t);for(let l=0,c=e.length;l<c;l++){const u=e[l];n[u.uuid]===void 0&&(n[u.uuid]=r.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=el.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function l(u){return n.manager.itemStart(u),r.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const f=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(f)?f:n.resourcePath+f;return l(d)}else return u.data?{data:Fo(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new Ag(t);r=new Mc(u),r.setCrossOrigin(this.crossOrigin);for(let f=0,d=e.length;f<d;f++){const p=e[f],g=p.url;if(Array.isArray(g)){const v=[];for(let x=0,M=g.length;x<M;x++){const S=g[x],_=c(S);_!==null&&(_ instanceof HTMLImageElement?v.push(_):v.push(new As(_.data,_.width,_.height)))}i[p.uuid]=new Rr(v)}else{const v=c(p.url);i[p.uuid]=new Rr(v)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return l.data?{data:Fo(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new Mc(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const u=e[l],f=u.url;if(Array.isArray(f)){const d=[];for(let p=0,g=f.length;p<g;p++){const v=f[p],x=await r(v);x!==null&&(x instanceof HTMLImageElement?d.push(x):d.push(new As(x.data,x.width,x.height)))}n[u.uuid]=new Rr(d)}else{const d=await r(u.url);n[u.uuid]=new Rr(d)}}}return n}parseTextures(e,t){function n(r,l){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),l[r])}const i={};if(e!==void 0)for(let r=0,l=e.length;r<l;r++){const c=e[r];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],f=u.data;let d;Array.isArray(f)?(d=new Rc,f.length===6&&(d.needsUpdate=!0)):(f&&f.data?d=new As:d=new nn,f&&(d.needsUpdate=!0)),d.source=u,d.uuid=c.uuid,c.name!==void 0&&(d.name=c.name),c.mapping!==void 0&&(d.mapping=n(c.mapping,_A)),c.channel!==void 0&&(d.channel=c.channel),c.offset!==void 0&&d.offset.fromArray(c.offset),c.repeat!==void 0&&d.repeat.fromArray(c.repeat),c.center!==void 0&&d.center.fromArray(c.center),c.rotation!==void 0&&(d.rotation=c.rotation),c.wrap!==void 0&&(d.wrapS=n(c.wrap[0],G_),d.wrapT=n(c.wrap[1],G_)),c.format!==void 0&&(d.format=c.format),c.internalFormat!==void 0&&(d.internalFormat=c.internalFormat),c.type!==void 0&&(d.type=c.type),c.colorSpace!==void 0&&(d.colorSpace=c.colorSpace),c.minFilter!==void 0&&(d.minFilter=n(c.minFilter,k_)),c.magFilter!==void 0&&(d.magFilter=n(c.magFilter,k_)),c.anisotropy!==void 0&&(d.anisotropy=c.anisotropy),c.flipY!==void 0&&(d.flipY=c.flipY),c.generateMipmaps!==void 0&&(d.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(d.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(d.compareFunction=c.compareFunction),c.userData!==void 0&&(d.userData=c.userData),i[c.uuid]=d}return i}parseObject(e,t,n,i,r){let l;function c(g){return t[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",g),t[g]}function u(g){if(g!==void 0){if(Array.isArray(g)){const v=[];for(let x=0,M=g.length;x<M;x++){const S=g[x];n[S]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",S),v.push(n[S])}return v}return n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),n[g]}}function f(g){return i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",g),i[g]}let d,p;switch(e.type){case"Scene":l=new _c,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new Re(e.background):l.background=f(e.background)),e.environment!==void 0&&(l.environment=f(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new Mf(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new Sf(e.fog.color,e.fog.density)),e.fog.name!==""&&(l.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(l.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&l.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":l=new xn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new ol(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new FS(e.color,e.intensity);break;case"DirectionalLight":l=new Dg(e.color,e.intensity),l.target=e.target||"";break;case"PointLight":l=new Cg(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new HS(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new wg(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),l.target=e.target||"";break;case"HemisphereLight":l=new zS(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new GS().fromJSON(e);break;case"SkinnedMesh":d=c(e.geometry),p=u(e.material),l=new ug(d,p),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":d=c(e.geometry),p=u(e.material),l=new pn(d,p);break;case"InstancedMesh":d=c(e.geometry),p=u(e.material);const g=e.count,v=e.instanceMatrix,x=e.instanceColor;l=new hg(d,p,g),l.instanceMatrix=new Ua(new Float32Array(v.array),16),x!==void 0&&(l.instanceColor=new Ua(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":d=c(e.geometry),p=u(e.material),l=new hS(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,p),l.geometry=d,l.perObjectFrustumCulled=e.perObjectFrustumCulled,l.sortObjects=e.sortObjects,l._drawRanges=e.drawRanges,l._reservedRanges=e.reservedRanges,l._geometryInfo=e.geometryInfo.map(M=>{let S=null,_=null;return M.boundingBox!==void 0&&(S=new On().fromJSON(M.boundingBox)),M.boundingSphere!==void 0&&(_=new Nn().fromJSON(M.boundingSphere)),{...M,boundingBox:S,boundingSphere:_}}),l._instanceInfo=e.instanceInfo,l._availableInstanceIds=e._availableInstanceIds,l._availableGeometryIds=e._availableGeometryIds,l._nextIndexStart=e.nextIndexStart,l._nextVertexStart=e.nextVertexStart,l._geometryCount=e.geometryCount,l._maxInstanceCount=e.maxInstanceCount,l._maxVertexCount=e.maxVertexCount,l._maxIndexCount=e.maxIndexCount,l._geometryInitialized=e.geometryInitialized,l._matricesTexture=f(e.matricesTexture.uuid),l._indirectTexture=f(e.indirectTexture.uuid),e.colorsTexture!==void 0&&(l._colorsTexture=f(e.colorsTexture.uuid)),e.boundingSphere!==void 0&&(l.boundingSphere=new Nn().fromJSON(e.boundingSphere)),e.boundingBox!==void 0&&(l.boundingBox=new On().fromJSON(e.boundingBox));break;case"LOD":l=new uS;break;case"Line":l=new Qs(c(e.geometry),u(e.material));break;case"LineLoop":l=new fg(c(e.geometry),u(e.material));break;case"LineSegments":l=new ps(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":l=new dg(c(e.geometry),u(e.material));break;case"Sprite":l=new cS(u(e.material));break;case"Group":l=new Ks;break;case"Bone":l=new Ef;break;default:l=new wt}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(l.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const g=e.children;for(let v=0;v<g.length;v++)l.add(this.parseObject(g[v],t,n,i,r))}if(e.animations!==void 0){const g=e.animations;for(let v=0;v<g.length;v++){const x=g[v];l.animations.push(r[x])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const g=e.levels;for(let v=0;v<g.length;v++){const x=g[v],M=l.getObjectByProperty("uuid",x.object);M!==void 0&&l.addLevel(M,x.distance,x.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,i=e.getObjectByProperty("uuid",n);i!==void 0?t.target=i:t.target=new wt}})}}const _A={UVMapping:uf,CubeReflectionMapping:Js,CubeRefractionMapping:Cr,EquirectangularReflectionMapping:hc,EquirectangularRefractionMapping:fc,CubeUVReflectionMapping:nl},G_={RepeatWrapping:Dr,ClampToEdgeWrapping:Ci,MirroredRepeatWrapping:Wo},k_={NearestFilter:an,NearestMipmapNearestFilter:hf,NearestMipmapLinearFilter:xa,LinearFilter:jt,LinearMipmapNearestFilter:Vo,LinearMipmapLinearFilter:Di},Xp=new WeakMap;class WS extends oi{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,l=Ts.get(`image-bitmap:${e}`);if(l!==void 0){if(r.manager.itemStart(e),l.then){l.then(f=>{if(Xp.has(l)===!0)i&&i(Xp.get(l)),r.manager.itemError(e),r.manager.itemEnd(e);else return t&&t(f),r.manager.itemEnd(e),f});return}return setTimeout(function(){t&&t(l),r.manager.itemEnd(e)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(e,c).then(function(f){return f.blob()}).then(function(f){return createImageBitmap(f,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(f){return Ts.add(`image-bitmap:${e}`,f),t&&t(f),r.manager.itemEnd(e),f}).catch(function(f){i&&i(f),Xp.set(u,f),Ts.remove(`image-bitmap:${e}`),r.manager.itemError(e),r.manager.itemEnd(e)});Ts.add(`image-bitmap:${e}`,u),r.manager.itemStart(e)}}let th;class Ng{static getContext(){return th===void 0&&(th=new(window.AudioContext||window.webkitAudioContext)),th}static setContext(e){th=e}}class yA extends oi{constructor(e){super(e)}load(e,t,n,i){const r=this,l=new ds(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{const f=u.slice(0);Ng.getContext().decodeAudioData(f,function(p){t(p)}).catch(c)}catch(f){c(f)}},n,i);function c(u){i?i(u):console.error(u),r.manager.itemError(e)}}}const X_=new it,W_=new it,la=new it;class xA{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new xn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new xn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,la.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,l=t.near*Math.tan(Aa*t.fov*.5)/t.zoom;let c,u;W_.elements[12]=-i,X_.elements[12]=i,c=-l*t.aspect+r,u=l*t.aspect+r,la.elements[0]=2*t.near/(u-c),la.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(la),c=-l*t.aspect-r,u=l*t.aspect-r,la.elements[0]=2*t.near/(u-c),la.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(la)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(W_),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(X_)}}class qS extends xn{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class Lg{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=performance.now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}const ca=new B,Wp=new Zn,SA=new B,ua=new B,ha=new B;class MA extends wt{constructor(){super(),this.type="AudioListener",this.context=Ng.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Lg}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ca,Wp,SA),ua.set(0,0,-1).applyQuaternion(Wp),ha.set(0,1,0).applyQuaternion(Wp),t.positionX){const n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(ca.x,n),t.positionY.linearRampToValueAtTime(ca.y,n),t.positionZ.linearRampToValueAtTime(ca.z,n),t.forwardX.linearRampToValueAtTime(ua.x,n),t.forwardY.linearRampToValueAtTime(ua.y,n),t.forwardZ.linearRampToValueAtTime(ua.z,n),t.upX.linearRampToValueAtTime(ha.x,n),t.upY.linearRampToValueAtTime(ha.y,n),t.upZ.linearRampToValueAtTime(ha.z,n)}else t.setPosition(ca.x,ca.y,ca.z),t.setOrientation(ua.x,ua.y,ua.z,ha.x,ha.y,ha.z)}}class YS extends wt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const fa=new B,q_=new Zn,EA=new B,da=new B;class bA extends YS{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(fa,q_,EA),da.set(0,0,1).applyQuaternion(q_);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(fa.x,n),t.positionY.linearRampToValueAtTime(fa.y,n),t.positionZ.linearRampToValueAtTime(fa.z,n),t.orientationX.linearRampToValueAtTime(da.x,n),t.orientationY.linearRampToValueAtTime(da.y,n),t.orientationZ.linearRampToValueAtTime(da.z,n)}else t.setPosition(fa.x,fa.y,fa.z),t.setOrientation(da.x,da.y,da.z)}}class TA{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class KS{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,l;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[r+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,r,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-r,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,f=t+t;u!==f;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,l=i;r!==l;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let l=0;l!==r;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){Zn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const l=this._workIndex*r;Zn.multiplyQuaternionsFlat(e,l,e,t,e,n),Zn.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,r){const l=1-i;for(let c=0;c!==r;++c){const u=t+c;e[u]=e[u]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,r){for(let l=0;l!==r;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const Ug="\\[\\]\\.:\\/",AA=new RegExp("["+Ug+"]","g"),Pg="[^"+Ug+"]",RA="[^"+Ug.replace("\\.","")+"]",wA=/((?:WC+[\/:])*)/.source.replace("WC",Pg),CA=/(WCOD+)?/.source.replace("WCOD",RA),DA=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Pg),NA=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Pg),LA=new RegExp("^"+wA+CA+DA+NA+"$"),UA=["material","materials","bones","map"];class PA{constructor(e,t,n){const i=n||Nt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Nt{constructor(e,t,n){this.path=t,this.parsedPath=n||Nt.parseTrackName(t),this.node=Nt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Nt.Composite(e,t,n):new Nt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(AA,"")}static parseTrackName(e){const t=LA.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);UA.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let l=0;l<r.length;l++){const c=r[l];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=Nt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let f=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===f){f=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(f!==void 0){if(e[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[f]}}const l=e[i];if(l===void 0){const f=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?c=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=r}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Nt.Composite=PA;Nt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Nt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Nt.prototype.GetterByBindingType=[Nt.prototype._getValue_direct,Nt.prototype._getValue_array,Nt.prototype._getValue_arrayElement,Nt.prototype._getValue_toArray];Nt.prototype.SetterByBindingTypeAndVersioning=[[Nt.prototype._setValue_direct,Nt.prototype._setValue_direct_setNeedsUpdate,Nt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Nt.prototype._setValue_array,Nt.prototype._setValue_array_setNeedsUpdate,Nt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Nt.prototype._setValue_arrayElement,Nt.prototype._setValue_arrayElement_setNeedsUpdate,Nt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Nt.prototype._setValue_fromArray,Nt.prototype._setValue_fromArray_setNeedsUpdate,Nt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class IA{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Li(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,l=r.length;let c,u=e.length,f=this.nCachedObjects_;for(let d=0,p=arguments.length;d!==p;++d){const g=arguments[d],v=g.uuid;let x=t[v];if(x===void 0){x=u++,t[v]=x,e.push(g);for(let M=0,S=l;M!==S;++M)r[M].push(new Nt(g,n[M],i[M]))}else if(x<f){c=e[x];const M=--f,S=e[M];t[S.uuid]=x,e[x]=S,t[v]=M,e[M]=g;for(let _=0,b=l;_!==b;++_){const T=r[_],A=T[M];let U=T[x];T[x]=A,U===void 0&&(U=new Nt(g,n[_],i[_])),T[M]=U}}else e[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=f}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],f=u.uuid,d=t[f];if(d!==void 0&&d>=r){const p=r++,g=e[p];t[g.uuid]=d,e[d]=g,t[f]=p,e[p]=u;for(let v=0,x=i;v!==x;++v){const M=n[v],S=M[p],_=M[d];M[d]=S,M[p]=_}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,l=e.length;for(let c=0,u=arguments.length;c!==u;++c){const f=arguments[c],d=f.uuid,p=t[d];if(p!==void 0)if(delete t[d],p<r){const g=--r,v=e[g],x=--l,M=e[x];t[v.uuid]=p,e[p]=v,t[M.uuid]=g,e[g]=M,e.pop();for(let S=0,_=i;S!==_;++S){const b=n[S],T=b[g],A=b[x];b[p]=T,b[g]=A,b.pop()}}else{const g=--l,v=e[g];g>0&&(t[v.uuid]=p),e[p]=v,e.pop();for(let x=0,M=i;x!==M;++x){const S=n[x];S[p]=S[g],S.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const l=this._paths,c=this._parsedPaths,u=this._objects,f=u.length,d=this.nCachedObjects_,p=new Array(f);i=r.length,n[e]=i,l.push(e),c.push(t),r.push(p);for(let g=d,v=u.length;g!==v;++g){const x=u[g];p[g]=new Nt(x,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],f=e[c];t[f]=n,l[n]=u,l.pop(),r[n]=r[c],r.pop(),i[n]=i[c],i.pop()}}}class jS{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,l=r.length,c=new Array(l),u={endingStart:Sa,endingEnd:Sa};for(let f=0;f!==l;++f){const d=r[f].createInterpolant(null);c[f]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Vx,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n=!1){if(e.fadeOut(t),this.fadeIn(t),n===!0){const i=this._clip.duration,r=e._clip.duration,l=r/i,c=i/r;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n=!1){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,f=c.sampleValues;return u[0]=r,u[1]=r+n,f[0]=e/l,f[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const u=(e-r)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,f=this._propertyBindings;switch(this.blendMode){case ng:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),f[d].accumulateAdditive(c);break;case _f:default:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),f[d].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const l=n===Gx;if(e===0)return r===-1?i:l&&(r&1)===1?t-i:i;if(n===Hx){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,r+=Math.abs(c);const u=this.repetitions-r;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const f=e<0;this._setEndings(f,!f,l)}else this._setEndings(!1,!1,l);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Ma,i.endingEnd=Ma):(e?i.endingStart=this.zeroSlopeAtStart?Ma:Sa:i.endingStart=dc,t?i.endingEnd=this.zeroSlopeAtEnd?Ma:Sa:i.endingEnd=dc)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=r,u[0]=t,c[1]=r+e,u[1]=n,this}}const OA=new Float32Array(1);class BA extends Pi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,l=e._propertyBindings,c=e._interpolants,u=n.uuid,f=this._bindingsByRootAndName;let d=f[u];d===void 0&&(d={},f[u]=d);for(let p=0;p!==r;++p){const g=i[p],v=g.name;let x=d[v];if(x!==void 0)++x.referenceCount,l[p]=x;else{if(x=l[p],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,u,v));continue}const M=t&&t._propertyBindings[p].binding.parsedPath;x=new KS(Nt.create(n,v,M),g.ValueTypeName,g.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,u,v),l[p]=x}c[p].resultBuffer=x.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let l=r[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,l=this._actionsByClip,c=l[r],u=c.knownActions,f=u[u.length-1],d=e._byClipCacheIndex;f._byClipCacheIndex=d,u[d]=f,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,g=(e._localRoot||this._root).uuid;delete p[g],u.length===0&&delete l[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,l=this._bindingsByRootAndName,c=l[i],u=t[t.length-1],f=e._cacheIndex;u._cacheIndex=f,t[f]=u,t.pop(),delete c[r],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new bg(new Float32Array(2),new Float32Array(2),1,OA),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let l=typeof e=="string"?el.findByName(i,e):e;const c=l!==null?l.uuid:e,u=this._actionsByClip[c];let f=null;if(n===void 0&&(l!==null?n=l.blendMode:n=_f),u!==void 0){const p=u.actionByRoot[r];if(p!==void 0&&p.blendMode===n)return p;f=u.knownActions[0],l===null&&(l=f._clip)}if(l===null)return null;const d=new jS(this,l,t,n);return this._bindAction(d,f),this._addInactiveAction(d,c,r),d}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?el.findByName(n,e):e,l=r?r.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),l=this._accuIndex^=1;for(let f=0;f!==n;++f)t[f]._update(i,e,r,l);const c=this._bindings,u=this._nActiveBindings;for(let f=0;f!==u;++f)c[f].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const l=r.knownActions;for(let c=0,u=l.length;c!==u;++c){const f=l[c];this._deactivateAction(f);const d=f._cacheIndex,p=t[t.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,p._cacheIndex=d,t[d]=p,t.pop(),this._removeInactiveBindingsForAction(f)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const l in r){const c=r[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class zA extends ag{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new xf(null,e,t,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Vt{constructor(e){this.value=e}clone(){return new Vt(this.value.clone===void 0?this.value:this.value.clone())}}let FA=0;class HA extends Pi{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:FA++}),this.name="",this.usage=mc,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const r=Array.isArray(t[n])?t[n]:[t[n]];for(let l=0;l<r.length;l++)this.uniforms.push(r[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class VA extends wc{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class GA{constructor(e,t,n,i,r,l=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.normalized=l,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const Y_=new it;class ZS{constructor(e,t,n=0,i=1/0){this.ray=new il(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Jo,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return Y_.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Y_),this}intersectObject(e,t=!0,n=[]){return Lm(e,this,n,t),n.sort(K_),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)Lm(e[i],this,n,t);return n.sort(K_),n}}function K_(s,e){return s.distance-e.distance}function Lm(s,e,t,n){let i=!0;if(s.layers.test(e.layers)&&s.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const r=s.children;for(let l=0,c=r.length;l<c;l++)Lm(r[l],e,t,!0)}}class kA{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=dt(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(dt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class XA{constructor(e=1,t=0,n=0){this.radius=e,this.theta=t,this.y=n}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}class Ig{constructor(e,t,n,i){Ig.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const r=this.elements;return r[0]=e,r[2]=t,r[1]=n,r[3]=i,this}}const j_=new oe;class WA{constructor(e=new oe(1/0,1/0),t=new oe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=j_.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,j_).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Z_=new B,nh=new B;class qA{constructor(e=new B,t=new B){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Z_.subVectors(e,this.start),nh.subVectors(this.end,this.start);const n=nh.dot(nh);let r=nh.dot(Z_)/n;return t&&(r=dt(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const J_=new B;class YA extends wt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new pt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const f=l/u*Math.PI*2,d=c/u*Math.PI*2;i.push(Math.cos(f),Math.sin(f),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new Ye(i,3));const r=new Jn({fog:!1,toneMapped:!1});this.cone=new ps(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),J_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(J_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Sr=new B,ih=new it,qp=new it;class KA extends ps{constructor(e){const t=JS(e),n=new pt,i=[],r=[],l=new Re(0,0,1),c=new Re(0,1,0);for(let f=0;f<t.length;f++){const d=t[f];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(l.r,l.g,l.b),r.push(c.r,c.g,c.b))}n.setAttribute("position",new Ye(i,3)),n.setAttribute("color",new Ye(r,3));const u=new Jn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");qp.copy(this.root.matrixWorld).invert();for(let r=0,l=0;r<t.length;r++){const c=t[r];c.parent&&c.parent.isBone&&(ih.multiplyMatrices(qp,c.matrixWorld),Sr.setFromMatrixPosition(ih),i.setXYZ(l,Sr.x,Sr.y,Sr.z),ih.multiplyMatrices(qp,c.parent.matrixWorld),Sr.setFromMatrixPosition(ih),i.setXYZ(l+1,Sr.x,Sr.y,Sr.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function JS(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push(...JS(s.children[t]));return e}class jA extends pn{constructor(e,t,n){const i=new Pc(t,4,2),r=new Ni({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const ZA=new B,Q_=new Re,$_=new Re;class JA extends wt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Uc(t);i.rotateY(Math.PI*.5),this.material=new Ni({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),l=new Float32Array(r.count*3);i.setAttribute("color",new Ut(l,3)),this.add(new pn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Q_.copy(this.light.color),$_.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?Q_:$_;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(ZA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class QA extends ps{constructor(e=10,t=10,n=4473924,i=8947848){n=new Re(n),i=new Re(i);const r=t/2,l=e/t,c=e/2,u=[],f=[];for(let g=0,v=0,x=-c;g<=t;g++,x+=l){u.push(-c,0,x,c,0,x),u.push(x,0,-c,x,0,c);const M=g===r?n:i;M.toArray(f,v),v+=3,M.toArray(f,v),v+=3,M.toArray(f,v),v+=3,M.toArray(f,v),v+=3}const d=new pt;d.setAttribute("position",new Ye(u,3)),d.setAttribute("color",new Ye(f,3));const p=new Jn({vertexColors:!0,toneMapped:!1});super(d,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class $A extends ps{constructor(e=10,t=16,n=8,i=64,r=4473924,l=8947848){r=new Re(r),l=new Re(l);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const g=p/t*(Math.PI*2),v=Math.sin(g)*e,x=Math.cos(g)*e;c.push(0,0,0),c.push(v,0,x);const M=p&1?r:l;u.push(M.r,M.g,M.b),u.push(M.r,M.g,M.b)}for(let p=0;p<n;p++){const g=p&1?r:l,v=e-e/n*p;for(let x=0;x<i;x++){let M=x/i*(Math.PI*2),S=Math.sin(M)*v,_=Math.cos(M)*v;c.push(S,0,_),u.push(g.r,g.g,g.b),M=(x+1)/i*(Math.PI*2),S=Math.sin(M)*v,_=Math.cos(M)*v,c.push(S,0,_),u.push(g.r,g.g,g.b)}}const f=new pt;f.setAttribute("position",new Ye(c,3)),f.setAttribute("color",new Ye(u,3));const d=new Jn({vertexColors:!0,toneMapped:!1});super(f,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const ey=new B,sh=new B,ty=new B;class eR extends wt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new pt;i.setAttribute("position",new Ye([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Jn({fog:!1,toneMapped:!1});this.lightPlane=new Qs(i,r),this.add(this.lightPlane),i=new pt,i.setAttribute("position",new Ye([0,0,0,0,0,1],3)),this.targetLine=new Qs(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),ey.setFromMatrixPosition(this.light.matrixWorld),sh.setFromMatrixPosition(this.light.target.matrixWorld),ty.subVectors(sh,ey),this.lightPlane.lookAt(sh),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(sh),this.targetLine.scale.z=ty.length()}}const rh=new B,dn=new Ac;class tR extends ps{constructor(e){const t=new pt,n=new Jn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,M){u(x),u(M)}function u(x){i.push(0,0,0),r.push(0,0,0),l[x]===void 0&&(l[x]=[]),l[x].push(i.length/3-1)}t.setAttribute("position",new Ye(i,3)),t.setAttribute("color",new Ye(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const f=new Re(16755200),d=new Re(16711680),p=new Re(43775),g=new Re(16777215),v=new Re(3355443);this.setColors(f,d,p,g,v)}setColors(e,t,n,i,r){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,r.r,r.g,r.b),c.setXYZ(41,r.r,r.g,r.b),c.setXYZ(42,r.r,r.g,r.b),c.setXYZ(43,r.r,r.g,r.b),c.setXYZ(44,r.r,r.g,r.b),c.setXYZ(45,r.r,r.g,r.b),c.setXYZ(46,r.r,r.g,r.b),c.setXYZ(47,r.r,r.g,r.b),c.setXYZ(48,r.r,r.g,r.b),c.setXYZ(49,r.r,r.g,r.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;dn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const r=this.camera.coordinateSystem===ji?-1:0;mn("c",t,e,dn,0,0,r),mn("t",t,e,dn,0,0,1),mn("n1",t,e,dn,-n,-i,r),mn("n2",t,e,dn,n,-i,r),mn("n3",t,e,dn,-n,i,r),mn("n4",t,e,dn,n,i,r),mn("f1",t,e,dn,-n,-i,1),mn("f2",t,e,dn,n,-i,1),mn("f3",t,e,dn,-n,i,1),mn("f4",t,e,dn,n,i,1),mn("u1",t,e,dn,n*.7,i*1.1,r),mn("u2",t,e,dn,-n*.7,i*1.1,r),mn("u3",t,e,dn,0,i*2,r),mn("cf1",t,e,dn,-n,0,1),mn("cf2",t,e,dn,n,0,1),mn("cf3",t,e,dn,0,-i,1),mn("cf4",t,e,dn,0,i,1),mn("cn1",t,e,dn,-n,0,r),mn("cn2",t,e,dn,n,0,r),mn("cn3",t,e,dn,0,-i,r),mn("cn4",t,e,dn,0,i,r),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function mn(s,e,t,n,i,r,l){rh.set(i,r,l).unproject(n);const c=e[s];if(c!==void 0){const u=t.getAttribute("position");for(let f=0,d=c.length;f<d;f++)u.setXYZ(c[f],rh.x,rh.y,rh.z)}}const ah=new On;class nR extends ps{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new pt;r.setIndex(new Ut(n,1)),r.setAttribute("position",new Ut(i,3)),super(r,new Jn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&ah.setFromObject(this.object),ah.isEmpty())return;const e=ah.min,t=ah.max,n=this.geometry.attributes.position,i=n.array;i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=e.x,i[4]=t.y,i[5]=t.z,i[6]=e.x,i[7]=e.y,i[8]=t.z,i[9]=t.x,i[10]=e.y,i[11]=t.z,i[12]=t.x,i[13]=t.y,i[14]=e.z,i[15]=e.x,i[16]=t.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=t.x,i[22]=e.y,i[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class iR extends ps{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new pt;r.setIndex(new Ut(n,1)),r.setAttribute("position",new Ye(i,3)),super(r,new Jn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class sR extends Qs{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new pt;l.setAttribute("position",new Ye(r,3)),l.computeBoundingSphere(),super(l,new Jn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new pt;u.setAttribute("position",new Ye(c,3)),u.computeBoundingSphere(),this.add(new pn(u,new Ni({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const ny=new B;let oh,Yp;class rR extends wt{constructor(e=new B(0,0,1),t=new B(0,0,0),n=1,i=16776960,r=n*.2,l=r*.2){super(),this.type="ArrowHelper",oh===void 0&&(oh=new pt,oh.setAttribute("position",new Ye([0,0,0,0,1,0],3)),Yp=new Lc(.5,1,5,1),Yp.translate(0,-.5,0)),this.position.copy(t),this.line=new Qs(oh,new Jn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new pn(Yp,new Ni({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{ny.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(ny,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class aR extends ps{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new pt;i.setAttribute("position",new Ye(t,3)),i.setAttribute("color",new Ye(n,3));const r=new Jn({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new Re,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class oR{constructor(){this.type="ShapePath",this.color=new Re,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new sf,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,l){return this.currentPath.bezierCurveTo(e,t,n,i,r,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const b=[];for(let T=0,A=_.length;T<A;T++){const U=_[T],D=new Ra;D.curves=U.curves,b.push(D)}return b}function n(_,b){const T=b.length;let A=!1;for(let U=T-1,D=0;D<T;U=D++){let P=b[U],I=b[D],w=I.x-P.x,R=I.y-P.y;if(Math.abs(R)>Number.EPSILON){if(R<0&&(P=b[D],w=-w,I=b[U],R=-R),_.y<P.y||_.y>I.y)continue;if(_.y===P.y){if(_.x===P.x)return!0}else{const F=R*(_.x-P.x)-w*(_.y-P.y);if(F===0)return!0;if(F<0)continue;A=!A}}else{if(_.y!==P.y)continue;if(I.x<=_.x&&_.x<=P.x||P.x<=_.x&&_.x<=I.x)return!0}}return A}const i=us.isClockWise,r=this.subPaths;if(r.length===0)return[];let l,c,u;const f=[];if(r.length===1)return c=r[0],u=new Ra,u.curves=c.curves,f.push(u),f;let d=!i(r[0].getPoints());d=e?!d:d;const p=[],g=[];let v=[],x=0,M;g[x]=void 0,v[x]=[];for(let _=0,b=r.length;_<b;_++)c=r[_],M=c.getPoints(),l=i(M),l=e?!l:l,l?(!d&&g[x]&&x++,g[x]={s:new Ra,p:M},g[x].s.curves=c.curves,d&&x++,v[x]=[]):v[x].push({h:c,p:M[0]});if(!g[0])return t(r);if(g.length>1){let _=!1,b=0;for(let T=0,A=g.length;T<A;T++)p[T]=[];for(let T=0,A=g.length;T<A;T++){const U=v[T];for(let D=0;D<U.length;D++){const P=U[D];let I=!0;for(let w=0;w<g.length;w++)n(P.p,g[w].p)&&(T!==w&&b++,I?(I=!1,p[w].push(P)):_=!0);I&&p[T].push(P)}}b>0&&_===!1&&(v=p)}let S;for(let _=0,b=g.length;_<b;_++){u=g[_].s,f.push(u),S=v[_];for(let T=0,A=S.length;T<A;T++)u.holes.push(S[T].h)}return f}}class lR extends Pi{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function cR(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function uR(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function hR(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function Um(s,e,t,n){const i=fR(n);switch(t){case Qm:return s*e;case mf:return s*e/i.components*i.byteLength;case Tc:return s*e/i.components*i.byteLength;case eg:return s*e*2/i.components*i.byteLength;case gf:return s*e*2/i.components*i.byteLength;case $m:return s*e*3/i.components*i.byteLength;case jn:return s*e*4/i.components*i.byteLength;case vf:return s*e*4/i.components*i.byteLength;case tc:case nc:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case ic:case sc:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case wh:case Dh:return Math.max(s,16)*Math.max(e,8)/4;case Rh:case Ch:return Math.max(s,8)*Math.max(e,8)/2;case Nh:case Lh:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Uh:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Ph:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Ih:return Math.floor((s+4)/5)*Math.floor((e+3)/4)*16;case Oh:return Math.floor((s+4)/5)*Math.floor((e+4)/5)*16;case Bh:return Math.floor((s+5)/6)*Math.floor((e+4)/5)*16;case zh:return Math.floor((s+5)/6)*Math.floor((e+5)/6)*16;case Fh:return Math.floor((s+7)/8)*Math.floor((e+4)/5)*16;case Hh:return Math.floor((s+7)/8)*Math.floor((e+5)/6)*16;case Vh:return Math.floor((s+7)/8)*Math.floor((e+7)/8)*16;case Gh:return Math.floor((s+9)/10)*Math.floor((e+4)/5)*16;case kh:return Math.floor((s+9)/10)*Math.floor((e+5)/6)*16;case Xh:return Math.floor((s+9)/10)*Math.floor((e+7)/8)*16;case Wh:return Math.floor((s+9)/10)*Math.floor((e+9)/10)*16;case qh:return Math.floor((s+11)/12)*Math.floor((e+9)/10)*16;case Yh:return Math.floor((s+11)/12)*Math.floor((e+11)/12)*16;case rc:case Kh:case jh:return Math.ceil(s/4)*Math.ceil(e/4)*16;case tg:case Zh:return Math.ceil(s/4)*Math.ceil(e/4)*8;case Jh:case Qh:return Math.ceil(s/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function fR(s){switch(s){case Bn:case jm:return{byteLength:1,components:1};case qo:case Zm:case Lr:return{byteLength:2,components:1};case df:case pf:return{byteLength:2,components:4};case Rs:case ff:case Kn:return{byteLength:4,components:1};case Jm:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class dR{static contain(e,t){return cR(e,t)}static cover(e,t){return uR(e,t)}static fill(e){return hR(e)}static getByteLength(e,t,n,i){return Um(e,t,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Fa}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Fa);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function QS(){let s=null,e=!1,t=null,n=null;function i(r,l){t(r,l),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function pR(s){const e=new WeakMap;function t(c,u){const f=c.array,d=c.usage,p=f.byteLength,g=s.createBuffer();s.bindBuffer(u,g),s.bufferData(u,f,d),c.onUploadCallback();let v;if(f instanceof Float32Array)v=s.FLOAT;else if(typeof Float16Array<"u"&&f instanceof Float16Array)v=s.HALF_FLOAT;else if(f instanceof Uint16Array)c.isFloat16BufferAttribute?v=s.HALF_FLOAT:v=s.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=s.SHORT;else if(f instanceof Uint32Array)v=s.UNSIGNED_INT;else if(f instanceof Int32Array)v=s.INT;else if(f instanceof Int8Array)v=s.BYTE;else if(f instanceof Uint8Array)v=s.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:g,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version,size:p}}function n(c,u,f){const d=u.array,p=u.updateRanges;if(s.bindBuffer(f,c),p.length===0)s.bufferSubData(f,0,d);else{p.sort((v,x)=>v.start-x.start);let g=0;for(let v=1;v<p.length;v++){const x=p[g],M=p[v];M.start<=x.start+x.count+1?x.count=Math.max(x.count,M.start+M.count-x.start):(++g,p[g]=M)}p.length=g+1;for(let v=0,x=p.length;v<x;v++){const M=p[v];s.bufferSubData(f,M.start*d.BYTES_PER_ELEMENT,d,M.start,M.count)}u.clearUpdateRanges()}u.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function r(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=e.get(c);u&&(s.deleteBuffer(u.buffer),e.delete(c))}function l(c,u){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const d=e.get(c);(!d||d.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const f=e.get(c);if(f===void 0)e.set(c,t(c,u));else if(f.version<c.version){if(f.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,c,u),f.version=c.version}}return{get:i,remove:r,update:l}}var mR=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,gR=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,vR=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,_R=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,yR=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,xR=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,SR=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,MR=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,ER=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,bR=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,TR=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,AR=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,RR=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,wR=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,CR=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,DR=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,NR=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,LR=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,UR=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,PR=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,IR=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,OR=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,BR=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,zR=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,FR=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,HR=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,VR=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,GR=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,kR=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,XR=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,WR="gl_FragColor = linearToOutputTexel( gl_FragColor );",qR=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,YR=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,KR=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,jR=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,ZR=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,JR=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,QR=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,$R=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,ew=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,tw=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,nw=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,iw=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,sw=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,rw=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,aw=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,ow=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,lw=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,cw=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,uw=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,hw=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,fw=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,dw=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,pw=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,mw=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,gw=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,vw=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,_w=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,yw=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,xw=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,Sw=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Mw=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Ew=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,bw=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Tw=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Aw=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Rw=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,ww=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Cw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Dw=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,Nw=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Lw=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,Uw=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Pw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Iw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Ow=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Bw=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,zw=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,Fw=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Hw=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Vw=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Gw=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,kw=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Xw=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Ww=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,qw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Yw=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Kw=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,jw=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Zw=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,Jw=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Qw=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,$w=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,eC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,tC=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,nC=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,iC=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,sC=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,rC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,aC=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,oC=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,lC=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,cC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,uC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,hC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,fC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,dC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const pC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,mC=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,gC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,vC=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,_C=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,yC=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,xC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,SC=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,MC=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,EC=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,bC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,TC=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,AC=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,RC=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,wC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,CC=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,DC=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,NC=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,LC=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,UC=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,PC=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,IC=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,OC=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,BC=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,zC=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,FC=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,HC=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,VC=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,GC=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,kC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,XC=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,WC=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,qC=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,YC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,_t={alphahash_fragment:mR,alphahash_pars_fragment:gR,alphamap_fragment:vR,alphamap_pars_fragment:_R,alphatest_fragment:yR,alphatest_pars_fragment:xR,aomap_fragment:SR,aomap_pars_fragment:MR,batching_pars_vertex:ER,batching_vertex:bR,begin_vertex:TR,beginnormal_vertex:AR,bsdfs:RR,iridescence_fragment:wR,bumpmap_pars_fragment:CR,clipping_planes_fragment:DR,clipping_planes_pars_fragment:NR,clipping_planes_pars_vertex:LR,clipping_planes_vertex:UR,color_fragment:PR,color_pars_fragment:IR,color_pars_vertex:OR,color_vertex:BR,common:zR,cube_uv_reflection_fragment:FR,defaultnormal_vertex:HR,displacementmap_pars_vertex:VR,displacementmap_vertex:GR,emissivemap_fragment:kR,emissivemap_pars_fragment:XR,colorspace_fragment:WR,colorspace_pars_fragment:qR,envmap_fragment:YR,envmap_common_pars_fragment:KR,envmap_pars_fragment:jR,envmap_pars_vertex:ZR,envmap_physical_pars_fragment:ow,envmap_vertex:JR,fog_vertex:QR,fog_pars_vertex:$R,fog_fragment:ew,fog_pars_fragment:tw,gradientmap_pars_fragment:nw,lightmap_pars_fragment:iw,lights_lambert_fragment:sw,lights_lambert_pars_fragment:rw,lights_pars_begin:aw,lights_toon_fragment:lw,lights_toon_pars_fragment:cw,lights_phong_fragment:uw,lights_phong_pars_fragment:hw,lights_physical_fragment:fw,lights_physical_pars_fragment:dw,lights_fragment_begin:pw,lights_fragment_maps:mw,lights_fragment_end:gw,logdepthbuf_fragment:vw,logdepthbuf_pars_fragment:_w,logdepthbuf_pars_vertex:yw,logdepthbuf_vertex:xw,map_fragment:Sw,map_pars_fragment:Mw,map_particle_fragment:Ew,map_particle_pars_fragment:bw,metalnessmap_fragment:Tw,metalnessmap_pars_fragment:Aw,morphinstance_vertex:Rw,morphcolor_vertex:ww,morphnormal_vertex:Cw,morphtarget_pars_vertex:Dw,morphtarget_vertex:Nw,normal_fragment_begin:Lw,normal_fragment_maps:Uw,normal_pars_fragment:Pw,normal_pars_vertex:Iw,normal_vertex:Ow,normalmap_pars_fragment:Bw,clearcoat_normal_fragment_begin:zw,clearcoat_normal_fragment_maps:Fw,clearcoat_pars_fragment:Hw,iridescence_pars_fragment:Vw,opaque_fragment:Gw,packing:kw,premultiplied_alpha_fragment:Xw,project_vertex:Ww,dithering_fragment:qw,dithering_pars_fragment:Yw,roughnessmap_fragment:Kw,roughnessmap_pars_fragment:jw,shadowmap_pars_fragment:Zw,shadowmap_pars_vertex:Jw,shadowmap_vertex:Qw,shadowmask_pars_fragment:$w,skinbase_vertex:eC,skinning_pars_vertex:tC,skinning_vertex:nC,skinnormal_vertex:iC,specularmap_fragment:sC,specularmap_pars_fragment:rC,tonemapping_fragment:aC,tonemapping_pars_fragment:oC,transmission_fragment:lC,transmission_pars_fragment:cC,uv_pars_fragment:uC,uv_pars_vertex:hC,uv_vertex:fC,worldpos_vertex:dC,background_vert:pC,background_frag:mC,backgroundCube_vert:gC,backgroundCube_frag:vC,cube_vert:_C,cube_frag:yC,depth_vert:xC,depth_frag:SC,distanceRGBA_vert:MC,distanceRGBA_frag:EC,equirect_vert:bC,equirect_frag:TC,linedashed_vert:AC,linedashed_frag:RC,meshbasic_vert:wC,meshbasic_frag:CC,meshlambert_vert:DC,meshlambert_frag:NC,meshmatcap_vert:LC,meshmatcap_frag:UC,meshnormal_vert:PC,meshnormal_frag:IC,meshphong_vert:OC,meshphong_frag:BC,meshphysical_vert:zC,meshphysical_frag:FC,meshtoon_vert:HC,meshtoon_frag:VC,points_vert:GC,points_frag:kC,shadow_vert:XC,shadow_frag:WC,sprite_vert:qC,sprite_frag:YC},Ne={common:{diffuse:{value:new Re(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new mt},alphaMap:{value:null},alphaMapTransform:{value:new mt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new mt}},envmap:{envMap:{value:null},envMapRotation:{value:new mt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new mt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new mt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new mt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new mt},normalScale:{value:new oe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new mt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new mt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new mt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new mt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Re(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Re(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new mt},alphaTest:{value:0},uvTransform:{value:new mt}},sprite:{diffuse:{value:new Re(16777215)},opacity:{value:1},center:{value:new oe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new mt},alphaMap:{value:null},alphaMapTransform:{value:new mt},alphaTest:{value:0}}},ls={basic:{uniforms:ii([Ne.common,Ne.specularmap,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.fog]),vertexShader:_t.meshbasic_vert,fragmentShader:_t.meshbasic_frag},lambert:{uniforms:ii([Ne.common,Ne.specularmap,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.fog,Ne.lights,{emissive:{value:new Re(0)}}]),vertexShader:_t.meshlambert_vert,fragmentShader:_t.meshlambert_frag},phong:{uniforms:ii([Ne.common,Ne.specularmap,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.fog,Ne.lights,{emissive:{value:new Re(0)},specular:{value:new Re(1118481)},shininess:{value:30}}]),vertexShader:_t.meshphong_vert,fragmentShader:_t.meshphong_frag},standard:{uniforms:ii([Ne.common,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.roughnessmap,Ne.metalnessmap,Ne.fog,Ne.lights,{emissive:{value:new Re(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:_t.meshphysical_vert,fragmentShader:_t.meshphysical_frag},toon:{uniforms:ii([Ne.common,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.gradientmap,Ne.fog,Ne.lights,{emissive:{value:new Re(0)}}]),vertexShader:_t.meshtoon_vert,fragmentShader:_t.meshtoon_frag},matcap:{uniforms:ii([Ne.common,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.fog,{matcap:{value:null}}]),vertexShader:_t.meshmatcap_vert,fragmentShader:_t.meshmatcap_frag},points:{uniforms:ii([Ne.points,Ne.fog]),vertexShader:_t.points_vert,fragmentShader:_t.points_frag},dashed:{uniforms:ii([Ne.common,Ne.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:_t.linedashed_vert,fragmentShader:_t.linedashed_frag},depth:{uniforms:ii([Ne.common,Ne.displacementmap]),vertexShader:_t.depth_vert,fragmentShader:_t.depth_frag},normal:{uniforms:ii([Ne.common,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,{opacity:{value:1}}]),vertexShader:_t.meshnormal_vert,fragmentShader:_t.meshnormal_frag},sprite:{uniforms:ii([Ne.sprite,Ne.fog]),vertexShader:_t.sprite_vert,fragmentShader:_t.sprite_frag},background:{uniforms:{uvTransform:{value:new mt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:_t.background_vert,fragmentShader:_t.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new mt}},vertexShader:_t.backgroundCube_vert,fragmentShader:_t.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:_t.cube_vert,fragmentShader:_t.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:_t.equirect_vert,fragmentShader:_t.equirect_frag},distanceRGBA:{uniforms:ii([Ne.common,Ne.displacementmap,{referencePosition:{value:new B},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:_t.distanceRGBA_vert,fragmentShader:_t.distanceRGBA_frag},shadow:{uniforms:ii([Ne.lights,Ne.fog,{color:{value:new Re(0)},opacity:{value:1}}]),vertexShader:_t.shadow_vert,fragmentShader:_t.shadow_frag}};ls.physical={uniforms:ii([ls.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new mt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new mt},clearcoatNormalScale:{value:new oe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new mt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new mt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new mt},sheen:{value:0},sheenColor:{value:new Re(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new mt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new mt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new mt},transmissionSamplerSize:{value:new oe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new mt},attenuationDistance:{value:0},attenuationColor:{value:new Re(0)},specularColor:{value:new Re(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new mt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new mt},anisotropyVector:{value:new oe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new mt}}]),vertexShader:_t.meshphysical_vert,fragmentShader:_t.meshphysical_frag};const lh={r:0,b:0,g:0},pa=new Ui,KC=new it;function jC(s,e,t,n,i,r,l){const c=new Re(0);let u=r===!0?0:1,f,d,p=null,g=0,v=null;function x(T){let A=T.isScene===!0?T.background:null;return A&&A.isTexture&&(A=(T.backgroundBlurriness>0?t:e).get(A)),A}function M(T){let A=!1;const U=x(T);U===null?_(c,u):U&&U.isColor&&(_(U,1),A=!0);const D=s.xr.getEnvironmentBlendMode();D==="additive"?n.buffers.color.setClear(0,0,0,1,l):D==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(s.autoClear||A)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function S(T,A){const U=x(A);U&&(U.isCubeTexture||U.mapping===nl)?(d===void 0&&(d=new pn(new Ha(1,1,1),new zn({name:"BackgroundCubeMaterial",uniforms:Qo(ls.backgroundCube.uniforms),vertexShader:ls.backgroundCube.vertexShader,fragmentShader:ls.backgroundCube.fragmentShader,side:En,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(D,P,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(d)),pa.copy(A.backgroundRotation),pa.x*=-1,pa.y*=-1,pa.z*=-1,U.isCubeTexture&&U.isRenderTargetTexture===!1&&(pa.y*=-1,pa.z*=-1),d.material.uniforms.envMap.value=U,d.material.uniforms.flipEnvMap.value=U.isCubeTexture&&U.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=A.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=A.backgroundIntensity,d.material.uniforms.backgroundRotation.value.setFromMatrix4(KC.makeRotationFromEuler(pa)),d.material.toneMapped=bt.getTransfer(U.colorSpace)!==qt,(p!==U||g!==U.version||v!==s.toneMapping)&&(d.material.needsUpdate=!0,p=U,g=U.version,v=s.toneMapping),d.layers.enableAll(),T.unshift(d,d.geometry,d.material,0,0,null)):U&&U.isTexture&&(f===void 0&&(f=new pn(new rl(2,2),new zn({name:"BackgroundMaterial",uniforms:Qo(ls.background.uniforms),vertexShader:ls.background.vertexShader,fragmentShader:ls.background.fragmentShader,side:fs,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(f)),f.material.uniforms.t2D.value=U,f.material.uniforms.backgroundIntensity.value=A.backgroundIntensity,f.material.toneMapped=bt.getTransfer(U.colorSpace)!==qt,U.matrixAutoUpdate===!0&&U.updateMatrix(),f.material.uniforms.uvTransform.value.copy(U.matrix),(p!==U||g!==U.version||v!==s.toneMapping)&&(f.material.needsUpdate=!0,p=U,g=U.version,v=s.toneMapping),f.layers.enableAll(),T.unshift(f,f.geometry,f.material,0,0,null))}function _(T,A){T.getRGB(lh,sS(s)),n.buffers.color.setClear(lh.r,lh.g,lh.b,A,l)}function b(){d!==void 0&&(d.geometry.dispose(),d.material.dispose(),d=void 0),f!==void 0&&(f.geometry.dispose(),f.material.dispose(),f=void 0)}return{getClearColor:function(){return c},setClearColor:function(T,A=1){c.set(T),u=A,_(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(T){u=T,_(c,u)},render:M,addToRenderList:S,dispose:b}}function ZC(s,e){const t=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=g(null);let r=i,l=!1;function c(R,F,j,k,J){let se=!1;const V=p(k,j,F);r!==V&&(r=V,f(r.object)),se=v(R,k,j,J),se&&x(R,k,j,J),J!==null&&e.update(J,s.ELEMENT_ARRAY_BUFFER),(se||l)&&(l=!1,A(R,F,j,k),J!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get(J).buffer))}function u(){return s.createVertexArray()}function f(R){return s.bindVertexArray(R)}function d(R){return s.deleteVertexArray(R)}function p(R,F,j){const k=j.wireframe===!0;let J=n[R.id];J===void 0&&(J={},n[R.id]=J);let se=J[F.id];se===void 0&&(se={},J[F.id]=se);let V=se[k];return V===void 0&&(V=g(u()),se[k]=V),V}function g(R){const F=[],j=[],k=[];for(let J=0;J<t;J++)F[J]=0,j[J]=0,k[J]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:F,enabledAttributes:j,attributeDivisors:k,object:R,attributes:{},index:null}}function v(R,F,j,k){const J=r.attributes,se=F.attributes;let V=0;const $=j.getAttributes();for(const W in $)if($[W].location>=0){const me=J[W];let ye=se[W];if(ye===void 0&&(W==="instanceMatrix"&&R.instanceMatrix&&(ye=R.instanceMatrix),W==="instanceColor"&&R.instanceColor&&(ye=R.instanceColor)),me===void 0||me.attribute!==ye||ye&&me.data!==ye.data)return!0;V++}return r.attributesNum!==V||r.index!==k}function x(R,F,j,k){const J={},se=F.attributes;let V=0;const $=j.getAttributes();for(const W in $)if($[W].location>=0){let me=se[W];me===void 0&&(W==="instanceMatrix"&&R.instanceMatrix&&(me=R.instanceMatrix),W==="instanceColor"&&R.instanceColor&&(me=R.instanceColor));const ye={};ye.attribute=me,me&&me.data&&(ye.data=me.data),J[W]=ye,V++}r.attributes=J,r.attributesNum=V,r.index=k}function M(){const R=r.newAttributes;for(let F=0,j=R.length;F<j;F++)R[F]=0}function S(R){_(R,0)}function _(R,F){const j=r.newAttributes,k=r.enabledAttributes,J=r.attributeDivisors;j[R]=1,k[R]===0&&(s.enableVertexAttribArray(R),k[R]=1),J[R]!==F&&(s.vertexAttribDivisor(R,F),J[R]=F)}function b(){const R=r.newAttributes,F=r.enabledAttributes;for(let j=0,k=F.length;j<k;j++)F[j]!==R[j]&&(s.disableVertexAttribArray(j),F[j]=0)}function T(R,F,j,k,J,se,V){V===!0?s.vertexAttribIPointer(R,F,j,J,se):s.vertexAttribPointer(R,F,j,k,J,se)}function A(R,F,j,k){M();const J=k.attributes,se=j.getAttributes(),V=F.defaultAttributeValues;for(const $ in se){const W=se[$];if(W.location>=0){let le=J[$];if(le===void 0&&($==="instanceMatrix"&&R.instanceMatrix&&(le=R.instanceMatrix),$==="instanceColor"&&R.instanceColor&&(le=R.instanceColor)),le!==void 0){const me=le.normalized,ye=le.itemSize,Pe=e.get(le);if(Pe===void 0)continue;const Je=Pe.buffer,te=Pe.type,xe=Pe.bytesPerElement,We=te===s.INT||te===s.UNSIGNED_INT||le.gpuType===ff;if(le.isInterleavedBufferAttribute){const De=le.data,Ge=De.stride,ft=le.offset;if(De.isInstancedInterleavedBuffer){for(let Qe=0;Qe<W.locationSize;Qe++)_(W.location+Qe,De.meshPerAttribute);R.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=De.meshPerAttribute*De.count)}else for(let Qe=0;Qe<W.locationSize;Qe++)S(W.location+Qe);s.bindBuffer(s.ARRAY_BUFFER,Je);for(let Qe=0;Qe<W.locationSize;Qe++)T(W.location+Qe,ye/W.locationSize,te,me,Ge*xe,(ft+ye/W.locationSize*Qe)*xe,We)}else{if(le.isInstancedBufferAttribute){for(let De=0;De<W.locationSize;De++)_(W.location+De,le.meshPerAttribute);R.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=le.meshPerAttribute*le.count)}else for(let De=0;De<W.locationSize;De++)S(W.location+De);s.bindBuffer(s.ARRAY_BUFFER,Je);for(let De=0;De<W.locationSize;De++)T(W.location+De,ye/W.locationSize,te,me,ye*xe,ye/W.locationSize*De*xe,We)}}else if(V!==void 0){const me=V[$];if(me!==void 0)switch(me.length){case 2:s.vertexAttrib2fv(W.location,me);break;case 3:s.vertexAttrib3fv(W.location,me);break;case 4:s.vertexAttrib4fv(W.location,me);break;default:s.vertexAttrib1fv(W.location,me)}}}}b()}function U(){I();for(const R in n){const F=n[R];for(const j in F){const k=F[j];for(const J in k)d(k[J].object),delete k[J];delete F[j]}delete n[R]}}function D(R){if(n[R.id]===void 0)return;const F=n[R.id];for(const j in F){const k=F[j];for(const J in k)d(k[J].object),delete k[J];delete F[j]}delete n[R.id]}function P(R){for(const F in n){const j=n[F];if(j[R.id]===void 0)continue;const k=j[R.id];for(const J in k)d(k[J].object),delete k[J];delete j[R.id]}}function I(){w(),l=!0,r!==i&&(r=i,f(r.object))}function w(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:I,resetDefaultState:w,dispose:U,releaseStatesOfGeometry:D,releaseStatesOfProgram:P,initAttributes:M,enableAttribute:S,disableUnusedAttributes:b}}function JC(s,e,t){let n;function i(f){n=f}function r(f,d){s.drawArrays(n,f,d),t.update(d,n,1)}function l(f,d,p){p!==0&&(s.drawArraysInstanced(n,f,d,p),t.update(d,n,p))}function c(f,d,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,d,0,p);let v=0;for(let x=0;x<p;x++)v+=d[x];t.update(v,n,1)}function u(f,d,p,g){if(p===0)return;const v=e.get("WEBGL_multi_draw");if(v===null)for(let x=0;x<f.length;x++)l(f[x],d[x],g[x]);else{v.multiDrawArraysInstancedWEBGL(n,f,0,d,0,g,0,p);let x=0;for(let M=0;M<p;M++)x+=d[M]*g[M];t.update(x,n,1)}}this.setMode=i,this.render=r,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=u}function QC(s,e,t,n){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const P=e.get("EXT_texture_filter_anisotropic");i=s.getParameter(P.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function l(P){return!(P!==jn&&n.convert(P)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(P){const I=P===Lr&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(P!==Bn&&n.convert(P)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&P!==Kn&&!I)}function u(P){if(P==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";P="mediump"}return P==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=t.precision!==void 0?t.precision:"highp";const d=u(f);d!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",d,"instead."),f=d);const p=t.logarithmicDepthBuffer===!0,g=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),v=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),x=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),M=s.getParameter(s.MAX_TEXTURE_SIZE),S=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),_=s.getParameter(s.MAX_VERTEX_ATTRIBS),b=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),T=s.getParameter(s.MAX_VARYING_VECTORS),A=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),U=x>0,D=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:u,textureFormatReadable:l,textureTypeReadable:c,precision:f,logarithmicDepthBuffer:p,reverseDepthBuffer:g,maxTextures:v,maxVertexTextures:x,maxTextureSize:M,maxCubemapSize:S,maxAttributes:_,maxVertexUniforms:b,maxVaryings:T,maxFragmentUniforms:A,vertexTextures:U,maxSamples:D}}function $C(s){const e=this;let t=null,n=0,i=!1,r=!1;const l=new br,c=new mt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,g){const v=p.length!==0||g||n!==0||i;return i=g,n=p.length,v},this.beginShadows=function(){r=!0,d(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(p,g){t=d(p,g,0)},this.setState=function(p,g,v){const x=p.clippingPlanes,M=p.clipIntersection,S=p.clipShadows,_=s.get(p);if(!i||x===null||x.length===0||r&&!S)r?d(null):f();else{const b=r?0:n,T=b*4;let A=_.clippingState||null;u.value=A,A=d(x,g,T,v);for(let U=0;U!==T;++U)A[U]=t[U];_.clippingState=A,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=b}};function f(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(p,g,v,x){const M=p!==null?p.length:0;let S=null;if(M!==0){if(S=u.value,x!==!0||S===null){const _=v+M*4,b=g.matrixWorldInverse;c.getNormalMatrix(b),(S===null||S.length<_)&&(S=new Float32Array(_));for(let T=0,A=v;T!==M;++T,A+=4)l.copy(p[T]).applyMatrix4(b,c),l.normal.toArray(S,A),S[A+3]=l.constant}u.value=S,u.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,S}}function e2(s){let e=new WeakMap;function t(l,c){return c===hc?l.mapping=Js:c===fc&&(l.mapping=Cr),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===hc||c===fc)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const f=new oS(u.height);return f.fromEquirectangularTexture(s,l),e.set(l,f),l.addEventListener("dispose",i),t(f.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}const Ho=4,iy=[.125,.215,.35,.446,.526,.582],ya=20,Kp=new ol,sy=new Re;let jp=null,Zp=0,Jp=0,Qp=!1;const _a=(1+Math.sqrt(5))/2,Io=1/_a,ry=[new B(-_a,Io,0),new B(_a,Io,0),new B(-Io,0,_a),new B(Io,0,_a),new B(0,_a,-Io),new B(0,_a,Io),new B(-1,1,-1),new B(1,1,-1),new B(-1,1,1),new B(1,1,1)],t2=new B;class Pm{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100,r={}){const{size:l=256,position:c=t2}=r;jp=this._renderer.getRenderTarget(),Zp=this._renderer.getActiveCubeFace(),Jp=this._renderer.getActiveMipmapLevel(),Qp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(l);const u=this._allocateTargets();return u.depthBuffer=!0,this._sceneToCubeUV(e,n,i,u,c),t>0&&this._blur(u,0,0,t),this._applyPMREM(u),this._cleanup(u),u}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=ly(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=oy(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(jp,Zp,Jp),this._renderer.xr.enabled=Qp,e.scissorTest=!1,ch(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Js||e.mapping===Cr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),jp=this._renderer.getRenderTarget(),Zp=this._renderer.getActiveCubeFace(),Jp=this._renderer.getActiveMipmapLevel(),Qp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:jt,minFilter:jt,generateMipmaps:!1,type:Lr,format:jn,colorSpace:bn,depthBuffer:!1},i=ay(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=ay(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=n2(r)),this._blurMaterial=i2(r,e,t)}return i}_compileMaterial(e){const t=new pn(this._lodPlanes[0],e);this._renderer.compile(t,Kp)}_sceneToCubeUV(e,t,n,i,r){const u=new xn(90,1,t,n),f=[1,-1,1,1,1,1],d=[1,1,1,-1,-1,-1],p=this._renderer,g=p.autoClear,v=p.toneMapping;p.getClearColor(sy),p.toneMapping=hs,p.autoClear=!1;const x=new Ni({name:"PMREM.Background",side:En,depthWrite:!1,depthTest:!1}),M=new pn(new Ha,x);let S=!1;const _=e.background;_?_.isColor&&(x.color.copy(_),e.background=null,S=!0):(x.color.copy(sy),S=!0);for(let b=0;b<6;b++){const T=b%3;T===0?(u.up.set(0,f[b],0),u.position.set(r.x,r.y,r.z),u.lookAt(r.x+d[b],r.y,r.z)):T===1?(u.up.set(0,0,f[b]),u.position.set(r.x,r.y,r.z),u.lookAt(r.x,r.y+d[b],r.z)):(u.up.set(0,f[b],0),u.position.set(r.x,r.y,r.z),u.lookAt(r.x,r.y,r.z+d[b]));const A=this._cubeSize;ch(i,T*A,b>2?A:0,A,A),p.setRenderTarget(i),S&&p.render(M,u),p.render(e,u)}M.geometry.dispose(),M.material.dispose(),p.toneMapping=v,p.autoClear=g,e.background=_}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Js||e.mapping===Cr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=ly()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=oy());const r=i?this._cubemapMaterial:this._equirectMaterial,l=new pn(this._lodPlanes[0],r),c=r.uniforms;c.envMap.value=e;const u=this._cubeSize;ch(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(l,Kp)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let r=1;r<i;r++){const l=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),c=ry[(i-r-1)%ry.length];this._blur(e,r-1,r,l,c)}t.autoClear=n}_blur(e,t,n,i,r){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",r),this._halfBlur(l,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,l,c){const u=this._renderer,f=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,p=new pn(this._lodPlanes[i],f),g=f.uniforms,v=this._sizeLods[n]-1,x=isFinite(r)?Math.PI/(2*v):2*Math.PI/(2*ya-1),M=r/x,S=isFinite(r)?1+Math.floor(d*M):ya;S>ya&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${ya}`);const _=[];let b=0;for(let P=0;P<ya;++P){const I=P/M,w=Math.exp(-I*I/2);_.push(w),P===0?b+=w:P<S&&(b+=2*w)}for(let P=0;P<_.length;P++)_[P]=_[P]/b;g.envMap.value=e.texture,g.samples.value=S,g.weights.value=_,g.latitudinal.value=l==="latitudinal",c&&(g.poleAxis.value=c);const{_lodMax:T}=this;g.dTheta.value=x,g.mipInt.value=T-n;const A=this._sizeLods[i],U=3*A*(i>T-Ho?i-T+Ho:0),D=4*(this._cubeSize-A);ch(t,U,D,3*A,2*A),u.setRenderTarget(t),u.render(p,Kp)}}function n2(s){const e=[],t=[],n=[];let i=s;const r=s-Ho+1+iy.length;for(let l=0;l<r;l++){const c=Math.pow(2,i);t.push(c);let u=1/c;l>s-Ho?u=iy[l-s+Ho-1]:l===0&&(u=0),n.push(u);const f=1/(c-2),d=-f,p=1+f,g=[d,d,p,d,p,p,d,d,p,p,d,p],v=6,x=6,M=3,S=2,_=1,b=new Float32Array(M*x*v),T=new Float32Array(S*x*v),A=new Float32Array(_*x*v);for(let D=0;D<v;D++){const P=D%3*2/3-1,I=D>2?0:-1,w=[P,I,0,P+2/3,I,0,P+2/3,I+1,0,P,I,0,P+2/3,I+1,0,P,I+1,0];b.set(w,M*x*D),T.set(g,S*x*D);const R=[D,D,D,D,D,D];A.set(R,_*x*D)}const U=new pt;U.setAttribute("position",new Ut(b,M)),U.setAttribute("uv",new Ut(T,S)),U.setAttribute("faceIndex",new Ut(A,_)),e.push(U),i>Ho&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function ay(s,e,t){const n=new Sn(s,e,t);return n.texture.mapping=nl,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ch(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function i2(s,e,t){const n=new Float32Array(ya),i=new B(0,1,0);return new zn({name:"SphericalGaussianBlur",defines:{n:ya,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Og(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:mi,depthTest:!1,depthWrite:!1})}function oy(){return new zn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Og(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:mi,depthTest:!1,depthWrite:!1})}function ly(){return new zn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Og(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:mi,depthTest:!1,depthWrite:!1})}function Og(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function s2(s){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,f=u===hc||u===fc,d=u===Js||u===Cr;if(f||d){let p=e.get(c);const g=p!==void 0?p.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==g)return t===null&&(t=new Pm(s)),p=f?t.fromEquirectangular(c,p):t.fromCubemap(c,p),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),p.texture;if(p!==void 0)return p.texture;{const v=c.image;return f&&v&&v.height>0||d&&v&&i(v)?(t===null&&(t=new Pm(s)),p=f?t.fromEquirectangular(c):t.fromCubemap(c),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),c.addEventListener("dispose",r),p.texture):null}}}return c}function i(c){let u=0;const f=6;for(let d=0;d<f;d++)c[d]!==void 0&&u++;return u===f}function r(c){const u=c.target;u.removeEventListener("dispose",r);const f=e.get(u);f!==void 0&&(e.delete(u),f.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function r2(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&Go("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function a2(s,e,t,n){const i={},r=new WeakMap;function l(p){const g=p.target;g.index!==null&&e.remove(g.index);for(const x in g.attributes)e.remove(g.attributes[x]);g.removeEventListener("dispose",l),delete i[g.id];const v=r.get(g);v&&(e.remove(v),r.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,t.memory.geometries--}function c(p,g){return i[g.id]===!0||(g.addEventListener("dispose",l),i[g.id]=!0,t.memory.geometries++),g}function u(p){const g=p.attributes;for(const v in g)e.update(g[v],s.ARRAY_BUFFER)}function f(p){const g=[],v=p.index,x=p.attributes.position;let M=0;if(v!==null){const b=v.array;M=v.version;for(let T=0,A=b.length;T<A;T+=3){const U=b[T+0],D=b[T+1],P=b[T+2];g.push(U,D,D,P,P,U)}}else if(x!==void 0){const b=x.array;M=x.version;for(let T=0,A=b.length/3-1;T<A;T+=3){const U=T+0,D=T+1,P=T+2;g.push(U,D,D,P,P,U)}}else return;const S=new(eS(g)?lg:og)(g,1);S.version=M;const _=r.get(p);_&&e.remove(_),r.set(p,S)}function d(p){const g=r.get(p);if(g){const v=p.index;v!==null&&g.version<v.version&&f(p)}else f(p);return r.get(p)}return{get:c,update:u,getWireframeAttribute:d}}function o2(s,e,t){let n;function i(g){n=g}let r,l;function c(g){r=g.type,l=g.bytesPerElement}function u(g,v){s.drawElements(n,v,r,g*l),t.update(v,n,1)}function f(g,v,x){x!==0&&(s.drawElementsInstanced(n,v,r,g*l,x),t.update(v,n,x))}function d(g,v,x){if(x===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,v,0,r,g,0,x);let S=0;for(let _=0;_<x;_++)S+=v[_];t.update(S,n,1)}function p(g,v,x,M){if(x===0)return;const S=e.get("WEBGL_multi_draw");if(S===null)for(let _=0;_<g.length;_++)f(g[_]/l,v[_],M[_]);else{S.multiDrawElementsInstancedWEBGL(n,v,0,r,g,0,M,0,x);let _=0;for(let b=0;b<x;b++)_+=v[b]*M[b];t.update(_,n,1)}}this.setMode=i,this.setIndex=c,this.render=u,this.renderInstances=f,this.renderMultiDraw=d,this.renderMultiDrawInstances=p}function l2(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,l,c){switch(t.calls++,l){case s.TRIANGLES:t.triangles+=c*(r/3);break;case s.LINES:t.lines+=c*(r/2);break;case s.LINE_STRIP:t.lines+=c*(r-1);break;case s.LINE_LOOP:t.lines+=c*r;break;case s.POINTS:t.points+=c*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function c2(s,e,t){const n=new WeakMap,i=new Lt;function r(l,c,u){const f=l.morphTargetInfluences,d=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=d!==void 0?d.length:0;let g=n.get(c);if(g===void 0||g.count!==p){let w=function(){P.dispose(),n.delete(c),c.removeEventListener("dispose",w)};g!==void 0&&g.texture.dispose();const v=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,M=c.morphAttributes.color!==void 0,S=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],b=c.morphAttributes.color||[];let T=0;v===!0&&(T=1),x===!0&&(T=2),M===!0&&(T=3);let A=c.attributes.position.count*T,U=1;A>e.maxTextureSize&&(U=Math.ceil(A/e.maxTextureSize),A=e.maxTextureSize);const D=new Float32Array(A*U*4*p),P=new yf(D,A,U,p);P.type=Kn,P.needsUpdate=!0;const I=T*4;for(let R=0;R<p;R++){const F=S[R],j=_[R],k=b[R],J=A*U*4*R;for(let se=0;se<F.count;se++){const V=se*I;v===!0&&(i.fromBufferAttribute(F,se),D[J+V+0]=i.x,D[J+V+1]=i.y,D[J+V+2]=i.z,D[J+V+3]=0),x===!0&&(i.fromBufferAttribute(j,se),D[J+V+4]=i.x,D[J+V+5]=i.y,D[J+V+6]=i.z,D[J+V+7]=0),M===!0&&(i.fromBufferAttribute(k,se),D[J+V+8]=i.x,D[J+V+9]=i.y,D[J+V+10]=i.z,D[J+V+11]=k.itemSize===4?i.w:1)}}g={count:p,texture:P,size:new oe(A,U)},n.set(c,g),c.addEventListener("dispose",w)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)u.getUniforms().setValue(s,"morphTexture",l.morphTexture,t);else{let v=0;for(let M=0;M<f.length;M++)v+=f[M];const x=c.morphTargetsRelative?1:1-v;u.getUniforms().setValue(s,"morphTargetBaseInfluence",x),u.getUniforms().setValue(s,"morphTargetInfluences",f)}u.getUniforms().setValue(s,"morphTargetsTexture",g.texture,t),u.getUniforms().setValue(s,"morphTargetsTextureSize",g.size)}return{update:r}}function u2(s,e,t,n){let i=new WeakMap;function r(u){const f=n.render.frame,d=u.geometry,p=e.get(u,d);if(i.get(p)!==f&&(e.update(p),i.set(p,f)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==f&&(t.update(u.instanceMatrix,s.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,s.ARRAY_BUFFER),i.set(u,f))),u.isSkinnedMesh){const g=u.skeleton;i.get(g)!==f&&(g.update(),i.set(g,f))}return p}function l(){i=new WeakMap}function c(u){const f=u.target;f.removeEventListener("dispose",c),t.remove(f.instanceMatrix),f.instanceColor!==null&&t.remove(f.instanceColor)}return{update:r,dispose:l}}const $S=new nn,cy=new Dc(1,1),eM=new yf,tM=new xf,nM=new Rc,uy=[],hy=[],fy=new Float32Array(16),dy=new Float32Array(9),py=new Float32Array(4);function ll(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=uy[i];if(r===void 0&&(r=new Float32Array(i),uy[i]=r),e!==0){n.toArray(r,0);for(let l=1,c=0;l!==e;++l)c+=t,s[l].toArray(r,c)}return r}function Tn(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function An(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function Vf(s,e){let t=hy[e];t===void 0&&(t=new Int32Array(e),hy[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function h2(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function f2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Tn(t,e))return;s.uniform2fv(this.addr,e),An(t,e)}}function d2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Tn(t,e))return;s.uniform3fv(this.addr,e),An(t,e)}}function p2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Tn(t,e))return;s.uniform4fv(this.addr,e),An(t,e)}}function m2(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Tn(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),An(t,e)}else{if(Tn(t,n))return;py.set(n),s.uniformMatrix2fv(this.addr,!1,py),An(t,n)}}function g2(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Tn(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),An(t,e)}else{if(Tn(t,n))return;dy.set(n),s.uniformMatrix3fv(this.addr,!1,dy),An(t,n)}}function v2(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Tn(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),An(t,e)}else{if(Tn(t,n))return;fy.set(n),s.uniformMatrix4fv(this.addr,!1,fy),An(t,n)}}function _2(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function y2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Tn(t,e))return;s.uniform2iv(this.addr,e),An(t,e)}}function x2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Tn(t,e))return;s.uniform3iv(this.addr,e),An(t,e)}}function S2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Tn(t,e))return;s.uniform4iv(this.addr,e),An(t,e)}}function M2(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function E2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Tn(t,e))return;s.uniform2uiv(this.addr,e),An(t,e)}}function b2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Tn(t,e))return;s.uniform3uiv(this.addr,e),An(t,e)}}function T2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Tn(t,e))return;s.uniform4uiv(this.addr,e),An(t,e)}}function A2(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let r;this.type===s.SAMPLER_2D_SHADOW?(cy.compareFunction=sg,r=cy):r=$S,t.setTexture2D(e||r,i)}function R2(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||tM,i)}function w2(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||nM,i)}function C2(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||eM,i)}function D2(s){switch(s){case 5126:return h2;case 35664:return f2;case 35665:return d2;case 35666:return p2;case 35674:return m2;case 35675:return g2;case 35676:return v2;case 5124:case 35670:return _2;case 35667:case 35671:return y2;case 35668:case 35672:return x2;case 35669:case 35673:return S2;case 5125:return M2;case 36294:return E2;case 36295:return b2;case 36296:return T2;case 35678:case 36198:case 36298:case 36306:case 35682:return A2;case 35679:case 36299:case 36307:return R2;case 35680:case 36300:case 36308:case 36293:return w2;case 36289:case 36303:case 36311:case 36292:return C2}}function N2(s,e){s.uniform1fv(this.addr,e)}function L2(s,e){const t=ll(e,this.size,2);s.uniform2fv(this.addr,t)}function U2(s,e){const t=ll(e,this.size,3);s.uniform3fv(this.addr,t)}function P2(s,e){const t=ll(e,this.size,4);s.uniform4fv(this.addr,t)}function I2(s,e){const t=ll(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function O2(s,e){const t=ll(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function B2(s,e){const t=ll(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function z2(s,e){s.uniform1iv(this.addr,e)}function F2(s,e){s.uniform2iv(this.addr,e)}function H2(s,e){s.uniform3iv(this.addr,e)}function V2(s,e){s.uniform4iv(this.addr,e)}function G2(s,e){s.uniform1uiv(this.addr,e)}function k2(s,e){s.uniform2uiv(this.addr,e)}function X2(s,e){s.uniform3uiv(this.addr,e)}function W2(s,e){s.uniform4uiv(this.addr,e)}function q2(s,e,t){const n=this.cache,i=e.length,r=Vf(t,i);Tn(n,r)||(s.uniform1iv(this.addr,r),An(n,r));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||$S,r[l])}function Y2(s,e,t){const n=this.cache,i=e.length,r=Vf(t,i);Tn(n,r)||(s.uniform1iv(this.addr,r),An(n,r));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||tM,r[l])}function K2(s,e,t){const n=this.cache,i=e.length,r=Vf(t,i);Tn(n,r)||(s.uniform1iv(this.addr,r),An(n,r));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||nM,r[l])}function j2(s,e,t){const n=this.cache,i=e.length,r=Vf(t,i);Tn(n,r)||(s.uniform1iv(this.addr,r),An(n,r));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||eM,r[l])}function Z2(s){switch(s){case 5126:return N2;case 35664:return L2;case 35665:return U2;case 35666:return P2;case 35674:return I2;case 35675:return O2;case 35676:return B2;case 5124:case 35670:return z2;case 35667:case 35671:return F2;case 35668:case 35672:return H2;case 35669:case 35673:return V2;case 5125:return G2;case 36294:return k2;case 36295:return X2;case 36296:return W2;case 35678:case 36198:case 36298:case 36306:case 35682:return q2;case 35679:case 36299:case 36307:return Y2;case 35680:case 36300:case 36308:case 36293:return K2;case 36289:case 36303:case 36311:case 36292:return j2}}class J2{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=D2(t.type)}}class Q2{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=Z2(t.type)}}class $2{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,l=i.length;r!==l;++r){const c=i[r];c.setValue(e,t[c.id],n)}}}const $p=/(\w+)(\])?(\[|\.)?/g;function my(s,e){s.seq.push(e),s.map[e.id]=e}function eD(s,e,t){const n=s.name,i=n.length;for($p.lastIndex=0;;){const r=$p.exec(n),l=$p.lastIndex;let c=r[1];const u=r[2]==="]",f=r[3];if(u&&(c=c|0),f===void 0||f==="["&&l+2===i){my(t,f===void 0?new J2(c,s,e):new Q2(c,s,e));break}else{let p=t.map[c];p===void 0&&(p=new $2(c),my(t,p)),t=p}}}class mh{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),l=e.getUniformLocation(t,r.name);eD(r,l,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,l=t.length;r!==l;++r){const c=t[r],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function gy(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}const tD=37297;let nD=0;function iD(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let l=i;l<r;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}const vy=new mt;function sD(s){bt._getMatrix(vy,bt.workingColorSpace,s);const e=`mat3( ${vy.elements.map(t=>t.toFixed(4))} )`;switch(bt.getTransfer(s)){case pc:return[e,"LinearTransferOETF"];case qt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[e,"LinearTransferOETF"]}}function _y(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const l=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+iD(s.getShaderSource(e),l)}else return i}function rD(s,e){const t=sD(e);return[`vec4 ${s}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function aD(s,e){let t;switch(e){case Ux:t="Linear";break;case Px:t="Reinhard";break;case Ix:t="Cineon";break;case Km:t="ACESFilmic";break;case Bx:t="AgX";break;case zx:t="Neutral";break;case Ox:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const uh=new B;function oD(){bt.getLuminanceCoefficients(uh);const s=uh.x.toFixed(4),e=uh.y.toFixed(4),t=uh.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function lD(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter($l).join(`
`)}function cD(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function uD(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),l=r.name;let c=1;r.type===s.FLOAT_MAT2&&(c=2),r.type===s.FLOAT_MAT3&&(c=3),r.type===s.FLOAT_MAT4&&(c=4),t[l]={type:r.type,location:s.getAttribLocation(e,l),locationSize:c}}return t}function $l(s){return s!==""}function yy(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function xy(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const hD=/^[ \t]*#include +<([\w\d./]+)>/gm;function Im(s){return s.replace(hD,dD)}const fD=new Map;function dD(s,e){let t=_t[e];if(t===void 0){const n=fD.get(e);if(n!==void 0)t=_t[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Im(t)}const pD=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Sy(s){return s.replace(pD,mD)}function mD(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function My(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function gD(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===cf?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===ec?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===os&&(e="SHADOWMAP_TYPE_VSM"),e}function vD(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Js:case Cr:e="ENVMAP_TYPE_CUBE";break;case nl:e="ENVMAP_TYPE_CUBE_UV";break}return e}function _D(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Cr:e="ENVMAP_MODE_REFRACTION";break}return e}function yD(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case bc:e="ENVMAP_BLENDING_MULTIPLY";break;case Nx:e="ENVMAP_BLENDING_MIX";break;case Lx:e="ENVMAP_BLENDING_ADD";break}return e}function xD(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function SD(s,e,t,n){const i=s.getContext(),r=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=gD(t),f=vD(t),d=_D(t),p=yD(t),g=xD(t),v=lD(t),x=cD(r),M=i.createProgram();let S,_,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(S=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x].filter($l).join(`
`),S.length>0&&(S+=`
`),_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x].filter($l).join(`
`),_.length>0&&(_+=`
`)):(S=[My(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter($l).join(`
`),_=[My(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.envMap?"#define "+d:"",t.envMap?"#define "+p:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==hs?"#define TONE_MAPPING":"",t.toneMapping!==hs?_t.tonemapping_pars_fragment:"",t.toneMapping!==hs?aD("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",_t.colorspace_pars_fragment,rD("linearToOutputTexel",t.outputColorSpace),oD(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter($l).join(`
`)),l=Im(l),l=yy(l,t),l=xy(l,t),c=Im(c),c=yy(c,t),c=xy(c,t),l=Sy(l),c=Sy(c),t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,S=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,_=["#define varying in",t.glslVersion===Rm?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Rm?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const T=b+S+l,A=b+_+c,U=gy(i,i.VERTEX_SHADER,T),D=gy(i,i.FRAGMENT_SHADER,A);i.attachShader(M,U),i.attachShader(M,D),t.index0AttributeName!==void 0?i.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(M,0,"position"),i.linkProgram(M);function P(F){if(s.debug.checkShaderErrors){const j=i.getProgramInfoLog(M).trim(),k=i.getShaderInfoLog(U).trim(),J=i.getShaderInfoLog(D).trim();let se=!0,V=!0;if(i.getProgramParameter(M,i.LINK_STATUS)===!1)if(se=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,M,U,D);else{const $=_y(i,U,"vertex"),W=_y(i,D,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(M,i.VALIDATE_STATUS)+`

Material Name: `+F.name+`
Material Type: `+F.type+`

Program Info Log: `+j+`
`+$+`
`+W)}else j!==""?console.warn("THREE.WebGLProgram: Program Info Log:",j):(k===""||J==="")&&(V=!1);V&&(F.diagnostics={runnable:se,programLog:j,vertexShader:{log:k,prefix:S},fragmentShader:{log:J,prefix:_}})}i.deleteShader(U),i.deleteShader(D),I=new mh(i,M),w=uD(i,M)}let I;this.getUniforms=function(){return I===void 0&&P(this),I};let w;this.getAttributes=function(){return w===void 0&&P(this),w};let R=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return R===!1&&(R=i.getProgramParameter(M,tD)),R},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(M),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=nD++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=U,this.fragmentShader=D,this}let MD=0;class ED{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(r)===!1&&(l.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new bD(e),t.set(e,n)),n}}class bD{constructor(e){this.id=MD++,this.code=e,this.usedTimes=0}}function TD(s,e,t,n,i,r,l){const c=new Jo,u=new ED,f=new Set,d=[],p=i.logarithmicDepthBuffer,g=i.vertexTextures;let v=i.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(w){return f.add(w),w===0?"uv":`uv${w}`}function S(w,R,F,j,k){const J=j.fog,se=k.geometry,V=w.isMeshStandardMaterial?j.environment:null,$=(w.isMeshStandardMaterial?t:e).get(w.envMap||V),W=$&&$.mapping===nl?$.image.height:null,le=x[w.type];w.precision!==null&&(v=i.getMaxPrecision(w.precision),v!==w.precision&&console.warn("THREE.WebGLProgram.getParameters:",w.precision,"not supported, using",v,"instead."));const me=se.morphAttributes.position||se.morphAttributes.normal||se.morphAttributes.color,ye=me!==void 0?me.length:0;let Pe=0;se.morphAttributes.position!==void 0&&(Pe=1),se.morphAttributes.normal!==void 0&&(Pe=2),se.morphAttributes.color!==void 0&&(Pe=3);let Je,te,xe,We;if(le){const Ct=ls[le];Je=Ct.vertexShader,te=Ct.fragmentShader}else Je=w.vertexShader,te=w.fragmentShader,u.update(w),xe=u.getVertexShaderID(w),We=u.getFragmentShaderID(w);const De=s.getRenderTarget(),Ge=s.state.buffers.depth.getReversed(),ft=k.isInstancedMesh===!0,Qe=k.isBatchedMesh===!0,zt=!!w.map,yt=!!w.matcap,lt=!!$,O=!!w.aoMap,Te=!!w.lightMap,ge=!!w.bumpMap,Ee=!!w.normalMap,ue=!!w.displacementMap,Be=!!w.emissiveMap,pe=!!w.metalnessMap,Oe=!!w.roughnessMap,ut=w.anisotropy>0,z=w.clearcoat>0,C=w.dispersion>0,Z=w.iridescence>0,re=w.sheen>0,de=w.transmission>0,ae=ut&&!!w.anisotropyMap,je=z&&!!w.clearcoatMap,we=z&&!!w.clearcoatNormalMap,ke=z&&!!w.clearcoatRoughnessMap,Ke=Z&&!!w.iridescenceMap,fe=Z&&!!w.iridescenceThicknessMap,Ue=re&&!!w.sheenColorMap,et=re&&!!w.sheenRoughnessMap,tt=!!w.specularMap,Ae=!!w.specularColorMap,st=!!w.specularIntensityMap,G=de&&!!w.transmissionMap,Le=de&&!!w.thicknessMap,ve=!!w.gradientMap,Ve=!!w.alphaMap,Se=w.alphaTest>0,he=!!w.alphaHash,qe=!!w.extensions;let at=hs;w.toneMapped&&(De===null||De.isXRRenderTarget===!0)&&(at=s.toneMapping);const Ft={shaderID:le,shaderType:w.type,shaderName:w.name,vertexShader:Je,fragmentShader:te,defines:w.defines,customVertexShaderID:xe,customFragmentShaderID:We,isRawShaderMaterial:w.isRawShaderMaterial===!0,glslVersion:w.glslVersion,precision:v,batching:Qe,batchingColor:Qe&&k._colorsTexture!==null,instancing:ft,instancingColor:ft&&k.instanceColor!==null,instancingMorph:ft&&k.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:De===null?s.outputColorSpace:De.isXRRenderTarget===!0?De.texture.colorSpace:bn,alphaToCoverage:!!w.alphaToCoverage,map:zt,matcap:yt,envMap:lt,envMapMode:lt&&$.mapping,envMapCubeUVHeight:W,aoMap:O,lightMap:Te,bumpMap:ge,normalMap:Ee,displacementMap:g&&ue,emissiveMap:Be,normalMapObjectSpace:Ee&&w.normalMapType===Wx,normalMapTangentSpace:Ee&&w.normalMapType===Pr,metalnessMap:pe,roughnessMap:Oe,anisotropy:ut,anisotropyMap:ae,clearcoat:z,clearcoatMap:je,clearcoatNormalMap:we,clearcoatRoughnessMap:ke,dispersion:C,iridescence:Z,iridescenceMap:Ke,iridescenceThicknessMap:fe,sheen:re,sheenColorMap:Ue,sheenRoughnessMap:et,specularMap:tt,specularColorMap:Ae,specularIntensityMap:st,transmission:de,transmissionMap:G,thicknessMap:Le,gradientMap:ve,opaque:w.transparent===!1&&w.blending===Ta&&w.alphaToCoverage===!1,alphaMap:Ve,alphaTest:Se,alphaHash:he,combine:w.combine,mapUv:zt&&M(w.map.channel),aoMapUv:O&&M(w.aoMap.channel),lightMapUv:Te&&M(w.lightMap.channel),bumpMapUv:ge&&M(w.bumpMap.channel),normalMapUv:Ee&&M(w.normalMap.channel),displacementMapUv:ue&&M(w.displacementMap.channel),emissiveMapUv:Be&&M(w.emissiveMap.channel),metalnessMapUv:pe&&M(w.metalnessMap.channel),roughnessMapUv:Oe&&M(w.roughnessMap.channel),anisotropyMapUv:ae&&M(w.anisotropyMap.channel),clearcoatMapUv:je&&M(w.clearcoatMap.channel),clearcoatNormalMapUv:we&&M(w.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ke&&M(w.clearcoatRoughnessMap.channel),iridescenceMapUv:Ke&&M(w.iridescenceMap.channel),iridescenceThicknessMapUv:fe&&M(w.iridescenceThicknessMap.channel),sheenColorMapUv:Ue&&M(w.sheenColorMap.channel),sheenRoughnessMapUv:et&&M(w.sheenRoughnessMap.channel),specularMapUv:tt&&M(w.specularMap.channel),specularColorMapUv:Ae&&M(w.specularColorMap.channel),specularIntensityMapUv:st&&M(w.specularIntensityMap.channel),transmissionMapUv:G&&M(w.transmissionMap.channel),thicknessMapUv:Le&&M(w.thicknessMap.channel),alphaMapUv:Ve&&M(w.alphaMap.channel),vertexTangents:!!se.attributes.tangent&&(Ee||ut),vertexColors:w.vertexColors,vertexAlphas:w.vertexColors===!0&&!!se.attributes.color&&se.attributes.color.itemSize===4,pointsUvs:k.isPoints===!0&&!!se.attributes.uv&&(zt||Ve),fog:!!J,useFog:w.fog===!0,fogExp2:!!J&&J.isFogExp2,flatShading:w.flatShading===!0&&w.wireframe===!1,sizeAttenuation:w.sizeAttenuation===!0,logarithmicDepthBuffer:p,reverseDepthBuffer:Ge,skinning:k.isSkinnedMesh===!0,morphTargets:se.morphAttributes.position!==void 0,morphNormals:se.morphAttributes.normal!==void 0,morphColors:se.morphAttributes.color!==void 0,morphTargetsCount:ye,morphTextureStride:Pe,numDirLights:R.directional.length,numPointLights:R.point.length,numSpotLights:R.spot.length,numSpotLightMaps:R.spotLightMap.length,numRectAreaLights:R.rectArea.length,numHemiLights:R.hemi.length,numDirLightShadows:R.directionalShadowMap.length,numPointLightShadows:R.pointShadowMap.length,numSpotLightShadows:R.spotShadowMap.length,numSpotLightShadowsWithMaps:R.numSpotLightShadowsWithMaps,numLightProbes:R.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:w.dithering,shadowMapEnabled:s.shadowMap.enabled&&F.length>0,shadowMapType:s.shadowMap.type,toneMapping:at,decodeVideoTexture:zt&&w.map.isVideoTexture===!0&&bt.getTransfer(w.map.colorSpace)===qt,decodeVideoTextureEmissive:Be&&w.emissiveMap.isVideoTexture===!0&&bt.getTransfer(w.emissiveMap.colorSpace)===qt,premultipliedAlpha:w.premultipliedAlpha,doubleSided:w.side===ri,flipSided:w.side===En,useDepthPacking:w.depthPacking>=0,depthPacking:w.depthPacking||0,index0AttributeName:w.index0AttributeName,extensionClipCullDistance:qe&&w.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(qe&&w.extensions.multiDraw===!0||Qe)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:w.customProgramCacheKey()};return Ft.vertexUv1s=f.has(1),Ft.vertexUv2s=f.has(2),Ft.vertexUv3s=f.has(3),f.clear(),Ft}function _(w){const R=[];if(w.shaderID?R.push(w.shaderID):(R.push(w.customVertexShaderID),R.push(w.customFragmentShaderID)),w.defines!==void 0)for(const F in w.defines)R.push(F),R.push(w.defines[F]);return w.isRawShaderMaterial===!1&&(b(R,w),T(R,w),R.push(s.outputColorSpace)),R.push(w.customProgramCacheKey),R.join()}function b(w,R){w.push(R.precision),w.push(R.outputColorSpace),w.push(R.envMapMode),w.push(R.envMapCubeUVHeight),w.push(R.mapUv),w.push(R.alphaMapUv),w.push(R.lightMapUv),w.push(R.aoMapUv),w.push(R.bumpMapUv),w.push(R.normalMapUv),w.push(R.displacementMapUv),w.push(R.emissiveMapUv),w.push(R.metalnessMapUv),w.push(R.roughnessMapUv),w.push(R.anisotropyMapUv),w.push(R.clearcoatMapUv),w.push(R.clearcoatNormalMapUv),w.push(R.clearcoatRoughnessMapUv),w.push(R.iridescenceMapUv),w.push(R.iridescenceThicknessMapUv),w.push(R.sheenColorMapUv),w.push(R.sheenRoughnessMapUv),w.push(R.specularMapUv),w.push(R.specularColorMapUv),w.push(R.specularIntensityMapUv),w.push(R.transmissionMapUv),w.push(R.thicknessMapUv),w.push(R.combine),w.push(R.fogExp2),w.push(R.sizeAttenuation),w.push(R.morphTargetsCount),w.push(R.morphAttributeCount),w.push(R.numDirLights),w.push(R.numPointLights),w.push(R.numSpotLights),w.push(R.numSpotLightMaps),w.push(R.numHemiLights),w.push(R.numRectAreaLights),w.push(R.numDirLightShadows),w.push(R.numPointLightShadows),w.push(R.numSpotLightShadows),w.push(R.numSpotLightShadowsWithMaps),w.push(R.numLightProbes),w.push(R.shadowMapType),w.push(R.toneMapping),w.push(R.numClippingPlanes),w.push(R.numClipIntersection),w.push(R.depthPacking)}function T(w,R){c.disableAll(),R.supportsVertexTextures&&c.enable(0),R.instancing&&c.enable(1),R.instancingColor&&c.enable(2),R.instancingMorph&&c.enable(3),R.matcap&&c.enable(4),R.envMap&&c.enable(5),R.normalMapObjectSpace&&c.enable(6),R.normalMapTangentSpace&&c.enable(7),R.clearcoat&&c.enable(8),R.iridescence&&c.enable(9),R.alphaTest&&c.enable(10),R.vertexColors&&c.enable(11),R.vertexAlphas&&c.enable(12),R.vertexUv1s&&c.enable(13),R.vertexUv2s&&c.enable(14),R.vertexUv3s&&c.enable(15),R.vertexTangents&&c.enable(16),R.anisotropy&&c.enable(17),R.alphaHash&&c.enable(18),R.batching&&c.enable(19),R.dispersion&&c.enable(20),R.batchingColor&&c.enable(21),R.gradientMap&&c.enable(22),w.push(c.mask),c.disableAll(),R.fog&&c.enable(0),R.useFog&&c.enable(1),R.flatShading&&c.enable(2),R.logarithmicDepthBuffer&&c.enable(3),R.reverseDepthBuffer&&c.enable(4),R.skinning&&c.enable(5),R.morphTargets&&c.enable(6),R.morphNormals&&c.enable(7),R.morphColors&&c.enable(8),R.premultipliedAlpha&&c.enable(9),R.shadowMapEnabled&&c.enable(10),R.doubleSided&&c.enable(11),R.flipSided&&c.enable(12),R.useDepthPacking&&c.enable(13),R.dithering&&c.enable(14),R.transmission&&c.enable(15),R.sheen&&c.enable(16),R.opaque&&c.enable(17),R.pointsUvs&&c.enable(18),R.decodeVideoTexture&&c.enable(19),R.decodeVideoTextureEmissive&&c.enable(20),R.alphaToCoverage&&c.enable(21),w.push(c.mask)}function A(w){const R=x[w.type];let F;if(R){const j=ls[R];F=rS.clone(j.uniforms)}else F=w.uniforms;return F}function U(w,R){let F;for(let j=0,k=d.length;j<k;j++){const J=d[j];if(J.cacheKey===R){F=J,++F.usedTimes;break}}return F===void 0&&(F=new SD(s,R,w,r),d.push(F)),F}function D(w){if(--w.usedTimes===0){const R=d.indexOf(w);d[R]=d[d.length-1],d.pop(),w.destroy()}}function P(w){u.remove(w)}function I(){u.dispose()}return{getParameters:S,getProgramCacheKey:_,getUniforms:A,acquireProgram:U,releaseProgram:D,releaseShaderCache:P,programs:d,dispose:I}}function AD(){let s=new WeakMap;function e(l){return s.has(l)}function t(l){let c=s.get(l);return c===void 0&&(c={},s.set(l,c)),c}function n(l){s.delete(l)}function i(l,c,u){s.get(l)[c]=u}function r(){s=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:r}}function RD(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function Ey(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function by(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function l(p,g,v,x,M,S){let _=s[e];return _===void 0?(_={id:p.id,object:p,geometry:g,material:v,groupOrder:x,renderOrder:p.renderOrder,z:M,group:S},s[e]=_):(_.id=p.id,_.object=p,_.geometry=g,_.material=v,_.groupOrder=x,_.renderOrder=p.renderOrder,_.z=M,_.group=S),e++,_}function c(p,g,v,x,M,S){const _=l(p,g,v,x,M,S);v.transmission>0?n.push(_):v.transparent===!0?i.push(_):t.push(_)}function u(p,g,v,x,M,S){const _=l(p,g,v,x,M,S);v.transmission>0?n.unshift(_):v.transparent===!0?i.unshift(_):t.unshift(_)}function f(p,g){t.length>1&&t.sort(p||RD),n.length>1&&n.sort(g||Ey),i.length>1&&i.sort(g||Ey)}function d(){for(let p=e,g=s.length;p<g;p++){const v=s[p];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:c,unshift:u,finish:d,sort:f}}function wD(){let s=new WeakMap;function e(n,i){const r=s.get(n);let l;return r===void 0?(l=new by,s.set(n,[l])):i>=r.length?(l=new by,r.push(l)):l=r[i],l}function t(){s=new WeakMap}return{get:e,dispose:t}}function CD(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new B,color:new Re};break;case"SpotLight":t={position:new B,direction:new B,color:new Re,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new B,color:new Re,distance:0,decay:0};break;case"HemisphereLight":t={direction:new B,skyColor:new Re,groundColor:new Re};break;case"RectAreaLight":t={color:new Re,position:new B,halfWidth:new B,halfHeight:new B};break}return s[e.id]=t,t}}}function DD(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new oe};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new oe};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new oe,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let ND=0;function LD(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function UD(s){const e=new CD,t=DD(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new B);const i=new B,r=new it,l=new it;function c(f){let d=0,p=0,g=0;for(let w=0;w<9;w++)n.probe[w].set(0,0,0);let v=0,x=0,M=0,S=0,_=0,b=0,T=0,A=0,U=0,D=0,P=0;f.sort(LD);for(let w=0,R=f.length;w<R;w++){const F=f[w],j=F.color,k=F.intensity,J=F.distance,se=F.shadow&&F.shadow.map?F.shadow.map.texture:null;if(F.isAmbientLight)d+=j.r*k,p+=j.g*k,g+=j.b*k;else if(F.isLightProbe){for(let V=0;V<9;V++)n.probe[V].addScaledVector(F.sh.coefficients[V],k);P++}else if(F.isDirectionalLight){const V=e.get(F);if(V.color.copy(F.color).multiplyScalar(F.intensity),F.castShadow){const $=F.shadow,W=t.get(F);W.shadowIntensity=$.intensity,W.shadowBias=$.bias,W.shadowNormalBias=$.normalBias,W.shadowRadius=$.radius,W.shadowMapSize=$.mapSize,n.directionalShadow[v]=W,n.directionalShadowMap[v]=se,n.directionalShadowMatrix[v]=F.shadow.matrix,b++}n.directional[v]=V,v++}else if(F.isSpotLight){const V=e.get(F);V.position.setFromMatrixPosition(F.matrixWorld),V.color.copy(j).multiplyScalar(k),V.distance=J,V.coneCos=Math.cos(F.angle),V.penumbraCos=Math.cos(F.angle*(1-F.penumbra)),V.decay=F.decay,n.spot[M]=V;const $=F.shadow;if(F.map&&(n.spotLightMap[U]=F.map,U++,$.updateMatrices(F),F.castShadow&&D++),n.spotLightMatrix[M]=$.matrix,F.castShadow){const W=t.get(F);W.shadowIntensity=$.intensity,W.shadowBias=$.bias,W.shadowNormalBias=$.normalBias,W.shadowRadius=$.radius,W.shadowMapSize=$.mapSize,n.spotShadow[M]=W,n.spotShadowMap[M]=se,A++}M++}else if(F.isRectAreaLight){const V=e.get(F);V.color.copy(j).multiplyScalar(k),V.halfWidth.set(F.width*.5,0,0),V.halfHeight.set(0,F.height*.5,0),n.rectArea[S]=V,S++}else if(F.isPointLight){const V=e.get(F);if(V.color.copy(F.color).multiplyScalar(F.intensity),V.distance=F.distance,V.decay=F.decay,F.castShadow){const $=F.shadow,W=t.get(F);W.shadowIntensity=$.intensity,W.shadowBias=$.bias,W.shadowNormalBias=$.normalBias,W.shadowRadius=$.radius,W.shadowMapSize=$.mapSize,W.shadowCameraNear=$.camera.near,W.shadowCameraFar=$.camera.far,n.pointShadow[x]=W,n.pointShadowMap[x]=se,n.pointShadowMatrix[x]=F.shadow.matrix,T++}n.point[x]=V,x++}else if(F.isHemisphereLight){const V=e.get(F);V.skyColor.copy(F.color).multiplyScalar(k),V.groundColor.copy(F.groundColor).multiplyScalar(k),n.hemi[_]=V,_++}}S>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ne.LTC_FLOAT_1,n.rectAreaLTC2=Ne.LTC_FLOAT_2):(n.rectAreaLTC1=Ne.LTC_HALF_1,n.rectAreaLTC2=Ne.LTC_HALF_2)),n.ambient[0]=d,n.ambient[1]=p,n.ambient[2]=g;const I=n.hash;(I.directionalLength!==v||I.pointLength!==x||I.spotLength!==M||I.rectAreaLength!==S||I.hemiLength!==_||I.numDirectionalShadows!==b||I.numPointShadows!==T||I.numSpotShadows!==A||I.numSpotMaps!==U||I.numLightProbes!==P)&&(n.directional.length=v,n.spot.length=M,n.rectArea.length=S,n.point.length=x,n.hemi.length=_,n.directionalShadow.length=b,n.directionalShadowMap.length=b,n.pointShadow.length=T,n.pointShadowMap.length=T,n.spotShadow.length=A,n.spotShadowMap.length=A,n.directionalShadowMatrix.length=b,n.pointShadowMatrix.length=T,n.spotLightMatrix.length=A+U-D,n.spotLightMap.length=U,n.numSpotLightShadowsWithMaps=D,n.numLightProbes=P,I.directionalLength=v,I.pointLength=x,I.spotLength=M,I.rectAreaLength=S,I.hemiLength=_,I.numDirectionalShadows=b,I.numPointShadows=T,I.numSpotShadows=A,I.numSpotMaps=U,I.numLightProbes=P,n.version=ND++)}function u(f,d){let p=0,g=0,v=0,x=0,M=0;const S=d.matrixWorldInverse;for(let _=0,b=f.length;_<b;_++){const T=f[_];if(T.isDirectionalLight){const A=n.directional[p];A.direction.setFromMatrixPosition(T.matrixWorld),i.setFromMatrixPosition(T.target.matrixWorld),A.direction.sub(i),A.direction.transformDirection(S),p++}else if(T.isSpotLight){const A=n.spot[v];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(S),A.direction.setFromMatrixPosition(T.matrixWorld),i.setFromMatrixPosition(T.target.matrixWorld),A.direction.sub(i),A.direction.transformDirection(S),v++}else if(T.isRectAreaLight){const A=n.rectArea[x];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(S),l.identity(),r.copy(T.matrixWorld),r.premultiply(S),l.extractRotation(r),A.halfWidth.set(T.width*.5,0,0),A.halfHeight.set(0,T.height*.5,0),A.halfWidth.applyMatrix4(l),A.halfHeight.applyMatrix4(l),x++}else if(T.isPointLight){const A=n.point[g];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(S),g++}else if(T.isHemisphereLight){const A=n.hemi[M];A.direction.setFromMatrixPosition(T.matrixWorld),A.direction.transformDirection(S),M++}}}return{setup:c,setupView:u,state:n}}function Ty(s){const e=new UD(s),t=[],n=[];function i(d){f.camera=d,t.length=0,n.length=0}function r(d){t.push(d)}function l(d){n.push(d)}function c(){e.setup(t)}function u(d){e.setupView(t,d)}const f={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:f,setupLights:c,setupLightsView:u,pushLight:r,pushShadow:l}}function PD(s){let e=new WeakMap;function t(i,r=0){const l=e.get(i);let c;return l===void 0?(c=new Ty(s),e.set(i,[c])):r>=l.length?(c=new Ty(s),l.push(c)):c=l[r],c}function n(){e=new WeakMap}return{get:t,dispose:n}}const ID=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,OD=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function BD(s,e,t){let n=new sl;const i=new oe,r=new oe,l=new Lt,c=new Sg({depthPacking:Xx}),u=new Mg,f={},d=t.maxTextureSize,p={[fs]:En,[En]:fs,[ri]:ri},g=new zn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new oe},radius:{value:4}},vertexShader:ID,fragmentShader:OD}),v=g.clone();v.defines.HORIZONTAL_PASS=1;const x=new pt;x.setAttribute("position",new Ut(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new pn(x,g),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=cf;let _=this.type;this.render=function(D,P,I){if(S.enabled===!1||S.autoUpdate===!1&&S.needsUpdate===!1||D.length===0)return;const w=s.getRenderTarget(),R=s.getActiveCubeFace(),F=s.getActiveMipmapLevel(),j=s.state;j.setBlending(mi),j.buffers.color.setClear(1,1,1,1),j.buffers.depth.setTest(!0),j.setScissorTest(!1);const k=_!==os&&this.type===os,J=_===os&&this.type!==os;for(let se=0,V=D.length;se<V;se++){const $=D[se],W=$.shadow;if(W===void 0){console.warn("THREE.WebGLShadowMap:",$,"has no shadow.");continue}if(W.autoUpdate===!1&&W.needsUpdate===!1)continue;i.copy(W.mapSize);const le=W.getFrameExtents();if(i.multiply(le),r.copy(W.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(r.x=Math.floor(d/le.x),i.x=r.x*le.x,W.mapSize.x=r.x),i.y>d&&(r.y=Math.floor(d/le.y),i.y=r.y*le.y,W.mapSize.y=r.y)),W.map===null||k===!0||J===!0){const ye=this.type!==os?{minFilter:an,magFilter:an}:{};W.map!==null&&W.map.dispose(),W.map=new Sn(i.x,i.y,ye),W.map.texture.name=$.name+".shadowMap",W.camera.updateProjectionMatrix()}s.setRenderTarget(W.map),s.clear();const me=W.getViewportCount();for(let ye=0;ye<me;ye++){const Pe=W.getViewport(ye);l.set(r.x*Pe.x,r.y*Pe.y,r.x*Pe.z,r.y*Pe.w),j.viewport(l),W.updateMatrices($,ye),n=W.getFrustum(),A(P,I,W.camera,$,this.type)}W.isPointLightShadow!==!0&&this.type===os&&b(W,I),W.needsUpdate=!1}_=this.type,S.needsUpdate=!1,s.setRenderTarget(w,R,F)};function b(D,P){const I=e.update(M);g.defines.VSM_SAMPLES!==D.blurSamples&&(g.defines.VSM_SAMPLES=D.blurSamples,v.defines.VSM_SAMPLES=D.blurSamples,g.needsUpdate=!0,v.needsUpdate=!0),D.mapPass===null&&(D.mapPass=new Sn(i.x,i.y)),g.uniforms.shadow_pass.value=D.map.texture,g.uniforms.resolution.value=D.mapSize,g.uniforms.radius.value=D.radius,s.setRenderTarget(D.mapPass),s.clear(),s.renderBufferDirect(P,null,I,g,M,null),v.uniforms.shadow_pass.value=D.mapPass.texture,v.uniforms.resolution.value=D.mapSize,v.uniforms.radius.value=D.radius,s.setRenderTarget(D.map),s.clear(),s.renderBufferDirect(P,null,I,v,M,null)}function T(D,P,I,w){let R=null;const F=I.isPointLight===!0?D.customDistanceMaterial:D.customDepthMaterial;if(F!==void 0)R=F;else if(R=I.isPointLight===!0?u:c,s.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0||P.alphaToCoverage===!0){const j=R.uuid,k=P.uuid;let J=f[j];J===void 0&&(J={},f[j]=J);let se=J[k];se===void 0&&(se=R.clone(),J[k]=se,P.addEventListener("dispose",U)),R=se}if(R.visible=P.visible,R.wireframe=P.wireframe,w===os?R.side=P.shadowSide!==null?P.shadowSide:P.side:R.side=P.shadowSide!==null?P.shadowSide:p[P.side],R.alphaMap=P.alphaMap,R.alphaTest=P.alphaToCoverage===!0?.5:P.alphaTest,R.map=P.map,R.clipShadows=P.clipShadows,R.clippingPlanes=P.clippingPlanes,R.clipIntersection=P.clipIntersection,R.displacementMap=P.displacementMap,R.displacementScale=P.displacementScale,R.displacementBias=P.displacementBias,R.wireframeLinewidth=P.wireframeLinewidth,R.linewidth=P.linewidth,I.isPointLight===!0&&R.isMeshDistanceMaterial===!0){const j=s.properties.get(R);j.light=I}return R}function A(D,P,I,w,R){if(D.visible===!1)return;if(D.layers.test(P.layers)&&(D.isMesh||D.isLine||D.isPoints)&&(D.castShadow||D.receiveShadow&&R===os)&&(!D.frustumCulled||n.intersectsObject(D))){D.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,D.matrixWorld);const k=e.update(D),J=D.material;if(Array.isArray(J)){const se=k.groups;for(let V=0,$=se.length;V<$;V++){const W=se[V],le=J[W.materialIndex];if(le&&le.visible){const me=T(D,le,w,R);D.onBeforeShadow(s,D,P,I,k,me,W),s.renderBufferDirect(I,null,k,me,D,W),D.onAfterShadow(s,D,P,I,k,me,W)}}}else if(J.visible){const se=T(D,J,w,R);D.onBeforeShadow(s,D,P,I,k,se,null),s.renderBufferDirect(I,null,k,se,D,null),D.onAfterShadow(s,D,P,I,k,se,null)}}const j=D.children;for(let k=0,J=j.length;k<J;k++)A(j[k],P,I,w,R)}function U(D){D.target.removeEventListener("dispose",U);for(const I in f){const w=f[I],R=D.target.uuid;R in w&&(w[R].dispose(),delete w[R])}}}const zD={[xh]:Sh,[Mh]:Th,[Eh]:Ah,[Da]:bh,[Sh]:xh,[Th]:Mh,[Ah]:Eh,[bh]:Da};function FD(s,e){function t(){let G=!1;const Le=new Lt;let ve=null;const Ve=new Lt(0,0,0,0);return{setMask:function(Se){ve!==Se&&!G&&(s.colorMask(Se,Se,Se,Se),ve=Se)},setLocked:function(Se){G=Se},setClear:function(Se,he,qe,at,Ft){Ft===!0&&(Se*=at,he*=at,qe*=at),Le.set(Se,he,qe,at),Ve.equals(Le)===!1&&(s.clearColor(Se,he,qe,at),Ve.copy(Le))},reset:function(){G=!1,ve=null,Ve.set(-1,0,0,0)}}}function n(){let G=!1,Le=!1,ve=null,Ve=null,Se=null;return{setReversed:function(he){if(Le!==he){const qe=e.get("EXT_clip_control");he?qe.clipControlEXT(qe.LOWER_LEFT_EXT,qe.ZERO_TO_ONE_EXT):qe.clipControlEXT(qe.LOWER_LEFT_EXT,qe.NEGATIVE_ONE_TO_ONE_EXT),Le=he;const at=Se;Se=null,this.setClear(at)}},getReversed:function(){return Le},setTest:function(he){he?De(s.DEPTH_TEST):Ge(s.DEPTH_TEST)},setMask:function(he){ve!==he&&!G&&(s.depthMask(he),ve=he)},setFunc:function(he){if(Le&&(he=zD[he]),Ve!==he){switch(he){case xh:s.depthFunc(s.NEVER);break;case Sh:s.depthFunc(s.ALWAYS);break;case Mh:s.depthFunc(s.LESS);break;case Da:s.depthFunc(s.LEQUAL);break;case Eh:s.depthFunc(s.EQUAL);break;case bh:s.depthFunc(s.GEQUAL);break;case Th:s.depthFunc(s.GREATER);break;case Ah:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}Ve=he}},setLocked:function(he){G=he},setClear:function(he){Se!==he&&(Le&&(he=1-he),s.clearDepth(he),Se=he)},reset:function(){G=!1,ve=null,Ve=null,Se=null,Le=!1}}}function i(){let G=!1,Le=null,ve=null,Ve=null,Se=null,he=null,qe=null,at=null,Ft=null;return{setTest:function(Ct){G||(Ct?De(s.STENCIL_TEST):Ge(s.STENCIL_TEST))},setMask:function(Ct){Le!==Ct&&!G&&(s.stencilMask(Ct),Le=Ct)},setFunc:function(Ct,li,Oi){(ve!==Ct||Ve!==li||Se!==Oi)&&(s.stencilFunc(Ct,li,Oi),ve=Ct,Ve=li,Se=Oi)},setOp:function(Ct,li,Oi){(he!==Ct||qe!==li||at!==Oi)&&(s.stencilOp(Ct,li,Oi),he=Ct,qe=li,at=Oi)},setLocked:function(Ct){G=Ct},setClear:function(Ct){Ft!==Ct&&(s.clearStencil(Ct),Ft=Ct)},reset:function(){G=!1,Le=null,ve=null,Ve=null,Se=null,he=null,qe=null,at=null,Ft=null}}}const r=new t,l=new n,c=new i,u=new WeakMap,f=new WeakMap;let d={},p={},g=new WeakMap,v=[],x=null,M=!1,S=null,_=null,b=null,T=null,A=null,U=null,D=null,P=new Re(0,0,0),I=0,w=!1,R=null,F=null,j=null,k=null,J=null;const se=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let V=!1,$=0;const W=s.getParameter(s.VERSION);W.indexOf("WebGL")!==-1?($=parseFloat(/^WebGL (\d)/.exec(W)[1]),V=$>=1):W.indexOf("OpenGL ES")!==-1&&($=parseFloat(/^OpenGL ES (\d)/.exec(W)[1]),V=$>=2);let le=null,me={};const ye=s.getParameter(s.SCISSOR_BOX),Pe=s.getParameter(s.VIEWPORT),Je=new Lt().fromArray(ye),te=new Lt().fromArray(Pe);function xe(G,Le,ve,Ve){const Se=new Uint8Array(4),he=s.createTexture();s.bindTexture(G,he),s.texParameteri(G,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(G,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let qe=0;qe<ve;qe++)G===s.TEXTURE_3D||G===s.TEXTURE_2D_ARRAY?s.texImage3D(Le,0,s.RGBA,1,1,Ve,0,s.RGBA,s.UNSIGNED_BYTE,Se):s.texImage2D(Le+qe,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Se);return he}const We={};We[s.TEXTURE_2D]=xe(s.TEXTURE_2D,s.TEXTURE_2D,1),We[s.TEXTURE_CUBE_MAP]=xe(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),We[s.TEXTURE_2D_ARRAY]=xe(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),We[s.TEXTURE_3D]=xe(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),l.setClear(1),c.setClear(0),De(s.DEPTH_TEST),l.setFunc(Da),ge(!1),Ee(Sm),De(s.CULL_FACE),O(mi);function De(G){d[G]!==!0&&(s.enable(G),d[G]=!0)}function Ge(G){d[G]!==!1&&(s.disable(G),d[G]=!1)}function ft(G,Le){return p[G]!==Le?(s.bindFramebuffer(G,Le),p[G]=Le,G===s.DRAW_FRAMEBUFFER&&(p[s.FRAMEBUFFER]=Le),G===s.FRAMEBUFFER&&(p[s.DRAW_FRAMEBUFFER]=Le),!0):!1}function Qe(G,Le){let ve=v,Ve=!1;if(G){ve=g.get(Le),ve===void 0&&(ve=[],g.set(Le,ve));const Se=G.textures;if(ve.length!==Se.length||ve[0]!==s.COLOR_ATTACHMENT0){for(let he=0,qe=Se.length;he<qe;he++)ve[he]=s.COLOR_ATTACHMENT0+he;ve.length=Se.length,Ve=!0}}else ve[0]!==s.BACK&&(ve[0]=s.BACK,Ve=!0);Ve&&s.drawBuffers(ve)}function zt(G){return x!==G?(s.useProgram(G),x=G,!0):!1}const yt={[Tr]:s.FUNC_ADD,[px]:s.FUNC_SUBTRACT,[mx]:s.FUNC_REVERSE_SUBTRACT};yt[gx]=s.MIN,yt[vx]=s.MAX;const lt={[_x]:s.ZERO,[yx]:s.ONE,[xx]:s.SRC_COLOR,[_h]:s.SRC_ALPHA,[Ax]:s.SRC_ALPHA_SATURATE,[bx]:s.DST_COLOR,[Mx]:s.DST_ALPHA,[Sx]:s.ONE_MINUS_SRC_COLOR,[yh]:s.ONE_MINUS_SRC_ALPHA,[Tx]:s.ONE_MINUS_DST_COLOR,[Ex]:s.ONE_MINUS_DST_ALPHA,[Rx]:s.CONSTANT_COLOR,[wx]:s.ONE_MINUS_CONSTANT_COLOR,[Cx]:s.CONSTANT_ALPHA,[Dx]:s.ONE_MINUS_CONSTANT_ALPHA};function O(G,Le,ve,Ve,Se,he,qe,at,Ft,Ct){if(G===mi){M===!0&&(Ge(s.BLEND),M=!1);return}if(M===!1&&(De(s.BLEND),M=!0),G!==dx){if(G!==S||Ct!==w){if((_!==Tr||A!==Tr)&&(s.blendEquation(s.FUNC_ADD),_=Tr,A=Tr),Ct)switch(G){case Ta:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Mm:s.blendFunc(s.ONE,s.ONE);break;case Em:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case bm:s.blendFuncSeparate(s.DST_COLOR,s.ONE_MINUS_SRC_ALPHA,s.ZERO,s.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case Ta:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Mm:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE,s.ONE,s.ONE);break;case Em:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case bm:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}b=null,T=null,U=null,D=null,P.set(0,0,0),I=0,S=G,w=Ct}return}Se=Se||Le,he=he||ve,qe=qe||Ve,(Le!==_||Se!==A)&&(s.blendEquationSeparate(yt[Le],yt[Se]),_=Le,A=Se),(ve!==b||Ve!==T||he!==U||qe!==D)&&(s.blendFuncSeparate(lt[ve],lt[Ve],lt[he],lt[qe]),b=ve,T=Ve,U=he,D=qe),(at.equals(P)===!1||Ft!==I)&&(s.blendColor(at.r,at.g,at.b,Ft),P.copy(at),I=Ft),S=G,w=!1}function Te(G,Le){G.side===ri?Ge(s.CULL_FACE):De(s.CULL_FACE);let ve=G.side===En;Le&&(ve=!ve),ge(ve),G.blending===Ta&&G.transparent===!1?O(mi):O(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.blendColor,G.blendAlpha,G.premultipliedAlpha),l.setFunc(G.depthFunc),l.setTest(G.depthTest),l.setMask(G.depthWrite),r.setMask(G.colorWrite);const Ve=G.stencilWrite;c.setTest(Ve),Ve&&(c.setMask(G.stencilWriteMask),c.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),c.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),Be(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?De(s.SAMPLE_ALPHA_TO_COVERAGE):Ge(s.SAMPLE_ALPHA_TO_COVERAGE)}function ge(G){R!==G&&(G?s.frontFace(s.CW):s.frontFace(s.CCW),R=G)}function Ee(G){G!==ux?(De(s.CULL_FACE),G!==F&&(G===Sm?s.cullFace(s.BACK):G===hx?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):Ge(s.CULL_FACE),F=G}function ue(G){G!==j&&(V&&s.lineWidth(G),j=G)}function Be(G,Le,ve){G?(De(s.POLYGON_OFFSET_FILL),(k!==Le||J!==ve)&&(s.polygonOffset(Le,ve),k=Le,J=ve)):Ge(s.POLYGON_OFFSET_FILL)}function pe(G){G?De(s.SCISSOR_TEST):Ge(s.SCISSOR_TEST)}function Oe(G){G===void 0&&(G=s.TEXTURE0+se-1),le!==G&&(s.activeTexture(G),le=G)}function ut(G,Le,ve){ve===void 0&&(le===null?ve=s.TEXTURE0+se-1:ve=le);let Ve=me[ve];Ve===void 0&&(Ve={type:void 0,texture:void 0},me[ve]=Ve),(Ve.type!==G||Ve.texture!==Le)&&(le!==ve&&(s.activeTexture(ve),le=ve),s.bindTexture(G,Le||We[G]),Ve.type=G,Ve.texture=Le)}function z(){const G=me[le];G!==void 0&&G.type!==void 0&&(s.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function C(){try{s.compressedTexImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Z(){try{s.compressedTexImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function re(){try{s.texSubImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function de(){try{s.texSubImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ae(){try{s.compressedTexSubImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function je(){try{s.compressedTexSubImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function we(){try{s.texStorage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ke(){try{s.texStorage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ke(){try{s.texImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function fe(){try{s.texImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ue(G){Je.equals(G)===!1&&(s.scissor(G.x,G.y,G.z,G.w),Je.copy(G))}function et(G){te.equals(G)===!1&&(s.viewport(G.x,G.y,G.z,G.w),te.copy(G))}function tt(G,Le){let ve=f.get(Le);ve===void 0&&(ve=new WeakMap,f.set(Le,ve));let Ve=ve.get(G);Ve===void 0&&(Ve=s.getUniformBlockIndex(Le,G.name),ve.set(G,Ve))}function Ae(G,Le){const Ve=f.get(Le).get(G);u.get(Le)!==Ve&&(s.uniformBlockBinding(Le,Ve,G.__bindingPointIndex),u.set(Le,Ve))}function st(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),l.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),d={},le=null,me={},p={},g=new WeakMap,v=[],x=null,M=!1,S=null,_=null,b=null,T=null,A=null,U=null,D=null,P=new Re(0,0,0),I=0,w=!1,R=null,F=null,j=null,k=null,J=null,Je.set(0,0,s.canvas.width,s.canvas.height),te.set(0,0,s.canvas.width,s.canvas.height),r.reset(),l.reset(),c.reset()}return{buffers:{color:r,depth:l,stencil:c},enable:De,disable:Ge,bindFramebuffer:ft,drawBuffers:Qe,useProgram:zt,setBlending:O,setMaterial:Te,setFlipSided:ge,setCullFace:Ee,setLineWidth:ue,setPolygonOffset:Be,setScissorTest:pe,activeTexture:Oe,bindTexture:ut,unbindTexture:z,compressedTexImage2D:C,compressedTexImage3D:Z,texImage2D:Ke,texImage3D:fe,updateUBOMapping:tt,uniformBlockBinding:Ae,texStorage2D:we,texStorage3D:ke,texSubImage2D:re,texSubImage3D:de,compressedTexSubImage2D:ae,compressedTexSubImage3D:je,scissor:Ue,viewport:et,reset:st}}function HD(s,e,t,n,i,r,l){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new oe,d=new WeakMap;let p;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(z,C){return v?new OffscreenCanvas(z,C):vc("canvas")}function M(z,C,Z){let re=1;const de=ut(z);if((de.width>Z||de.height>Z)&&(re=Z/Math.max(de.width,de.height)),re<1)if(typeof HTMLImageElement<"u"&&z instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&z instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&z instanceof ImageBitmap||typeof VideoFrame<"u"&&z instanceof VideoFrame){const ae=Math.floor(re*de.width),je=Math.floor(re*de.height);p===void 0&&(p=x(ae,je));const we=C?x(ae,je):p;return we.width=ae,we.height=je,we.getContext("2d").drawImage(z,0,0,ae,je),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+de.width+"x"+de.height+") to ("+ae+"x"+je+")."),we}else return"data"in z&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+de.width+"x"+de.height+")."),z;return z}function S(z){return z.generateMipmaps}function _(z){s.generateMipmap(z)}function b(z){return z.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:z.isWebGL3DRenderTarget?s.TEXTURE_3D:z.isWebGLArrayRenderTarget||z.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function T(z,C,Z,re,de=!1){if(z!==null){if(s[z]!==void 0)return s[z];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+z+"'")}let ae=C;if(C===s.RED&&(Z===s.FLOAT&&(ae=s.R32F),Z===s.HALF_FLOAT&&(ae=s.R16F),Z===s.UNSIGNED_BYTE&&(ae=s.R8)),C===s.RED_INTEGER&&(Z===s.UNSIGNED_BYTE&&(ae=s.R8UI),Z===s.UNSIGNED_SHORT&&(ae=s.R16UI),Z===s.UNSIGNED_INT&&(ae=s.R32UI),Z===s.BYTE&&(ae=s.R8I),Z===s.SHORT&&(ae=s.R16I),Z===s.INT&&(ae=s.R32I)),C===s.RG&&(Z===s.FLOAT&&(ae=s.RG32F),Z===s.HALF_FLOAT&&(ae=s.RG16F),Z===s.UNSIGNED_BYTE&&(ae=s.RG8)),C===s.RG_INTEGER&&(Z===s.UNSIGNED_BYTE&&(ae=s.RG8UI),Z===s.UNSIGNED_SHORT&&(ae=s.RG16UI),Z===s.UNSIGNED_INT&&(ae=s.RG32UI),Z===s.BYTE&&(ae=s.RG8I),Z===s.SHORT&&(ae=s.RG16I),Z===s.INT&&(ae=s.RG32I)),C===s.RGB_INTEGER&&(Z===s.UNSIGNED_BYTE&&(ae=s.RGB8UI),Z===s.UNSIGNED_SHORT&&(ae=s.RGB16UI),Z===s.UNSIGNED_INT&&(ae=s.RGB32UI),Z===s.BYTE&&(ae=s.RGB8I),Z===s.SHORT&&(ae=s.RGB16I),Z===s.INT&&(ae=s.RGB32I)),C===s.RGBA_INTEGER&&(Z===s.UNSIGNED_BYTE&&(ae=s.RGBA8UI),Z===s.UNSIGNED_SHORT&&(ae=s.RGBA16UI),Z===s.UNSIGNED_INT&&(ae=s.RGBA32UI),Z===s.BYTE&&(ae=s.RGBA8I),Z===s.SHORT&&(ae=s.RGBA16I),Z===s.INT&&(ae=s.RGBA32I)),C===s.RGB&&Z===s.UNSIGNED_INT_5_9_9_9_REV&&(ae=s.RGB9_E5),C===s.RGBA){const je=de?pc:bt.getTransfer(re);Z===s.FLOAT&&(ae=s.RGBA32F),Z===s.HALF_FLOAT&&(ae=s.RGBA16F),Z===s.UNSIGNED_BYTE&&(ae=je===qt?s.SRGB8_ALPHA8:s.RGBA8),Z===s.UNSIGNED_SHORT_4_4_4_4&&(ae=s.RGBA4),Z===s.UNSIGNED_SHORT_5_5_5_1&&(ae=s.RGB5_A1)}return(ae===s.R16F||ae===s.R32F||ae===s.RG16F||ae===s.RG32F||ae===s.RGBA16F||ae===s.RGBA32F)&&e.get("EXT_color_buffer_float"),ae}function A(z,C){let Z;return z?C===null||C===Rs||C===Na?Z=s.DEPTH24_STENCIL8:C===Kn?Z=s.DEPTH32F_STENCIL8:C===qo&&(Z=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):C===null||C===Rs||C===Na?Z=s.DEPTH_COMPONENT24:C===Kn?Z=s.DEPTH_COMPONENT32F:C===qo&&(Z=s.DEPTH_COMPONENT16),Z}function U(z,C){return S(z)===!0||z.isFramebufferTexture&&z.minFilter!==an&&z.minFilter!==jt?Math.log2(Math.max(C.width,C.height))+1:z.mipmaps!==void 0&&z.mipmaps.length>0?z.mipmaps.length:z.isCompressedTexture&&Array.isArray(z.image)?C.mipmaps.length:1}function D(z){const C=z.target;C.removeEventListener("dispose",D),I(C),C.isVideoTexture&&d.delete(C)}function P(z){const C=z.target;C.removeEventListener("dispose",P),R(C)}function I(z){const C=n.get(z);if(C.__webglInit===void 0)return;const Z=z.source,re=g.get(Z);if(re){const de=re[C.__cacheKey];de.usedTimes--,de.usedTimes===0&&w(z),Object.keys(re).length===0&&g.delete(Z)}n.remove(z)}function w(z){const C=n.get(z);s.deleteTexture(C.__webglTexture);const Z=z.source,re=g.get(Z);delete re[C.__cacheKey],l.memory.textures--}function R(z){const C=n.get(z);if(z.depthTexture&&(z.depthTexture.dispose(),n.remove(z.depthTexture)),z.isWebGLCubeRenderTarget)for(let re=0;re<6;re++){if(Array.isArray(C.__webglFramebuffer[re]))for(let de=0;de<C.__webglFramebuffer[re].length;de++)s.deleteFramebuffer(C.__webglFramebuffer[re][de]);else s.deleteFramebuffer(C.__webglFramebuffer[re]);C.__webglDepthbuffer&&s.deleteRenderbuffer(C.__webglDepthbuffer[re])}else{if(Array.isArray(C.__webglFramebuffer))for(let re=0;re<C.__webglFramebuffer.length;re++)s.deleteFramebuffer(C.__webglFramebuffer[re]);else s.deleteFramebuffer(C.__webglFramebuffer);if(C.__webglDepthbuffer&&s.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&s.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer)for(let re=0;re<C.__webglColorRenderbuffer.length;re++)C.__webglColorRenderbuffer[re]&&s.deleteRenderbuffer(C.__webglColorRenderbuffer[re]);C.__webglDepthRenderbuffer&&s.deleteRenderbuffer(C.__webglDepthRenderbuffer)}const Z=z.textures;for(let re=0,de=Z.length;re<de;re++){const ae=n.get(Z[re]);ae.__webglTexture&&(s.deleteTexture(ae.__webglTexture),l.memory.textures--),n.remove(Z[re])}n.remove(z)}let F=0;function j(){F=0}function k(){const z=F;return z>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+z+" texture units while this GPU supports only "+i.maxTextures),F+=1,z}function J(z){const C=[];return C.push(z.wrapS),C.push(z.wrapT),C.push(z.wrapR||0),C.push(z.magFilter),C.push(z.minFilter),C.push(z.anisotropy),C.push(z.internalFormat),C.push(z.format),C.push(z.type),C.push(z.generateMipmaps),C.push(z.premultiplyAlpha),C.push(z.flipY),C.push(z.unpackAlignment),C.push(z.colorSpace),C.join()}function se(z,C){const Z=n.get(z);if(z.isVideoTexture&&pe(z),z.isRenderTargetTexture===!1&&z.version>0&&Z.__version!==z.version){const re=z.image;if(re===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(re.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{We(Z,z,C);return}}t.bindTexture(s.TEXTURE_2D,Z.__webglTexture,s.TEXTURE0+C)}function V(z,C){const Z=n.get(z);if(z.version>0&&Z.__version!==z.version){We(Z,z,C);return}t.bindTexture(s.TEXTURE_2D_ARRAY,Z.__webglTexture,s.TEXTURE0+C)}function $(z,C){const Z=n.get(z);if(z.version>0&&Z.__version!==z.version){We(Z,z,C);return}t.bindTexture(s.TEXTURE_3D,Z.__webglTexture,s.TEXTURE0+C)}function W(z,C){const Z=n.get(z);if(z.version>0&&Z.__version!==z.version){De(Z,z,C);return}t.bindTexture(s.TEXTURE_CUBE_MAP,Z.__webglTexture,s.TEXTURE0+C)}const le={[Dr]:s.REPEAT,[Ci]:s.CLAMP_TO_EDGE,[Wo]:s.MIRRORED_REPEAT},me={[an]:s.NEAREST,[hf]:s.NEAREST_MIPMAP_NEAREST,[xa]:s.NEAREST_MIPMAP_LINEAR,[jt]:s.LINEAR,[Vo]:s.LINEAR_MIPMAP_NEAREST,[Di]:s.LINEAR_MIPMAP_LINEAR},ye={[qx]:s.NEVER,[Qx]:s.ALWAYS,[Yx]:s.LESS,[sg]:s.LEQUAL,[Kx]:s.EQUAL,[Jx]:s.GEQUAL,[jx]:s.GREATER,[Zx]:s.NOTEQUAL};function Pe(z,C){if(C.type===Kn&&e.has("OES_texture_float_linear")===!1&&(C.magFilter===jt||C.magFilter===Vo||C.magFilter===xa||C.magFilter===Di||C.minFilter===jt||C.minFilter===Vo||C.minFilter===xa||C.minFilter===Di)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(z,s.TEXTURE_WRAP_S,le[C.wrapS]),s.texParameteri(z,s.TEXTURE_WRAP_T,le[C.wrapT]),(z===s.TEXTURE_3D||z===s.TEXTURE_2D_ARRAY)&&s.texParameteri(z,s.TEXTURE_WRAP_R,le[C.wrapR]),s.texParameteri(z,s.TEXTURE_MAG_FILTER,me[C.magFilter]),s.texParameteri(z,s.TEXTURE_MIN_FILTER,me[C.minFilter]),C.compareFunction&&(s.texParameteri(z,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(z,s.TEXTURE_COMPARE_FUNC,ye[C.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(C.magFilter===an||C.minFilter!==xa&&C.minFilter!==Di||C.type===Kn&&e.has("OES_texture_float_linear")===!1)return;if(C.anisotropy>1||n.get(C).__currentAnisotropy){const Z=e.get("EXT_texture_filter_anisotropic");s.texParameterf(z,Z.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,i.getMaxAnisotropy())),n.get(C).__currentAnisotropy=C.anisotropy}}}function Je(z,C){let Z=!1;z.__webglInit===void 0&&(z.__webglInit=!0,C.addEventListener("dispose",D));const re=C.source;let de=g.get(re);de===void 0&&(de={},g.set(re,de));const ae=J(C);if(ae!==z.__cacheKey){de[ae]===void 0&&(de[ae]={texture:s.createTexture(),usedTimes:0},l.memory.textures++,Z=!0),de[ae].usedTimes++;const je=de[z.__cacheKey];je!==void 0&&(de[z.__cacheKey].usedTimes--,je.usedTimes===0&&w(C)),z.__cacheKey=ae,z.__webglTexture=de[ae].texture}return Z}function te(z,C,Z){return Math.floor(Math.floor(z/Z)/C)}function xe(z,C,Z,re){const ae=z.updateRanges;if(ae.length===0)t.texSubImage2D(s.TEXTURE_2D,0,0,0,C.width,C.height,Z,re,C.data);else{ae.sort((fe,Ue)=>fe.start-Ue.start);let je=0;for(let fe=1;fe<ae.length;fe++){const Ue=ae[je],et=ae[fe],tt=Ue.start+Ue.count,Ae=te(et.start,C.width,4),st=te(Ue.start,C.width,4);et.start<=tt+1&&Ae===st&&te(et.start+et.count-1,C.width,4)===Ae?Ue.count=Math.max(Ue.count,et.start+et.count-Ue.start):(++je,ae[je]=et)}ae.length=je+1;const we=s.getParameter(s.UNPACK_ROW_LENGTH),ke=s.getParameter(s.UNPACK_SKIP_PIXELS),Ke=s.getParameter(s.UNPACK_SKIP_ROWS);s.pixelStorei(s.UNPACK_ROW_LENGTH,C.width);for(let fe=0,Ue=ae.length;fe<Ue;fe++){const et=ae[fe],tt=Math.floor(et.start/4),Ae=Math.ceil(et.count/4),st=tt%C.width,G=Math.floor(tt/C.width),Le=Ae,ve=1;s.pixelStorei(s.UNPACK_SKIP_PIXELS,st),s.pixelStorei(s.UNPACK_SKIP_ROWS,G),t.texSubImage2D(s.TEXTURE_2D,0,st,G,Le,ve,Z,re,C.data)}z.clearUpdateRanges(),s.pixelStorei(s.UNPACK_ROW_LENGTH,we),s.pixelStorei(s.UNPACK_SKIP_PIXELS,ke),s.pixelStorei(s.UNPACK_SKIP_ROWS,Ke)}}function We(z,C,Z){let re=s.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(re=s.TEXTURE_2D_ARRAY),C.isData3DTexture&&(re=s.TEXTURE_3D);const de=Je(z,C),ae=C.source;t.bindTexture(re,z.__webglTexture,s.TEXTURE0+Z);const je=n.get(ae);if(ae.version!==je.__version||de===!0){t.activeTexture(s.TEXTURE0+Z);const we=bt.getPrimaries(bt.workingColorSpace),ke=C.colorSpace===cs?null:bt.getPrimaries(C.colorSpace),Ke=C.colorSpace===cs||we===ke?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,C.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,C.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ke);let fe=M(C.image,!1,i.maxTextureSize);fe=Oe(C,fe);const Ue=r.convert(C.format,C.colorSpace),et=r.convert(C.type);let tt=T(C.internalFormat,Ue,et,C.colorSpace,C.isVideoTexture);Pe(re,C);let Ae;const st=C.mipmaps,G=C.isVideoTexture!==!0,Le=je.__version===void 0||de===!0,ve=ae.dataReady,Ve=U(C,fe);if(C.isDepthTexture)tt=A(C.format===La,C.type),Le&&(G?t.texStorage2D(s.TEXTURE_2D,1,tt,fe.width,fe.height):t.texImage2D(s.TEXTURE_2D,0,tt,fe.width,fe.height,0,Ue,et,null));else if(C.isDataTexture)if(st.length>0){G&&Le&&t.texStorage2D(s.TEXTURE_2D,Ve,tt,st[0].width,st[0].height);for(let Se=0,he=st.length;Se<he;Se++)Ae=st[Se],G?ve&&t.texSubImage2D(s.TEXTURE_2D,Se,0,0,Ae.width,Ae.height,Ue,et,Ae.data):t.texImage2D(s.TEXTURE_2D,Se,tt,Ae.width,Ae.height,0,Ue,et,Ae.data);C.generateMipmaps=!1}else G?(Le&&t.texStorage2D(s.TEXTURE_2D,Ve,tt,fe.width,fe.height),ve&&xe(C,fe,Ue,et)):t.texImage2D(s.TEXTURE_2D,0,tt,fe.width,fe.height,0,Ue,et,fe.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){G&&Le&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ve,tt,st[0].width,st[0].height,fe.depth);for(let Se=0,he=st.length;Se<he;Se++)if(Ae=st[Se],C.format!==jn)if(Ue!==null)if(G){if(ve)if(C.layerUpdates.size>0){const qe=Um(Ae.width,Ae.height,C.format,C.type);for(const at of C.layerUpdates){const Ft=Ae.data.subarray(at*qe/Ae.data.BYTES_PER_ELEMENT,(at+1)*qe/Ae.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Se,0,0,at,Ae.width,Ae.height,1,Ue,Ft)}C.clearLayerUpdates()}else t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Se,0,0,0,Ae.width,Ae.height,fe.depth,Ue,Ae.data)}else t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,Se,tt,Ae.width,Ae.height,fe.depth,0,Ae.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else G?ve&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,Se,0,0,0,Ae.width,Ae.height,fe.depth,Ue,et,Ae.data):t.texImage3D(s.TEXTURE_2D_ARRAY,Se,tt,Ae.width,Ae.height,fe.depth,0,Ue,et,Ae.data)}else{G&&Le&&t.texStorage2D(s.TEXTURE_2D,Ve,tt,st[0].width,st[0].height);for(let Se=0,he=st.length;Se<he;Se++)Ae=st[Se],C.format!==jn?Ue!==null?G?ve&&t.compressedTexSubImage2D(s.TEXTURE_2D,Se,0,0,Ae.width,Ae.height,Ue,Ae.data):t.compressedTexImage2D(s.TEXTURE_2D,Se,tt,Ae.width,Ae.height,0,Ae.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):G?ve&&t.texSubImage2D(s.TEXTURE_2D,Se,0,0,Ae.width,Ae.height,Ue,et,Ae.data):t.texImage2D(s.TEXTURE_2D,Se,tt,Ae.width,Ae.height,0,Ue,et,Ae.data)}else if(C.isDataArrayTexture)if(G){if(Le&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ve,tt,fe.width,fe.height,fe.depth),ve)if(C.layerUpdates.size>0){const Se=Um(fe.width,fe.height,C.format,C.type);for(const he of C.layerUpdates){const qe=fe.data.subarray(he*Se/fe.data.BYTES_PER_ELEMENT,(he+1)*Se/fe.data.BYTES_PER_ELEMENT);t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,he,fe.width,fe.height,1,Ue,et,qe)}C.clearLayerUpdates()}else t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,fe.width,fe.height,fe.depth,Ue,et,fe.data)}else t.texImage3D(s.TEXTURE_2D_ARRAY,0,tt,fe.width,fe.height,fe.depth,0,Ue,et,fe.data);else if(C.isData3DTexture)G?(Le&&t.texStorage3D(s.TEXTURE_3D,Ve,tt,fe.width,fe.height,fe.depth),ve&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,fe.width,fe.height,fe.depth,Ue,et,fe.data)):t.texImage3D(s.TEXTURE_3D,0,tt,fe.width,fe.height,fe.depth,0,Ue,et,fe.data);else if(C.isFramebufferTexture){if(Le)if(G)t.texStorage2D(s.TEXTURE_2D,Ve,tt,fe.width,fe.height);else{let Se=fe.width,he=fe.height;for(let qe=0;qe<Ve;qe++)t.texImage2D(s.TEXTURE_2D,qe,tt,Se,he,0,Ue,et,null),Se>>=1,he>>=1}}else if(st.length>0){if(G&&Le){const Se=ut(st[0]);t.texStorage2D(s.TEXTURE_2D,Ve,tt,Se.width,Se.height)}for(let Se=0,he=st.length;Se<he;Se++)Ae=st[Se],G?ve&&t.texSubImage2D(s.TEXTURE_2D,Se,0,0,Ue,et,Ae):t.texImage2D(s.TEXTURE_2D,Se,tt,Ue,et,Ae);C.generateMipmaps=!1}else if(G){if(Le){const Se=ut(fe);t.texStorage2D(s.TEXTURE_2D,Ve,tt,Se.width,Se.height)}ve&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Ue,et,fe)}else t.texImage2D(s.TEXTURE_2D,0,tt,Ue,et,fe);S(C)&&_(re),je.__version=ae.version,C.onUpdate&&C.onUpdate(C)}z.__version=C.version}function De(z,C,Z){if(C.image.length!==6)return;const re=Je(z,C),de=C.source;t.bindTexture(s.TEXTURE_CUBE_MAP,z.__webglTexture,s.TEXTURE0+Z);const ae=n.get(de);if(de.version!==ae.__version||re===!0){t.activeTexture(s.TEXTURE0+Z);const je=bt.getPrimaries(bt.workingColorSpace),we=C.colorSpace===cs?null:bt.getPrimaries(C.colorSpace),ke=C.colorSpace===cs||je===we?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,C.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,C.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,ke);const Ke=C.isCompressedTexture||C.image[0].isCompressedTexture,fe=C.image[0]&&C.image[0].isDataTexture,Ue=[];for(let he=0;he<6;he++)!Ke&&!fe?Ue[he]=M(C.image[he],!0,i.maxCubemapSize):Ue[he]=fe?C.image[he].image:C.image[he],Ue[he]=Oe(C,Ue[he]);const et=Ue[0],tt=r.convert(C.format,C.colorSpace),Ae=r.convert(C.type),st=T(C.internalFormat,tt,Ae,C.colorSpace),G=C.isVideoTexture!==!0,Le=ae.__version===void 0||re===!0,ve=de.dataReady;let Ve=U(C,et);Pe(s.TEXTURE_CUBE_MAP,C);let Se;if(Ke){G&&Le&&t.texStorage2D(s.TEXTURE_CUBE_MAP,Ve,st,et.width,et.height);for(let he=0;he<6;he++){Se=Ue[he].mipmaps;for(let qe=0;qe<Se.length;qe++){const at=Se[qe];C.format!==jn?tt!==null?G?ve&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+he,qe,0,0,at.width,at.height,tt,at.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+he,qe,st,at.width,at.height,0,at.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):G?ve&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+he,qe,0,0,at.width,at.height,tt,Ae,at.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+he,qe,st,at.width,at.height,0,tt,Ae,at.data)}}}else{if(Se=C.mipmaps,G&&Le){Se.length>0&&Ve++;const he=ut(Ue[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,Ve,st,he.width,he.height)}for(let he=0;he<6;he++)if(fe){G?ve&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+he,0,0,0,Ue[he].width,Ue[he].height,tt,Ae,Ue[he].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+he,0,st,Ue[he].width,Ue[he].height,0,tt,Ae,Ue[he].data);for(let qe=0;qe<Se.length;qe++){const Ft=Se[qe].image[he].image;G?ve&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+he,qe+1,0,0,Ft.width,Ft.height,tt,Ae,Ft.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+he,qe+1,st,Ft.width,Ft.height,0,tt,Ae,Ft.data)}}else{G?ve&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+he,0,0,0,tt,Ae,Ue[he]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+he,0,st,tt,Ae,Ue[he]);for(let qe=0;qe<Se.length;qe++){const at=Se[qe];G?ve&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+he,qe+1,0,0,tt,Ae,at.image[he]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+he,qe+1,st,tt,Ae,at.image[he])}}}S(C)&&_(s.TEXTURE_CUBE_MAP),ae.__version=de.version,C.onUpdate&&C.onUpdate(C)}z.__version=C.version}function Ge(z,C,Z,re,de,ae){const je=r.convert(Z.format,Z.colorSpace),we=r.convert(Z.type),ke=T(Z.internalFormat,je,we,Z.colorSpace),Ke=n.get(C),fe=n.get(Z);if(fe.__renderTarget=C,!Ke.__hasExternalTextures){const Ue=Math.max(1,C.width>>ae),et=Math.max(1,C.height>>ae);de===s.TEXTURE_3D||de===s.TEXTURE_2D_ARRAY?t.texImage3D(de,ae,ke,Ue,et,C.depth,0,je,we,null):t.texImage2D(de,ae,ke,Ue,et,0,je,we,null)}t.bindFramebuffer(s.FRAMEBUFFER,z),Be(C)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,re,de,fe.__webglTexture,0,ue(C)):(de===s.TEXTURE_2D||de>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&de<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,re,de,fe.__webglTexture,ae),t.bindFramebuffer(s.FRAMEBUFFER,null)}function ft(z,C,Z){if(s.bindRenderbuffer(s.RENDERBUFFER,z),C.depthBuffer){const re=C.depthTexture,de=re&&re.isDepthTexture?re.type:null,ae=A(C.stencilBuffer,de),je=C.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,we=ue(C);Be(C)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,we,ae,C.width,C.height):Z?s.renderbufferStorageMultisample(s.RENDERBUFFER,we,ae,C.width,C.height):s.renderbufferStorage(s.RENDERBUFFER,ae,C.width,C.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,je,s.RENDERBUFFER,z)}else{const re=C.textures;for(let de=0;de<re.length;de++){const ae=re[de],je=r.convert(ae.format,ae.colorSpace),we=r.convert(ae.type),ke=T(ae.internalFormat,je,we,ae.colorSpace),Ke=ue(C);Z&&Be(C)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Ke,ke,C.width,C.height):Be(C)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ke,ke,C.width,C.height):s.renderbufferStorage(s.RENDERBUFFER,ke,C.width,C.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function Qe(z,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,z),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const re=n.get(C.depthTexture);re.__renderTarget=C,(!re.__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),se(C.depthTexture,0);const de=re.__webglTexture,ae=ue(C);if(C.depthTexture.format===Yo)Be(C)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,de,0,ae):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,de,0);else if(C.depthTexture.format===La)Be(C)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,de,0,ae):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,de,0);else throw new Error("Unknown depthTexture format")}function zt(z){const C=n.get(z),Z=z.isWebGLCubeRenderTarget===!0;if(C.__boundDepthTexture!==z.depthTexture){const re=z.depthTexture;if(C.__depthDisposeCallback&&C.__depthDisposeCallback(),re){const de=()=>{delete C.__boundDepthTexture,delete C.__depthDisposeCallback,re.removeEventListener("dispose",de)};re.addEventListener("dispose",de),C.__depthDisposeCallback=de}C.__boundDepthTexture=re}if(z.depthTexture&&!C.__autoAllocateDepthBuffer){if(Z)throw new Error("target.depthTexture not supported in Cube render targets");const re=z.texture.mipmaps;re&&re.length>0?Qe(C.__webglFramebuffer[0],z):Qe(C.__webglFramebuffer,z)}else if(Z){C.__webglDepthbuffer=[];for(let re=0;re<6;re++)if(t.bindFramebuffer(s.FRAMEBUFFER,C.__webglFramebuffer[re]),C.__webglDepthbuffer[re]===void 0)C.__webglDepthbuffer[re]=s.createRenderbuffer(),ft(C.__webglDepthbuffer[re],z,!1);else{const de=z.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ae=C.__webglDepthbuffer[re];s.bindRenderbuffer(s.RENDERBUFFER,ae),s.framebufferRenderbuffer(s.FRAMEBUFFER,de,s.RENDERBUFFER,ae)}}else{const re=z.texture.mipmaps;if(re&&re.length>0?t.bindFramebuffer(s.FRAMEBUFFER,C.__webglFramebuffer[0]):t.bindFramebuffer(s.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer===void 0)C.__webglDepthbuffer=s.createRenderbuffer(),ft(C.__webglDepthbuffer,z,!1);else{const de=z.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ae=C.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,ae),s.framebufferRenderbuffer(s.FRAMEBUFFER,de,s.RENDERBUFFER,ae)}}t.bindFramebuffer(s.FRAMEBUFFER,null)}function yt(z,C,Z){const re=n.get(z);C!==void 0&&Ge(re.__webglFramebuffer,z,z.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),Z!==void 0&&zt(z)}function lt(z){const C=z.texture,Z=n.get(z),re=n.get(C);z.addEventListener("dispose",P);const de=z.textures,ae=z.isWebGLCubeRenderTarget===!0,je=de.length>1;if(je||(re.__webglTexture===void 0&&(re.__webglTexture=s.createTexture()),re.__version=C.version,l.memory.textures++),ae){Z.__webglFramebuffer=[];for(let we=0;we<6;we++)if(C.mipmaps&&C.mipmaps.length>0){Z.__webglFramebuffer[we]=[];for(let ke=0;ke<C.mipmaps.length;ke++)Z.__webglFramebuffer[we][ke]=s.createFramebuffer()}else Z.__webglFramebuffer[we]=s.createFramebuffer()}else{if(C.mipmaps&&C.mipmaps.length>0){Z.__webglFramebuffer=[];for(let we=0;we<C.mipmaps.length;we++)Z.__webglFramebuffer[we]=s.createFramebuffer()}else Z.__webglFramebuffer=s.createFramebuffer();if(je)for(let we=0,ke=de.length;we<ke;we++){const Ke=n.get(de[we]);Ke.__webglTexture===void 0&&(Ke.__webglTexture=s.createTexture(),l.memory.textures++)}if(z.samples>0&&Be(z)===!1){Z.__webglMultisampledFramebuffer=s.createFramebuffer(),Z.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,Z.__webglMultisampledFramebuffer);for(let we=0;we<de.length;we++){const ke=de[we];Z.__webglColorRenderbuffer[we]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,Z.__webglColorRenderbuffer[we]);const Ke=r.convert(ke.format,ke.colorSpace),fe=r.convert(ke.type),Ue=T(ke.internalFormat,Ke,fe,ke.colorSpace,z.isXRRenderTarget===!0),et=ue(z);s.renderbufferStorageMultisample(s.RENDERBUFFER,et,Ue,z.width,z.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+we,s.RENDERBUFFER,Z.__webglColorRenderbuffer[we])}s.bindRenderbuffer(s.RENDERBUFFER,null),z.depthBuffer&&(Z.__webglDepthRenderbuffer=s.createRenderbuffer(),ft(Z.__webglDepthRenderbuffer,z,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(ae){t.bindTexture(s.TEXTURE_CUBE_MAP,re.__webglTexture),Pe(s.TEXTURE_CUBE_MAP,C);for(let we=0;we<6;we++)if(C.mipmaps&&C.mipmaps.length>0)for(let ke=0;ke<C.mipmaps.length;ke++)Ge(Z.__webglFramebuffer[we][ke],z,C,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+we,ke);else Ge(Z.__webglFramebuffer[we],z,C,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+we,0);S(C)&&_(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(je){for(let we=0,ke=de.length;we<ke;we++){const Ke=de[we],fe=n.get(Ke);t.bindTexture(s.TEXTURE_2D,fe.__webglTexture),Pe(s.TEXTURE_2D,Ke),Ge(Z.__webglFramebuffer,z,Ke,s.COLOR_ATTACHMENT0+we,s.TEXTURE_2D,0),S(Ke)&&_(s.TEXTURE_2D)}t.unbindTexture()}else{let we=s.TEXTURE_2D;if((z.isWebGL3DRenderTarget||z.isWebGLArrayRenderTarget)&&(we=z.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(we,re.__webglTexture),Pe(we,C),C.mipmaps&&C.mipmaps.length>0)for(let ke=0;ke<C.mipmaps.length;ke++)Ge(Z.__webglFramebuffer[ke],z,C,s.COLOR_ATTACHMENT0,we,ke);else Ge(Z.__webglFramebuffer,z,C,s.COLOR_ATTACHMENT0,we,0);S(C)&&_(we),t.unbindTexture()}z.depthBuffer&&zt(z)}function O(z){const C=z.textures;for(let Z=0,re=C.length;Z<re;Z++){const de=C[Z];if(S(de)){const ae=b(z),je=n.get(de).__webglTexture;t.bindTexture(ae,je),_(ae),t.unbindTexture()}}}const Te=[],ge=[];function Ee(z){if(z.samples>0){if(Be(z)===!1){const C=z.textures,Z=z.width,re=z.height;let de=s.COLOR_BUFFER_BIT;const ae=z.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,je=n.get(z),we=C.length>1;if(we)for(let Ke=0;Ke<C.length;Ke++)t.bindFramebuffer(s.FRAMEBUFFER,je.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ke,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,je.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ke,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,je.__webglMultisampledFramebuffer);const ke=z.texture.mipmaps;ke&&ke.length>0?t.bindFramebuffer(s.DRAW_FRAMEBUFFER,je.__webglFramebuffer[0]):t.bindFramebuffer(s.DRAW_FRAMEBUFFER,je.__webglFramebuffer);for(let Ke=0;Ke<C.length;Ke++){if(z.resolveDepthBuffer&&(z.depthBuffer&&(de|=s.DEPTH_BUFFER_BIT),z.stencilBuffer&&z.resolveStencilBuffer&&(de|=s.STENCIL_BUFFER_BIT)),we){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,je.__webglColorRenderbuffer[Ke]);const fe=n.get(C[Ke]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,fe,0)}s.blitFramebuffer(0,0,Z,re,0,0,Z,re,de,s.NEAREST),u===!0&&(Te.length=0,ge.length=0,Te.push(s.COLOR_ATTACHMENT0+Ke),z.depthBuffer&&z.resolveDepthBuffer===!1&&(Te.push(ae),ge.push(ae),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,ge)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Te))}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),we)for(let Ke=0;Ke<C.length;Ke++){t.bindFramebuffer(s.FRAMEBUFFER,je.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ke,s.RENDERBUFFER,je.__webglColorRenderbuffer[Ke]);const fe=n.get(C[Ke]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,je.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ke,s.TEXTURE_2D,fe,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,je.__webglMultisampledFramebuffer)}else if(z.depthBuffer&&z.resolveDepthBuffer===!1&&u){const C=z.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[C])}}}function ue(z){return Math.min(i.maxSamples,z.samples)}function Be(z){const C=n.get(z);return z.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function pe(z){const C=l.render.frame;d.get(z)!==C&&(d.set(z,C),z.update())}function Oe(z,C){const Z=z.colorSpace,re=z.format,de=z.type;return z.isCompressedTexture===!0||z.isVideoTexture===!0||Z!==bn&&Z!==cs&&(bt.getTransfer(Z)===qt?(re!==jn||de!==Bn)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Z)),C}function ut(z){return typeof HTMLImageElement<"u"&&z instanceof HTMLImageElement?(f.width=z.naturalWidth||z.width,f.height=z.naturalHeight||z.height):typeof VideoFrame<"u"&&z instanceof VideoFrame?(f.width=z.displayWidth,f.height=z.displayHeight):(f.width=z.width,f.height=z.height),f}this.allocateTextureUnit=k,this.resetTextureUnits=j,this.setTexture2D=se,this.setTexture2DArray=V,this.setTexture3D=$,this.setTextureCube=W,this.rebindTextures=yt,this.setupRenderTarget=lt,this.updateRenderTargetMipmap=O,this.updateMultisampleRenderTarget=Ee,this.setupDepthRenderbuffer=zt,this.setupFrameBufferTexture=Ge,this.useMultisampledRTT=Be}function iM(s,e){function t(n,i=cs){let r;const l=bt.getTransfer(i);if(n===Bn)return s.UNSIGNED_BYTE;if(n===df)return s.UNSIGNED_SHORT_4_4_4_4;if(n===pf)return s.UNSIGNED_SHORT_5_5_5_1;if(n===Jm)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===jm)return s.BYTE;if(n===Zm)return s.SHORT;if(n===qo)return s.UNSIGNED_SHORT;if(n===ff)return s.INT;if(n===Rs)return s.UNSIGNED_INT;if(n===Kn)return s.FLOAT;if(n===Lr)return s.HALF_FLOAT;if(n===Qm)return s.ALPHA;if(n===$m)return s.RGB;if(n===jn)return s.RGBA;if(n===Yo)return s.DEPTH_COMPONENT;if(n===La)return s.DEPTH_STENCIL;if(n===mf)return s.RED;if(n===Tc)return s.RED_INTEGER;if(n===eg)return s.RG;if(n===gf)return s.RG_INTEGER;if(n===vf)return s.RGBA_INTEGER;if(n===tc||n===nc||n===ic||n===sc)if(l===qt)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===tc)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===nc)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===ic)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===sc)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===tc)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===nc)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===ic)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===sc)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Rh||n===wh||n===Ch||n===Dh)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===Rh)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===wh)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Ch)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Dh)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Nh||n===Lh||n===Uh)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(n===Nh||n===Lh)return l===qt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===Uh)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Ph||n===Ih||n===Oh||n===Bh||n===zh||n===Fh||n===Hh||n===Vh||n===Gh||n===kh||n===Xh||n===Wh||n===qh||n===Yh)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(n===Ph)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Ih)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Oh)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Bh)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===zh)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Fh)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Hh)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Vh)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Gh)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===kh)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Xh)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Wh)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===qh)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Yh)return l===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===rc||n===Kh||n===jh)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(n===rc)return l===qt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Kh)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===jh)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===tg||n===Zh||n===Jh||n===Qh)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(n===rc)return r.COMPRESSED_RED_RGTC1_EXT;if(n===Zh)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Jh)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Qh)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Na?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:t}}const VD=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,GD=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class kD{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new nn,r=e.properties.get(i);r.__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new zn({vertexShader:VD,fragmentShader:GD,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new pn(new rl(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class XD extends Pi{constructor(e,t){super();const n=this;let i=null,r=1,l=null,c="local-floor",u=1,f=null,d=null,p=null,g=null,v=null,x=null;const M=new kD,S=t.getContextAttributes();let _=null,b=null;const T=[],A=[],U=new oe;let D=null;const P=new xn;P.viewport=new Lt;const I=new xn;I.viewport=new Lt;const w=[P,I],R=new qS;let F=null,j=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(te){let xe=T[te];return xe===void 0&&(xe=new ph,T[te]=xe),xe.getTargetRaySpace()},this.getControllerGrip=function(te){let xe=T[te];return xe===void 0&&(xe=new ph,T[te]=xe),xe.getGripSpace()},this.getHand=function(te){let xe=T[te];return xe===void 0&&(xe=new ph,T[te]=xe),xe.getHandSpace()};function k(te){const xe=A.indexOf(te.inputSource);if(xe===-1)return;const We=T[xe];We!==void 0&&(We.update(te.inputSource,te.frame,f||l),We.dispatchEvent({type:te.type,data:te.inputSource}))}function J(){i.removeEventListener("select",k),i.removeEventListener("selectstart",k),i.removeEventListener("selectend",k),i.removeEventListener("squeeze",k),i.removeEventListener("squeezestart",k),i.removeEventListener("squeezeend",k),i.removeEventListener("end",J),i.removeEventListener("inputsourceschange",se);for(let te=0;te<T.length;te++){const xe=A[te];xe!==null&&(A[te]=null,T[te].disconnect(xe))}F=null,j=null,M.reset(),e.setRenderTarget(_),v=null,g=null,p=null,i=null,b=null,Je.stop(),n.isPresenting=!1,e.setPixelRatio(D),e.setSize(U.width,U.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(te){r=te,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(te){c=te,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||l},this.setReferenceSpace=function(te){f=te},this.getBaseLayer=function(){return g!==null?g:v},this.getBinding=function(){return p},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=async function(te){if(i=te,i!==null){if(_=e.getRenderTarget(),i.addEventListener("select",k),i.addEventListener("selectstart",k),i.addEventListener("selectend",k),i.addEventListener("squeeze",k),i.addEventListener("squeezestart",k),i.addEventListener("squeezeend",k),i.addEventListener("end",J),i.addEventListener("inputsourceschange",se),S.xrCompatible!==!0&&await t.makeXRCompatible(),D=e.getPixelRatio(),e.getSize(U),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let We=null,De=null,Ge=null;S.depth&&(Ge=S.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,We=S.stencil?La:Yo,De=S.stencil?Na:Rs);const ft={colorFormat:t.RGBA8,depthFormat:Ge,scaleFactor:r};p=new XRWebGLBinding(i,t),g=p.createProjectionLayer(ft),i.updateRenderState({layers:[g]}),e.setPixelRatio(1),e.setSize(g.textureWidth,g.textureHeight,!1),b=new Sn(g.textureWidth,g.textureHeight,{format:jn,type:Bn,depthTexture:new Dc(g.textureWidth,g.textureHeight,De,void 0,void 0,void 0,void 0,void 0,void 0,We),stencilBuffer:S.stencil,colorSpace:e.outputColorSpace,samples:S.antialias?4:0,resolveDepthBuffer:g.ignoreDepthValues===!1,resolveStencilBuffer:g.ignoreDepthValues===!1})}else{const We={antialias:S.antialias,alpha:!0,depth:S.depth,stencil:S.stencil,framebufferScaleFactor:r};v=new XRWebGLLayer(i,t,We),i.updateRenderState({baseLayer:v}),e.setPixelRatio(1),e.setSize(v.framebufferWidth,v.framebufferHeight,!1),b=new Sn(v.framebufferWidth,v.framebufferHeight,{format:jn,type:Bn,colorSpace:e.outputColorSpace,stencilBuffer:S.stencil,resolveDepthBuffer:v.ignoreDepthValues===!1,resolveStencilBuffer:v.ignoreDepthValues===!1})}b.isXRRenderTarget=!0,this.setFoveation(u),f=null,l=await i.requestReferenceSpace(c),Je.setContext(i),Je.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return M.getDepthTexture()};function se(te){for(let xe=0;xe<te.removed.length;xe++){const We=te.removed[xe],De=A.indexOf(We);De>=0&&(A[De]=null,T[De].disconnect(We))}for(let xe=0;xe<te.added.length;xe++){const We=te.added[xe];let De=A.indexOf(We);if(De===-1){for(let ft=0;ft<T.length;ft++)if(ft>=A.length){A.push(We),De=ft;break}else if(A[ft]===null){A[ft]=We,De=ft;break}if(De===-1)break}const Ge=T[De];Ge&&Ge.connect(We)}}const V=new B,$=new B;function W(te,xe,We){V.setFromMatrixPosition(xe.matrixWorld),$.setFromMatrixPosition(We.matrixWorld);const De=V.distanceTo($),Ge=xe.projectionMatrix.elements,ft=We.projectionMatrix.elements,Qe=Ge[14]/(Ge[10]-1),zt=Ge[14]/(Ge[10]+1),yt=(Ge[9]+1)/Ge[5],lt=(Ge[9]-1)/Ge[5],O=(Ge[8]-1)/Ge[0],Te=(ft[8]+1)/ft[0],ge=Qe*O,Ee=Qe*Te,ue=De/(-O+Te),Be=ue*-O;if(xe.matrixWorld.decompose(te.position,te.quaternion,te.scale),te.translateX(Be),te.translateZ(ue),te.matrixWorld.compose(te.position,te.quaternion,te.scale),te.matrixWorldInverse.copy(te.matrixWorld).invert(),Ge[10]===-1)te.projectionMatrix.copy(xe.projectionMatrix),te.projectionMatrixInverse.copy(xe.projectionMatrixInverse);else{const pe=Qe+ue,Oe=zt+ue,ut=ge-Be,z=Ee+(De-Be),C=yt*zt/Oe*pe,Z=lt*zt/Oe*pe;te.projectionMatrix.makePerspective(ut,z,C,Z,pe,Oe),te.projectionMatrixInverse.copy(te.projectionMatrix).invert()}}function le(te,xe){xe===null?te.matrixWorld.copy(te.matrix):te.matrixWorld.multiplyMatrices(xe.matrixWorld,te.matrix),te.matrixWorldInverse.copy(te.matrixWorld).invert()}this.updateCamera=function(te){if(i===null)return;let xe=te.near,We=te.far;M.texture!==null&&(M.depthNear>0&&(xe=M.depthNear),M.depthFar>0&&(We=M.depthFar)),R.near=I.near=P.near=xe,R.far=I.far=P.far=We,(F!==R.near||j!==R.far)&&(i.updateRenderState({depthNear:R.near,depthFar:R.far}),F=R.near,j=R.far),P.layers.mask=te.layers.mask|2,I.layers.mask=te.layers.mask|4,R.layers.mask=P.layers.mask|I.layers.mask;const De=te.parent,Ge=R.cameras;le(R,De);for(let ft=0;ft<Ge.length;ft++)le(Ge[ft],De);Ge.length===2?W(R,P,I):R.projectionMatrix.copy(P.projectionMatrix),me(te,R,De)};function me(te,xe,We){We===null?te.matrix.copy(xe.matrixWorld):(te.matrix.copy(We.matrixWorld),te.matrix.invert(),te.matrix.multiply(xe.matrixWorld)),te.matrix.decompose(te.position,te.quaternion,te.scale),te.updateMatrixWorld(!0),te.projectionMatrix.copy(xe.projectionMatrix),te.projectionMatrixInverse.copy(xe.projectionMatrixInverse),te.isPerspectiveCamera&&(te.fov=Zo*2*Math.atan(1/te.projectionMatrix.elements[5]),te.zoom=1)}this.getCamera=function(){return R},this.getFoveation=function(){if(!(g===null&&v===null))return u},this.setFoveation=function(te){u=te,g!==null&&(g.fixedFoveation=te),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=te)},this.hasDepthSensing=function(){return M.texture!==null},this.getDepthSensingMesh=function(){return M.getMesh(R)};let ye=null;function Pe(te,xe){if(d=xe.getViewerPose(f||l),x=xe,d!==null){const We=d.views;v!==null&&(e.setRenderTargetFramebuffer(b,v.framebuffer),e.setRenderTarget(b));let De=!1;We.length!==R.cameras.length&&(R.cameras.length=0,De=!0);for(let Qe=0;Qe<We.length;Qe++){const zt=We[Qe];let yt=null;if(v!==null)yt=v.getViewport(zt);else{const O=p.getViewSubImage(g,zt);yt=O.viewport,Qe===0&&(e.setRenderTargetTextures(b,O.colorTexture,O.depthStencilTexture),e.setRenderTarget(b))}let lt=w[Qe];lt===void 0&&(lt=new xn,lt.layers.enable(Qe),lt.viewport=new Lt,w[Qe]=lt),lt.matrix.fromArray(zt.transform.matrix),lt.matrix.decompose(lt.position,lt.quaternion,lt.scale),lt.projectionMatrix.fromArray(zt.projectionMatrix),lt.projectionMatrixInverse.copy(lt.projectionMatrix).invert(),lt.viewport.set(yt.x,yt.y,yt.width,yt.height),Qe===0&&(R.matrix.copy(lt.matrix),R.matrix.decompose(R.position,R.quaternion,R.scale)),De===!0&&R.cameras.push(lt)}const Ge=i.enabledFeatures;if(Ge&&Ge.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&p){const Qe=p.getDepthInformation(We[0]);Qe&&Qe.isValid&&Qe.texture&&M.init(e,Qe,i.renderState)}}for(let We=0;We<T.length;We++){const De=A[We],Ge=T[We];De!==null&&Ge!==void 0&&Ge.update(De,xe,f||l)}ye&&ye(te,xe),xe.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:xe}),x=null}const Je=new QS;Je.setAnimationLoop(Pe),this.setAnimationLoop=function(te){ye=te},this.dispose=function(){}}}const ma=new Ui,WD=new it;function qD(s,e){function t(S,_){S.matrixAutoUpdate===!0&&S.updateMatrix(),_.value.copy(S.matrix)}function n(S,_){_.color.getRGB(S.fogColor.value,sS(s)),_.isFog?(S.fogNear.value=_.near,S.fogFar.value=_.far):_.isFogExp2&&(S.fogDensity.value=_.density)}function i(S,_,b,T,A){_.isMeshBasicMaterial||_.isMeshLambertMaterial?r(S,_):_.isMeshToonMaterial?(r(S,_),p(S,_)):_.isMeshPhongMaterial?(r(S,_),d(S,_)):_.isMeshStandardMaterial?(r(S,_),g(S,_),_.isMeshPhysicalMaterial&&v(S,_,A)):_.isMeshMatcapMaterial?(r(S,_),x(S,_)):_.isMeshDepthMaterial?r(S,_):_.isMeshDistanceMaterial?(r(S,_),M(S,_)):_.isMeshNormalMaterial?r(S,_):_.isLineBasicMaterial?(l(S,_),_.isLineDashedMaterial&&c(S,_)):_.isPointsMaterial?u(S,_,b,T):_.isSpriteMaterial?f(S,_):_.isShadowMaterial?(S.color.value.copy(_.color),S.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function r(S,_){S.opacity.value=_.opacity,_.color&&S.diffuse.value.copy(_.color),_.emissive&&S.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(S.map.value=_.map,t(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,t(_.alphaMap,S.alphaMapTransform)),_.bumpMap&&(S.bumpMap.value=_.bumpMap,t(_.bumpMap,S.bumpMapTransform),S.bumpScale.value=_.bumpScale,_.side===En&&(S.bumpScale.value*=-1)),_.normalMap&&(S.normalMap.value=_.normalMap,t(_.normalMap,S.normalMapTransform),S.normalScale.value.copy(_.normalScale),_.side===En&&S.normalScale.value.negate()),_.displacementMap&&(S.displacementMap.value=_.displacementMap,t(_.displacementMap,S.displacementMapTransform),S.displacementScale.value=_.displacementScale,S.displacementBias.value=_.displacementBias),_.emissiveMap&&(S.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,S.emissiveMapTransform)),_.specularMap&&(S.specularMap.value=_.specularMap,t(_.specularMap,S.specularMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest);const b=e.get(_),T=b.envMap,A=b.envMapRotation;T&&(S.envMap.value=T,ma.copy(A),ma.x*=-1,ma.y*=-1,ma.z*=-1,T.isCubeTexture&&T.isRenderTargetTexture===!1&&(ma.y*=-1,ma.z*=-1),S.envMapRotation.value.setFromMatrix4(WD.makeRotationFromEuler(ma)),S.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,S.reflectivity.value=_.reflectivity,S.ior.value=_.ior,S.refractionRatio.value=_.refractionRatio),_.lightMap&&(S.lightMap.value=_.lightMap,S.lightMapIntensity.value=_.lightMapIntensity,t(_.lightMap,S.lightMapTransform)),_.aoMap&&(S.aoMap.value=_.aoMap,S.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,S.aoMapTransform))}function l(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,_.map&&(S.map.value=_.map,t(_.map,S.mapTransform))}function c(S,_){S.dashSize.value=_.dashSize,S.totalSize.value=_.dashSize+_.gapSize,S.scale.value=_.scale}function u(S,_,b,T){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.size.value=_.size*b,S.scale.value=T*.5,_.map&&(S.map.value=_.map,t(_.map,S.uvTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,t(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function f(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.rotation.value=_.rotation,_.map&&(S.map.value=_.map,t(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,t(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function d(S,_){S.specular.value.copy(_.specular),S.shininess.value=Math.max(_.shininess,1e-4)}function p(S,_){_.gradientMap&&(S.gradientMap.value=_.gradientMap)}function g(S,_){S.metalness.value=_.metalness,_.metalnessMap&&(S.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,S.metalnessMapTransform)),S.roughness.value=_.roughness,_.roughnessMap&&(S.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,S.roughnessMapTransform)),_.envMap&&(S.envMapIntensity.value=_.envMapIntensity)}function v(S,_,b){S.ior.value=_.ior,_.sheen>0&&(S.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),S.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(S.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,S.sheenColorMapTransform)),_.sheenRoughnessMap&&(S.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,S.sheenRoughnessMapTransform))),_.clearcoat>0&&(S.clearcoat.value=_.clearcoat,S.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(S.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,S.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(S.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,S.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(S.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,S.clearcoatNormalMapTransform),S.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===En&&S.clearcoatNormalScale.value.negate())),_.dispersion>0&&(S.dispersion.value=_.dispersion),_.iridescence>0&&(S.iridescence.value=_.iridescence,S.iridescenceIOR.value=_.iridescenceIOR,S.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],S.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(S.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,S.iridescenceMapTransform)),_.iridescenceThicknessMap&&(S.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,S.iridescenceThicknessMapTransform))),_.transmission>0&&(S.transmission.value=_.transmission,S.transmissionSamplerMap.value=b.texture,S.transmissionSamplerSize.value.set(b.width,b.height),_.transmissionMap&&(S.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,S.transmissionMapTransform)),S.thickness.value=_.thickness,_.thicknessMap&&(S.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,S.thicknessMapTransform)),S.attenuationDistance.value=_.attenuationDistance,S.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(S.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(S.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,S.anisotropyMapTransform))),S.specularIntensity.value=_.specularIntensity,S.specularColor.value.copy(_.specularColor),_.specularColorMap&&(S.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,S.specularColorMapTransform)),_.specularIntensityMap&&(S.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,S.specularIntensityMapTransform))}function x(S,_){_.matcap&&(S.matcap.value=_.matcap)}function M(S,_){const b=e.get(_).light;S.referencePosition.value.setFromMatrixPosition(b.matrixWorld),S.nearDistance.value=b.shadow.camera.near,S.farDistance.value=b.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function YD(s,e,t,n){let i={},r={},l=[];const c=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function u(b,T){const A=T.program;n.uniformBlockBinding(b,A)}function f(b,T){let A=i[b.id];A===void 0&&(x(b),A=d(b),i[b.id]=A,b.addEventListener("dispose",S));const U=T.program;n.updateUBOMapping(b,U);const D=e.render.frame;r[b.id]!==D&&(g(b),r[b.id]=D)}function d(b){const T=p();b.__bindingPointIndex=T;const A=s.createBuffer(),U=b.__size,D=b.usage;return s.bindBuffer(s.UNIFORM_BUFFER,A),s.bufferData(s.UNIFORM_BUFFER,U,D),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,T,A),A}function p(){for(let b=0;b<c;b++)if(l.indexOf(b)===-1)return l.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(b){const T=i[b.id],A=b.uniforms,U=b.__cache;s.bindBuffer(s.UNIFORM_BUFFER,T);for(let D=0,P=A.length;D<P;D++){const I=Array.isArray(A[D])?A[D]:[A[D]];for(let w=0,R=I.length;w<R;w++){const F=I[w];if(v(F,D,w,U)===!0){const j=F.__offset,k=Array.isArray(F.value)?F.value:[F.value];let J=0;for(let se=0;se<k.length;se++){const V=k[se],$=M(V);typeof V=="number"||typeof V=="boolean"?(F.__data[0]=V,s.bufferSubData(s.UNIFORM_BUFFER,j+J,F.__data)):V.isMatrix3?(F.__data[0]=V.elements[0],F.__data[1]=V.elements[1],F.__data[2]=V.elements[2],F.__data[3]=0,F.__data[4]=V.elements[3],F.__data[5]=V.elements[4],F.__data[6]=V.elements[5],F.__data[7]=0,F.__data[8]=V.elements[6],F.__data[9]=V.elements[7],F.__data[10]=V.elements[8],F.__data[11]=0):(V.toArray(F.__data,J),J+=$.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,j,F.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function v(b,T,A,U){const D=b.value,P=T+"_"+A;if(U[P]===void 0)return typeof D=="number"||typeof D=="boolean"?U[P]=D:U[P]=D.clone(),!0;{const I=U[P];if(typeof D=="number"||typeof D=="boolean"){if(I!==D)return U[P]=D,!0}else if(I.equals(D)===!1)return I.copy(D),!0}return!1}function x(b){const T=b.uniforms;let A=0;const U=16;for(let P=0,I=T.length;P<I;P++){const w=Array.isArray(T[P])?T[P]:[T[P]];for(let R=0,F=w.length;R<F;R++){const j=w[R],k=Array.isArray(j.value)?j.value:[j.value];for(let J=0,se=k.length;J<se;J++){const V=k[J],$=M(V),W=A%U,le=W%$.boundary,me=W+le;A+=le,me!==0&&U-me<$.storage&&(A+=U-me),j.__data=new Float32Array($.storage/Float32Array.BYTES_PER_ELEMENT),j.__offset=A,A+=$.storage}}}const D=A%U;return D>0&&(A+=U-D),b.__size=A,b.__cache={},this}function M(b){const T={boundary:0,storage:0};return typeof b=="number"||typeof b=="boolean"?(T.boundary=4,T.storage=4):b.isVector2?(T.boundary=8,T.storage=8):b.isVector3||b.isColor?(T.boundary=16,T.storage=12):b.isVector4?(T.boundary=16,T.storage=16):b.isMatrix3?(T.boundary=48,T.storage=48):b.isMatrix4?(T.boundary=64,T.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),T}function S(b){const T=b.target;T.removeEventListener("dispose",S);const A=l.indexOf(T.__bindingPointIndex);l.splice(A,1),s.deleteBuffer(i[T.id]),delete i[T.id],delete r[T.id]}function _(){for(const b in i)s.deleteBuffer(i[b]);l=[],i={},r={}}return{bind:u,update:f,dispose:_}}class sM{constructor(e={}){const{canvas:t=tS(),context:n=null,depth:i=!0,stencil:r=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:f=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:p=!1,reverseDepthBuffer:g=!1}=e;this.isWebGLRenderer=!0;let v;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");v=n.getContextAttributes().alpha}else v=l;const x=new Uint32Array(4),M=new Int32Array(4);let S=null,_=null;const b=[],T=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=hs,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const A=this;let U=!1;this._outputColorSpace=kt;let D=0,P=0,I=null,w=-1,R=null;const F=new Lt,j=new Lt;let k=null;const J=new Re(0);let se=0,V=t.width,$=t.height,W=1,le=null,me=null;const ye=new Lt(0,0,V,$),Pe=new Lt(0,0,V,$);let Je=!1;const te=new sl;let xe=!1,We=!1;const De=new it,Ge=new it,ft=new B,Qe=new Lt,zt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let yt=!1;function lt(){return I===null?W:1}let O=n;function Te(N,X){return t.getContext(N,X)}try{const N={alpha:!0,depth:i,stencil:r,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:f,powerPreference:d,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Fa}`),t.addEventListener("webglcontextlost",Ve,!1),t.addEventListener("webglcontextrestored",Se,!1),t.addEventListener("webglcontextcreationerror",he,!1),O===null){const X="webgl2";if(O=Te(X,N),O===null)throw Te(X)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(N){throw console.error("THREE.WebGLRenderer: "+N.message),N}let ge,Ee,ue,Be,pe,Oe,ut,z,C,Z,re,de,ae,je,we,ke,Ke,fe,Ue,et,tt,Ae,st,G;function Le(){ge=new r2(O),ge.init(),Ae=new iM(O,ge),Ee=new QC(O,ge,e,Ae),ue=new FD(O,ge),Ee.reverseDepthBuffer&&g&&ue.buffers.depth.setReversed(!0),Be=new l2(O),pe=new AD,Oe=new HD(O,ge,ue,pe,Ee,Ae,Be),ut=new e2(A),z=new s2(A),C=new pR(O),st=new ZC(O,C),Z=new a2(O,C,Be,st),re=new u2(O,Z,C,Be),Ue=new c2(O,Ee,Oe),ke=new $C(pe),de=new TD(A,ut,z,ge,Ee,st,ke),ae=new qD(A,pe),je=new wD,we=new PD(ge),fe=new jC(A,ut,z,ue,re,v,u),Ke=new BD(A,re,Ee),G=new YD(O,Be,Ee,ue),et=new JC(O,ge,Be),tt=new o2(O,ge,Be),Be.programs=de.programs,A.capabilities=Ee,A.extensions=ge,A.properties=pe,A.renderLists=je,A.shadowMap=Ke,A.state=ue,A.info=Be}Le();const ve=new XD(A,O);this.xr=ve,this.getContext=function(){return O},this.getContextAttributes=function(){return O.getContextAttributes()},this.forceContextLoss=function(){const N=ge.get("WEBGL_lose_context");N&&N.loseContext()},this.forceContextRestore=function(){const N=ge.get("WEBGL_lose_context");N&&N.restoreContext()},this.getPixelRatio=function(){return W},this.setPixelRatio=function(N){N!==void 0&&(W=N,this.setSize(V,$,!1))},this.getSize=function(N){return N.set(V,$)},this.setSize=function(N,X,ee=!0){if(ve.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}V=N,$=X,t.width=Math.floor(N*W),t.height=Math.floor(X*W),ee===!0&&(t.style.width=N+"px",t.style.height=X+"px"),this.setViewport(0,0,N,X)},this.getDrawingBufferSize=function(N){return N.set(V*W,$*W).floor()},this.setDrawingBufferSize=function(N,X,ee){V=N,$=X,W=ee,t.width=Math.floor(N*ee),t.height=Math.floor(X*ee),this.setViewport(0,0,N,X)},this.getCurrentViewport=function(N){return N.copy(F)},this.getViewport=function(N){return N.copy(ye)},this.setViewport=function(N,X,ee,ne){N.isVector4?ye.set(N.x,N.y,N.z,N.w):ye.set(N,X,ee,ne),ue.viewport(F.copy(ye).multiplyScalar(W).round())},this.getScissor=function(N){return N.copy(Pe)},this.setScissor=function(N,X,ee,ne){N.isVector4?Pe.set(N.x,N.y,N.z,N.w):Pe.set(N,X,ee,ne),ue.scissor(j.copy(Pe).multiplyScalar(W).round())},this.getScissorTest=function(){return Je},this.setScissorTest=function(N){ue.setScissorTest(Je=N)},this.setOpaqueSort=function(N){le=N},this.setTransparentSort=function(N){me=N},this.getClearColor=function(N){return N.copy(fe.getClearColor())},this.setClearColor=function(){fe.setClearColor(...arguments)},this.getClearAlpha=function(){return fe.getClearAlpha()},this.setClearAlpha=function(){fe.setClearAlpha(...arguments)},this.clear=function(N=!0,X=!0,ee=!0){let ne=0;if(N){let q=!1;if(I!==null){const _e=I.texture.format;q=_e===vf||_e===gf||_e===Tc}if(q){const _e=I.texture.type,Ce=_e===Bn||_e===Rs||_e===qo||_e===Na||_e===df||_e===pf,Xe=fe.getClearColor(),Fe=fe.getClearAlpha(),rt=Xe.r,ot=Xe.g,Ze=Xe.b;Ce?(x[0]=rt,x[1]=ot,x[2]=Ze,x[3]=Fe,O.clearBufferuiv(O.COLOR,0,x)):(M[0]=rt,M[1]=ot,M[2]=Ze,M[3]=Fe,O.clearBufferiv(O.COLOR,0,M))}else ne|=O.COLOR_BUFFER_BIT}X&&(ne|=O.DEPTH_BUFFER_BIT),ee&&(ne|=O.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),O.clear(ne)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ve,!1),t.removeEventListener("webglcontextrestored",Se,!1),t.removeEventListener("webglcontextcreationerror",he,!1),fe.dispose(),je.dispose(),we.dispose(),pe.dispose(),ut.dispose(),z.dispose(),re.dispose(),st.dispose(),G.dispose(),de.dispose(),ve.dispose(),ve.removeEventListener("sessionstart",ul),ve.removeEventListener("sessionend",ka),Qi.stop()};function Ve(N){N.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),U=!0}function Se(){console.log("THREE.WebGLRenderer: Context Restored."),U=!1;const N=Be.autoReset,X=Ke.enabled,ee=Ke.autoUpdate,ne=Ke.needsUpdate,q=Ke.type;Le(),Be.autoReset=N,Ke.enabled=X,Ke.autoUpdate=ee,Ke.needsUpdate=ne,Ke.type=q}function he(N){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",N.statusMessage)}function qe(N){const X=N.target;X.removeEventListener("dispose",qe),at(X)}function at(N){Ft(N),pe.remove(N)}function Ft(N){const X=pe.get(N).programs;X!==void 0&&(X.forEach(function(ee){de.releaseProgram(ee)}),N.isShaderMaterial&&de.releaseShaderCache(N))}this.renderBufferDirect=function(N,X,ee,ne,q,_e){X===null&&(X=zt);const Ce=q.isMesh&&q.matrixWorld.determinant()<0,Xe=Bc(N,X,ee,ne,q);ue.setMaterial(ne,Ce);let Fe=ee.index,rt=1;if(ne.wireframe===!0){if(Fe=Z.getWireframeAttribute(ee),Fe===void 0)return;rt=2}const ot=ee.drawRange,Ze=ee.attributes.position;let xt=ot.start*rt,Ht=(ot.start+ot.count)*rt;_e!==null&&(xt=Math.max(xt,_e.start*rt),Ht=Math.min(Ht,(_e.start+_e.count)*rt)),Fe!==null?(xt=Math.max(xt,0),Ht=Math.min(Ht,Fe.count)):Ze!=null&&(xt=Math.max(xt,0),Ht=Math.min(Ht,Ze.count));const sn=Ht-xt;if(sn<0||sn===1/0)return;st.setup(q,ne,Xe,ee,Fe);let Xt,Gt=et;if(Fe!==null&&(Xt=C.get(Fe),Gt=tt,Gt.setIndex(Xt)),q.isMesh)ne.wireframe===!0?(ue.setLineWidth(ne.wireframeLinewidth*lt()),Gt.setMode(O.LINES)):Gt.setMode(O.TRIANGLES);else if(q.isLine){let nt=ne.linewidth;nt===void 0&&(nt=1),ue.setLineWidth(nt*lt()),q.isLineSegments?Gt.setMode(O.LINES):q.isLineLoop?Gt.setMode(O.LINE_LOOP):Gt.setMode(O.LINE_STRIP)}else q.isPoints?Gt.setMode(O.POINTS):q.isSprite&&Gt.setMode(O.TRIANGLES);if(q.isBatchedMesh)if(q._multiDrawInstances!==null)Go("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Gt.renderMultiDrawInstances(q._multiDrawStarts,q._multiDrawCounts,q._multiDrawCount,q._multiDrawInstances);else if(ge.get("WEBGL_multi_draw"))Gt.renderMultiDraw(q._multiDrawStarts,q._multiDrawCounts,q._multiDrawCount);else{const nt=q._multiDrawStarts,$t=q._multiDrawCounts,Rt=q._multiDrawCount,Fn=Fe?C.get(Fe).bytesPerElement:1,gs=pe.get(ne).currentProgram.getUniforms();for(let Hn=0;Hn<Rt;Hn++)gs.setValue(O,"_gl_DrawID",Hn),Gt.render(nt[Hn]/Fn,$t[Hn])}else if(q.isInstancedMesh)Gt.renderInstances(xt,sn,q.count);else if(ee.isInstancedBufferGeometry){const nt=ee._maxInstanceCount!==void 0?ee._maxInstanceCount:1/0,$t=Math.min(ee.instanceCount,nt);Gt.renderInstances(xt,sn,$t)}else Gt.render(xt,sn)};function Ct(N,X,ee){N.transparent===!0&&N.side===ri&&N.forceSinglePass===!1?(N.side=En,N.needsUpdate=!0,Qt(N,X,ee),N.side=fs,N.needsUpdate=!0,Qt(N,X,ee),N.side=ri):Qt(N,X,ee)}this.compile=function(N,X,ee=null){ee===null&&(ee=N),_=we.get(ee),_.init(X),T.push(_),ee.traverseVisible(function(q){q.isLight&&q.layers.test(X.layers)&&(_.pushLight(q),q.castShadow&&_.pushShadow(q))}),N!==ee&&N.traverseVisible(function(q){q.isLight&&q.layers.test(X.layers)&&(_.pushLight(q),q.castShadow&&_.pushShadow(q))}),_.setupLights();const ne=new Set;return N.traverse(function(q){if(!(q.isMesh||q.isPoints||q.isLine||q.isSprite))return;const _e=q.material;if(_e)if(Array.isArray(_e))for(let Ce=0;Ce<_e.length;Ce++){const Xe=_e[Ce];Ct(Xe,ee,q),ne.add(Xe)}else Ct(_e,ee,q),ne.add(_e)}),_=T.pop(),ne},this.compileAsync=function(N,X,ee=null){const ne=this.compile(N,X,ee);return new Promise(q=>{function _e(){if(ne.forEach(function(Ce){pe.get(Ce).currentProgram.isReady()&&ne.delete(Ce)}),ne.size===0){q(N);return}setTimeout(_e,10)}ge.get("KHR_parallel_shader_compile")!==null?_e():setTimeout(_e,10)})};let li=null;function Oi(N){li&&li(N)}function ul(){Qi.stop()}function ka(){Qi.start()}const Qi=new QS;Qi.setAnimationLoop(Oi),typeof self<"u"&&Qi.setContext(self),this.setAnimationLoop=function(N){li=N,ve.setAnimationLoop(N),N===null?Qi.stop():Qi.start()},ve.addEventListener("sessionstart",ul),ve.addEventListener("sessionend",ka),this.render=function(N,X){if(X!==void 0&&X.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(U===!0)return;if(N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),X.parent===null&&X.matrixWorldAutoUpdate===!0&&X.updateMatrixWorld(),ve.enabled===!0&&ve.isPresenting===!0&&(ve.cameraAutoUpdate===!0&&ve.updateCamera(X),X=ve.getCamera()),N.isScene===!0&&N.onBeforeRender(A,N,X,I),_=we.get(N,T.length),_.init(X),T.push(_),Ge.multiplyMatrices(X.projectionMatrix,X.matrixWorldInverse),te.setFromProjectionMatrix(Ge),We=this.localClippingEnabled,xe=ke.init(this.clippingPlanes,We),S=je.get(N,b.length),S.init(),b.push(S),ve.enabled===!0&&ve.isPresenting===!0){const _e=A.xr.getDepthSensingMesh();_e!==null&&Bi(_e,X,-1/0,A.sortObjects)}Bi(N,X,0,A.sortObjects),S.finish(),A.sortObjects===!0&&S.sort(le,me),yt=ve.enabled===!1||ve.isPresenting===!1||ve.hasDepthSensing()===!1,yt&&fe.addToRenderList(S,N),this.info.render.frame++,xe===!0&&ke.beginShadows();const ee=_.state.shadowsArray;Ke.render(ee,N,X),xe===!0&&ke.endShadows(),this.info.autoReset===!0&&this.info.reset();const ne=S.opaque,q=S.transmissive;if(_.setupLights(),X.isArrayCamera){const _e=X.cameras;if(q.length>0)for(let Ce=0,Xe=_e.length;Ce<Xe;Ce++){const Fe=_e[Ce];$i(ne,q,N,Fe)}yt&&fe.render(N);for(let Ce=0,Xe=_e.length;Ce<Xe;Ce++){const Fe=_e[Ce];hl(S,N,Fe,Fe.viewport)}}else q.length>0&&$i(ne,q,N,X),yt&&fe.render(N),hl(S,N,X);I!==null&&P===0&&(Oe.updateMultisampleRenderTarget(I),Oe.updateRenderTargetMipmap(I)),N.isScene===!0&&N.onAfterRender(A,N,X),st.resetDefaultState(),w=-1,R=null,T.pop(),T.length>0?(_=T[T.length-1],xe===!0&&ke.setGlobalState(A.clippingPlanes,_.state.camera)):_=null,b.pop(),b.length>0?S=b[b.length-1]:S=null};function Bi(N,X,ee,ne){if(N.visible===!1)return;if(N.layers.test(X.layers)){if(N.isGroup)ee=N.renderOrder;else if(N.isLOD)N.autoUpdate===!0&&N.update(X);else if(N.isLight)_.pushLight(N),N.castShadow&&_.pushShadow(N);else if(N.isSprite){if(!N.frustumCulled||te.intersectsSprite(N)){ne&&Qe.setFromMatrixPosition(N.matrixWorld).applyMatrix4(Ge);const Ce=re.update(N),Xe=N.material;Xe.visible&&S.push(N,Ce,Xe,ee,Qe.z,null)}}else if((N.isMesh||N.isLine||N.isPoints)&&(!N.frustumCulled||te.intersectsObject(N))){const Ce=re.update(N),Xe=N.material;if(ne&&(N.boundingSphere!==void 0?(N.boundingSphere===null&&N.computeBoundingSphere(),Qe.copy(N.boundingSphere.center)):(Ce.boundingSphere===null&&Ce.computeBoundingSphere(),Qe.copy(Ce.boundingSphere.center)),Qe.applyMatrix4(N.matrixWorld).applyMatrix4(Ge)),Array.isArray(Xe)){const Fe=Ce.groups;for(let rt=0,ot=Fe.length;rt<ot;rt++){const Ze=Fe[rt],xt=Xe[Ze.materialIndex];xt&&xt.visible&&S.push(N,Ce,xt,ee,Qe.z,Ze)}}else Xe.visible&&S.push(N,Ce,Xe,ee,Qe.z,null)}}const _e=N.children;for(let Ce=0,Xe=_e.length;Ce<Xe;Ce++)Bi(_e[Ce],X,ee,ne)}function hl(N,X,ee,ne){const q=N.opaque,_e=N.transmissive,Ce=N.transparent;_.setupLightsView(ee),xe===!0&&ke.setGlobalState(A.clippingPlanes,ee),ne&&ue.viewport(F.copy(ne)),q.length>0&&ci(q,X,ee),_e.length>0&&ci(_e,X,ee),Ce.length>0&&ci(Ce,X,ee),ue.buffers.depth.setTest(!0),ue.buffers.depth.setMask(!0),ue.buffers.color.setMask(!0),ue.setPolygonOffset(!1)}function $i(N,X,ee,ne){if((ee.isScene===!0?ee.overrideMaterial:null)!==null)return;_.state.transmissionRenderTarget[ne.id]===void 0&&(_.state.transmissionRenderTarget[ne.id]=new Sn(1,1,{generateMipmaps:!0,type:ge.has("EXT_color_buffer_half_float")||ge.has("EXT_color_buffer_float")?Lr:Bn,minFilter:Di,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:bt.workingColorSpace}));const _e=_.state.transmissionRenderTarget[ne.id],Ce=ne.viewport||F;_e.setSize(Ce.z*A.transmissionResolutionScale,Ce.w*A.transmissionResolutionScale);const Xe=A.getRenderTarget(),Fe=A.getActiveCubeFace(),rt=A.getActiveMipmapLevel();A.setRenderTarget(_e),A.getClearColor(J),se=A.getClearAlpha(),se<1&&A.setClearColor(16777215,.5),A.clear(),yt&&fe.render(ee);const ot=A.toneMapping;A.toneMapping=hs;const Ze=ne.viewport;if(ne.viewport!==void 0&&(ne.viewport=void 0),_.setupLightsView(ne),xe===!0&&ke.setGlobalState(A.clippingPlanes,ne),ci(N,ee,ne),Oe.updateMultisampleRenderTarget(_e),Oe.updateRenderTargetMipmap(_e),ge.has("WEBGL_multisampled_render_to_texture")===!1){let xt=!1;for(let Ht=0,sn=X.length;Ht<sn;Ht++){const Xt=X[Ht],Gt=Xt.object,nt=Xt.geometry,$t=Xt.material,Rt=Xt.group;if($t.side===ri&&Gt.layers.test(ne.layers)){const Fn=$t.side;$t.side=En,$t.needsUpdate=!0,Br(Gt,ee,ne,nt,$t,Rt),$t.side=Fn,$t.needsUpdate=!0,xt=!0}}xt===!0&&(Oe.updateMultisampleRenderTarget(_e),Oe.updateRenderTargetMipmap(_e))}A.setRenderTarget(Xe,Fe,rt),A.setClearColor(J,se),Ze!==void 0&&(ne.viewport=Ze),A.toneMapping=ot}function ci(N,X,ee){const ne=X.isScene===!0?X.overrideMaterial:null;for(let q=0,_e=N.length;q<_e;q++){const Ce=N[q],Xe=Ce.object,Fe=Ce.geometry,rt=Ce.group;let ot=Ce.material;ot.allowOverride===!0&&ne!==null&&(ot=ne),Xe.layers.test(ee.layers)&&Br(Xe,X,ee,Fe,ot,rt)}}function Br(N,X,ee,ne,q,_e){N.onBeforeRender(A,X,ee,ne,q,_e),N.modelViewMatrix.multiplyMatrices(ee.matrixWorldInverse,N.matrixWorld),N.normalMatrix.getNormalMatrix(N.modelViewMatrix),q.onBeforeRender(A,X,ee,ne,N,_e),q.transparent===!0&&q.side===ri&&q.forceSinglePass===!1?(q.side=En,q.needsUpdate=!0,A.renderBufferDirect(ee,X,ne,q,N,_e),q.side=fs,q.needsUpdate=!0,A.renderBufferDirect(ee,X,ne,q,N,_e),q.side=ri):A.renderBufferDirect(ee,X,ne,q,N,_e),N.onAfterRender(A,X,ee,ne,q,_e)}function Qt(N,X,ee){X.isScene!==!0&&(X=zt);const ne=pe.get(N),q=_.state.lights,_e=_.state.shadowsArray,Ce=q.state.version,Xe=de.getParameters(N,q.state,_e,X,ee),Fe=de.getProgramCacheKey(Xe);let rt=ne.programs;ne.environment=N.isMeshStandardMaterial?X.environment:null,ne.fog=X.fog,ne.envMap=(N.isMeshStandardMaterial?z:ut).get(N.envMap||ne.environment),ne.envMapRotation=ne.environment!==null&&N.envMap===null?X.environmentRotation:N.envMapRotation,rt===void 0&&(N.addEventListener("dispose",qe),rt=new Map,ne.programs=rt);let ot=rt.get(Fe);if(ot!==void 0){if(ne.currentProgram===ot&&ne.lightsStateVersion===Ce)return Wa(N,Xe),ot}else Xe.uniforms=de.getUniforms(N),N.onBeforeCompile(Xe,A),ot=de.acquireProgram(Xe,Fe),rt.set(Fe,ot),ne.uniforms=Xe.uniforms;const Ze=ne.uniforms;return(!N.isShaderMaterial&&!N.isRawShaderMaterial||N.clipping===!0)&&(Ze.clippingPlanes=ke.uniform),Wa(N,Xe),ne.needsLights=kf(N),ne.lightsStateVersion=Ce,ne.needsLights&&(Ze.ambientLightColor.value=q.state.ambient,Ze.lightProbe.value=q.state.probe,Ze.directionalLights.value=q.state.directional,Ze.directionalLightShadows.value=q.state.directionalShadow,Ze.spotLights.value=q.state.spot,Ze.spotLightShadows.value=q.state.spotShadow,Ze.rectAreaLights.value=q.state.rectArea,Ze.ltc_1.value=q.state.rectAreaLTC1,Ze.ltc_2.value=q.state.rectAreaLTC2,Ze.pointLights.value=q.state.point,Ze.pointLightShadows.value=q.state.pointShadow,Ze.hemisphereLights.value=q.state.hemi,Ze.directionalShadowMap.value=q.state.directionalShadowMap,Ze.directionalShadowMatrix.value=q.state.directionalShadowMatrix,Ze.spotShadowMap.value=q.state.spotShadowMap,Ze.spotLightMatrix.value=q.state.spotLightMatrix,Ze.spotLightMap.value=q.state.spotLightMap,Ze.pointShadowMap.value=q.state.pointShadowMap,Ze.pointShadowMatrix.value=q.state.pointShadowMatrix),ne.currentProgram=ot,ne.uniformsList=null,ot}function Xa(N){if(N.uniformsList===null){const X=N.currentProgram.getUniforms();N.uniformsList=mh.seqWithValue(X.seq,N.uniforms)}return N.uniformsList}function Wa(N,X){const ee=pe.get(N);ee.outputColorSpace=X.outputColorSpace,ee.batching=X.batching,ee.batchingColor=X.batchingColor,ee.instancing=X.instancing,ee.instancingColor=X.instancingColor,ee.instancingMorph=X.instancingMorph,ee.skinning=X.skinning,ee.morphTargets=X.morphTargets,ee.morphNormals=X.morphNormals,ee.morphColors=X.morphColors,ee.morphTargetsCount=X.morphTargetsCount,ee.numClippingPlanes=X.numClippingPlanes,ee.numIntersection=X.numClipIntersection,ee.vertexAlphas=X.vertexAlphas,ee.vertexTangents=X.vertexTangents,ee.toneMapping=X.toneMapping}function Bc(N,X,ee,ne,q){X.isScene!==!0&&(X=zt),Oe.resetTextureUnits();const _e=X.fog,Ce=ne.isMeshStandardMaterial?X.environment:null,Xe=I===null?A.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:bn,Fe=(ne.isMeshStandardMaterial?z:ut).get(ne.envMap||Ce),rt=ne.vertexColors===!0&&!!ee.attributes.color&&ee.attributes.color.itemSize===4,ot=!!ee.attributes.tangent&&(!!ne.normalMap||ne.anisotropy>0),Ze=!!ee.morphAttributes.position,xt=!!ee.morphAttributes.normal,Ht=!!ee.morphAttributes.color;let sn=hs;ne.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(sn=A.toneMapping);const Xt=ee.morphAttributes.position||ee.morphAttributes.normal||ee.morphAttributes.color,Gt=Xt!==void 0?Xt.length:0,nt=pe.get(ne),$t=_.state.lights;if(xe===!0&&(We===!0||N!==R)){const Ln=N===R&&ne.id===w;ke.setState(ne,N,Ln)}let Rt=!1;ne.version===nt.__version?(nt.needsLights&&nt.lightsStateVersion!==$t.state.version||nt.outputColorSpace!==Xe||q.isBatchedMesh&&nt.batching===!1||!q.isBatchedMesh&&nt.batching===!0||q.isBatchedMesh&&nt.batchingColor===!0&&q.colorTexture===null||q.isBatchedMesh&&nt.batchingColor===!1&&q.colorTexture!==null||q.isInstancedMesh&&nt.instancing===!1||!q.isInstancedMesh&&nt.instancing===!0||q.isSkinnedMesh&&nt.skinning===!1||!q.isSkinnedMesh&&nt.skinning===!0||q.isInstancedMesh&&nt.instancingColor===!0&&q.instanceColor===null||q.isInstancedMesh&&nt.instancingColor===!1&&q.instanceColor!==null||q.isInstancedMesh&&nt.instancingMorph===!0&&q.morphTexture===null||q.isInstancedMesh&&nt.instancingMorph===!1&&q.morphTexture!==null||nt.envMap!==Fe||ne.fog===!0&&nt.fog!==_e||nt.numClippingPlanes!==void 0&&(nt.numClippingPlanes!==ke.numPlanes||nt.numIntersection!==ke.numIntersection)||nt.vertexAlphas!==rt||nt.vertexTangents!==ot||nt.morphTargets!==Ze||nt.morphNormals!==xt||nt.morphColors!==Ht||nt.toneMapping!==sn||nt.morphTargetsCount!==Gt)&&(Rt=!0):(Rt=!0,nt.__version=ne.version);let Fn=nt.currentProgram;Rt===!0&&(Fn=Qt(ne,X,q));let gs=!1,Hn=!1,$s=!1;const Zt=Fn.getUniforms(),Qn=nt.uniforms;if(ue.useProgram(Fn.program)&&(gs=!0,Hn=!0,$s=!0),ne.id!==w&&(w=ne.id,Hn=!0),gs||R!==N){ue.buffers.depth.getReversed()?(De.copy(N.projectionMatrix),OT(De),BT(De),Zt.setValue(O,"projectionMatrix",De)):Zt.setValue(O,"projectionMatrix",N.projectionMatrix),Zt.setValue(O,"viewMatrix",N.matrixWorldInverse);const Un=Zt.map.cameraPosition;Un!==void 0&&Un.setValue(O,ft.setFromMatrixPosition(N.matrixWorld)),Ee.logarithmicDepthBuffer&&Zt.setValue(O,"logDepthBufFC",2/(Math.log(N.far+1)/Math.LN2)),(ne.isMeshPhongMaterial||ne.isMeshToonMaterial||ne.isMeshLambertMaterial||ne.isMeshBasicMaterial||ne.isMeshStandardMaterial||ne.isShaderMaterial)&&Zt.setValue(O,"isOrthographic",N.isOrthographicCamera===!0),R!==N&&(R=N,Hn=!0,$s=!0)}if(q.isSkinnedMesh){Zt.setOptional(O,q,"bindMatrix"),Zt.setOptional(O,q,"bindMatrixInverse");const Ln=q.skeleton;Ln&&(Ln.boneTexture===null&&Ln.computeBoneTexture(),Zt.setValue(O,"boneTexture",Ln.boneTexture,Oe))}q.isBatchedMesh&&(Zt.setOptional(O,q,"batchingTexture"),Zt.setValue(O,"batchingTexture",q._matricesTexture,Oe),Zt.setOptional(O,q,"batchingIdTexture"),Zt.setValue(O,"batchingIdTexture",q._indirectTexture,Oe),Zt.setOptional(O,q,"batchingColorTexture"),q._colorsTexture!==null&&Zt.setValue(O,"batchingColorTexture",q._colorsTexture,Oe));const $n=ee.morphAttributes;if(($n.position!==void 0||$n.normal!==void 0||$n.color!==void 0)&&Ue.update(q,ee,Fn),(Hn||nt.receiveShadow!==q.receiveShadow)&&(nt.receiveShadow=q.receiveShadow,Zt.setValue(O,"receiveShadow",q.receiveShadow)),ne.isMeshGouraudMaterial&&ne.envMap!==null&&(Qn.envMap.value=Fe,Qn.flipEnvMap.value=Fe.isCubeTexture&&Fe.isRenderTargetTexture===!1?-1:1),ne.isMeshStandardMaterial&&ne.envMap===null&&X.environment!==null&&(Qn.envMapIntensity.value=X.environmentIntensity),Hn&&(Zt.setValue(O,"toneMappingExposure",A.toneMappingExposure),nt.needsLights&&zc(Qn,$s),_e&&ne.fog===!0&&ae.refreshFogUniforms(Qn,_e),ae.refreshMaterialUniforms(Qn,ne,W,$,_.state.transmissionRenderTarget[N.id]),mh.upload(O,Xa(nt),Qn,Oe)),ne.isShaderMaterial&&ne.uniformsNeedUpdate===!0&&(mh.upload(O,Xa(nt),Qn,Oe),ne.uniformsNeedUpdate=!1),ne.isSpriteMaterial&&Zt.setValue(O,"center",q.center),Zt.setValue(O,"modelViewMatrix",q.modelViewMatrix),Zt.setValue(O,"normalMatrix",q.normalMatrix),Zt.setValue(O,"modelMatrix",q.matrixWorld),ne.isShaderMaterial||ne.isRawShaderMaterial){const Ln=ne.uniformsGroups;for(let Un=0,vs=Ln.length;Un<vs;Un++){const _s=Ln[Un];G.update(_s,Fn),G.bind(_s,Fn)}}return Fn}function zc(N,X){N.ambientLightColor.needsUpdate=X,N.lightProbe.needsUpdate=X,N.directionalLights.needsUpdate=X,N.directionalLightShadows.needsUpdate=X,N.pointLights.needsUpdate=X,N.pointLightShadows.needsUpdate=X,N.spotLights.needsUpdate=X,N.spotLightShadows.needsUpdate=X,N.rectAreaLights.needsUpdate=X,N.hemisphereLights.needsUpdate=X}function kf(N){return N.isMeshLambertMaterial||N.isMeshToonMaterial||N.isMeshPhongMaterial||N.isMeshStandardMaterial||N.isShadowMaterial||N.isShaderMaterial&&N.lights===!0}this.getActiveCubeFace=function(){return D},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(N,X,ee){const ne=pe.get(N);ne.__autoAllocateDepthBuffer=N.resolveDepthBuffer===!1,ne.__autoAllocateDepthBuffer===!1&&(ne.__useRenderToTexture=!1),pe.get(N.texture).__webglTexture=X,pe.get(N.depthTexture).__webglTexture=ne.__autoAllocateDepthBuffer?void 0:ee,ne.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(N,X){const ee=pe.get(N);ee.__webglFramebuffer=X,ee.__useDefaultFramebuffer=X===void 0};const fl=O.createFramebuffer();this.setRenderTarget=function(N,X=0,ee=0){I=N,D=X,P=ee;let ne=!0,q=null,_e=!1,Ce=!1;if(N){const Fe=pe.get(N);if(Fe.__useDefaultFramebuffer!==void 0)ue.bindFramebuffer(O.FRAMEBUFFER,null),ne=!1;else if(Fe.__webglFramebuffer===void 0)Oe.setupRenderTarget(N);else if(Fe.__hasExternalTextures)Oe.rebindTextures(N,pe.get(N.texture).__webglTexture,pe.get(N.depthTexture).__webglTexture);else if(N.depthBuffer){const Ze=N.depthTexture;if(Fe.__boundDepthTexture!==Ze){if(Ze!==null&&pe.has(Ze)&&(N.width!==Ze.image.width||N.height!==Ze.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");Oe.setupDepthRenderbuffer(N)}}const rt=N.texture;(rt.isData3DTexture||rt.isDataArrayTexture||rt.isCompressedArrayTexture)&&(Ce=!0);const ot=pe.get(N).__webglFramebuffer;N.isWebGLCubeRenderTarget?(Array.isArray(ot[X])?q=ot[X][ee]:q=ot[X],_e=!0):N.samples>0&&Oe.useMultisampledRTT(N)===!1?q=pe.get(N).__webglMultisampledFramebuffer:Array.isArray(ot)?q=ot[ee]:q=ot,F.copy(N.viewport),j.copy(N.scissor),k=N.scissorTest}else F.copy(ye).multiplyScalar(W).floor(),j.copy(Pe).multiplyScalar(W).floor(),k=Je;if(ee!==0&&(q=fl),ue.bindFramebuffer(O.FRAMEBUFFER,q)&&ne&&ue.drawBuffers(N,q),ue.viewport(F),ue.scissor(j),ue.setScissorTest(k),_e){const Fe=pe.get(N.texture);O.framebufferTexture2D(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_CUBE_MAP_POSITIVE_X+X,Fe.__webglTexture,ee)}else if(Ce){const Fe=pe.get(N.texture),rt=X;O.framebufferTextureLayer(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,Fe.__webglTexture,ee,rt)}else if(N!==null&&ee!==0){const Fe=pe.get(N.texture);O.framebufferTexture2D(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,Fe.__webglTexture,ee)}w=-1},this.readRenderTargetPixels=function(N,X,ee,ne,q,_e,Ce,Xe=0){if(!(N&&N.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Fe=pe.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&Ce!==void 0&&(Fe=Fe[Ce]),Fe){ue.bindFramebuffer(O.FRAMEBUFFER,Fe);try{const rt=N.textures[Xe],ot=rt.format,Ze=rt.type;if(!Ee.textureFormatReadable(ot)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Ee.textureTypeReadable(Ze)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}X>=0&&X<=N.width-ne&&ee>=0&&ee<=N.height-q&&(N.textures.length>1&&O.readBuffer(O.COLOR_ATTACHMENT0+Xe),O.readPixels(X,ee,ne,q,Ae.convert(ot),Ae.convert(Ze),_e))}finally{const rt=I!==null?pe.get(I).__webglFramebuffer:null;ue.bindFramebuffer(O.FRAMEBUFFER,rt)}}},this.readRenderTargetPixelsAsync=async function(N,X,ee,ne,q,_e,Ce,Xe=0){if(!(N&&N.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Fe=pe.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&Ce!==void 0&&(Fe=Fe[Ce]),Fe)if(X>=0&&X<=N.width-ne&&ee>=0&&ee<=N.height-q){ue.bindFramebuffer(O.FRAMEBUFFER,Fe);const rt=N.textures[Xe],ot=rt.format,Ze=rt.type;if(!Ee.textureFormatReadable(ot))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Ee.textureTypeReadable(Ze))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const xt=O.createBuffer();O.bindBuffer(O.PIXEL_PACK_BUFFER,xt),O.bufferData(O.PIXEL_PACK_BUFFER,_e.byteLength,O.STREAM_READ),N.textures.length>1&&O.readBuffer(O.COLOR_ATTACHMENT0+Xe),O.readPixels(X,ee,ne,q,Ae.convert(ot),Ae.convert(Ze),0);const Ht=I!==null?pe.get(I).__webglFramebuffer:null;ue.bindFramebuffer(O.FRAMEBUFFER,Ht);const sn=O.fenceSync(O.SYNC_GPU_COMMANDS_COMPLETE,0);return O.flush(),await IT(O,sn,4),O.bindBuffer(O.PIXEL_PACK_BUFFER,xt),O.getBufferSubData(O.PIXEL_PACK_BUFFER,0,_e),O.deleteBuffer(xt),O.deleteSync(sn),_e}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(N,X=null,ee=0){const ne=Math.pow(2,-ee),q=Math.floor(N.image.width*ne),_e=Math.floor(N.image.height*ne),Ce=X!==null?X.x:0,Xe=X!==null?X.y:0;Oe.setTexture2D(N,0),O.copyTexSubImage2D(O.TEXTURE_2D,ee,0,0,Ce,Xe,q,_e),ue.unbindTexture()};const dl=O.createFramebuffer(),pl=O.createFramebuffer();this.copyTextureToTexture=function(N,X,ee=null,ne=null,q=0,_e=null){_e===null&&(q!==0?(Go("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),_e=q,q=0):_e=0);let Ce,Xe,Fe,rt,ot,Ze,xt,Ht,sn;const Xt=N.isCompressedTexture?N.mipmaps[_e]:N.image;if(ee!==null)Ce=ee.max.x-ee.min.x,Xe=ee.max.y-ee.min.y,Fe=ee.isBox3?ee.max.z-ee.min.z:1,rt=ee.min.x,ot=ee.min.y,Ze=ee.isBox3?ee.min.z:0;else{const $n=Math.pow(2,-q);Ce=Math.floor(Xt.width*$n),Xe=Math.floor(Xt.height*$n),N.isDataArrayTexture?Fe=Xt.depth:N.isData3DTexture?Fe=Math.floor(Xt.depth*$n):Fe=1,rt=0,ot=0,Ze=0}ne!==null?(xt=ne.x,Ht=ne.y,sn=ne.z):(xt=0,Ht=0,sn=0);const Gt=Ae.convert(X.format),nt=Ae.convert(X.type);let $t;X.isData3DTexture?(Oe.setTexture3D(X,0),$t=O.TEXTURE_3D):X.isDataArrayTexture||X.isCompressedArrayTexture?(Oe.setTexture2DArray(X,0),$t=O.TEXTURE_2D_ARRAY):(Oe.setTexture2D(X,0),$t=O.TEXTURE_2D),O.pixelStorei(O.UNPACK_FLIP_Y_WEBGL,X.flipY),O.pixelStorei(O.UNPACK_PREMULTIPLY_ALPHA_WEBGL,X.premultiplyAlpha),O.pixelStorei(O.UNPACK_ALIGNMENT,X.unpackAlignment);const Rt=O.getParameter(O.UNPACK_ROW_LENGTH),Fn=O.getParameter(O.UNPACK_IMAGE_HEIGHT),gs=O.getParameter(O.UNPACK_SKIP_PIXELS),Hn=O.getParameter(O.UNPACK_SKIP_ROWS),$s=O.getParameter(O.UNPACK_SKIP_IMAGES);O.pixelStorei(O.UNPACK_ROW_LENGTH,Xt.width),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,Xt.height),O.pixelStorei(O.UNPACK_SKIP_PIXELS,rt),O.pixelStorei(O.UNPACK_SKIP_ROWS,ot),O.pixelStorei(O.UNPACK_SKIP_IMAGES,Ze);const Zt=N.isDataArrayTexture||N.isData3DTexture,Qn=X.isDataArrayTexture||X.isData3DTexture;if(N.isDepthTexture){const $n=pe.get(N),Ln=pe.get(X),Un=pe.get($n.__renderTarget),vs=pe.get(Ln.__renderTarget);ue.bindFramebuffer(O.READ_FRAMEBUFFER,Un.__webglFramebuffer),ue.bindFramebuffer(O.DRAW_FRAMEBUFFER,vs.__webglFramebuffer);for(let _s=0;_s<Fe;_s++)Zt&&(O.framebufferTextureLayer(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,pe.get(N).__webglTexture,q,Ze+_s),O.framebufferTextureLayer(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,pe.get(X).__webglTexture,_e,sn+_s)),O.blitFramebuffer(rt,ot,Ce,Xe,xt,Ht,Ce,Xe,O.DEPTH_BUFFER_BIT,O.NEAREST);ue.bindFramebuffer(O.READ_FRAMEBUFFER,null),ue.bindFramebuffer(O.DRAW_FRAMEBUFFER,null)}else if(q!==0||N.isRenderTargetTexture||pe.has(N)){const $n=pe.get(N),Ln=pe.get(X);ue.bindFramebuffer(O.READ_FRAMEBUFFER,dl),ue.bindFramebuffer(O.DRAW_FRAMEBUFFER,pl);for(let Un=0;Un<Fe;Un++)Zt?O.framebufferTextureLayer(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,$n.__webglTexture,q,Ze+Un):O.framebufferTexture2D(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,$n.__webglTexture,q),Qn?O.framebufferTextureLayer(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,Ln.__webglTexture,_e,sn+Un):O.framebufferTexture2D(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,Ln.__webglTexture,_e),q!==0?O.blitFramebuffer(rt,ot,Ce,Xe,xt,Ht,Ce,Xe,O.COLOR_BUFFER_BIT,O.NEAREST):Qn?O.copyTexSubImage3D($t,_e,xt,Ht,sn+Un,rt,ot,Ce,Xe):O.copyTexSubImage2D($t,_e,xt,Ht,rt,ot,Ce,Xe);ue.bindFramebuffer(O.READ_FRAMEBUFFER,null),ue.bindFramebuffer(O.DRAW_FRAMEBUFFER,null)}else Qn?N.isDataTexture||N.isData3DTexture?O.texSubImage3D($t,_e,xt,Ht,sn,Ce,Xe,Fe,Gt,nt,Xt.data):X.isCompressedArrayTexture?O.compressedTexSubImage3D($t,_e,xt,Ht,sn,Ce,Xe,Fe,Gt,Xt.data):O.texSubImage3D($t,_e,xt,Ht,sn,Ce,Xe,Fe,Gt,nt,Xt):N.isDataTexture?O.texSubImage2D(O.TEXTURE_2D,_e,xt,Ht,Ce,Xe,Gt,nt,Xt.data):N.isCompressedTexture?O.compressedTexSubImage2D(O.TEXTURE_2D,_e,xt,Ht,Xt.width,Xt.height,Gt,Xt.data):O.texSubImage2D(O.TEXTURE_2D,_e,xt,Ht,Ce,Xe,Gt,nt,Xt);O.pixelStorei(O.UNPACK_ROW_LENGTH,Rt),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,Fn),O.pixelStorei(O.UNPACK_SKIP_PIXELS,gs),O.pixelStorei(O.UNPACK_SKIP_ROWS,Hn),O.pixelStorei(O.UNPACK_SKIP_IMAGES,$s),_e===0&&X.generateMipmaps&&O.generateMipmap($t),ue.unbindTexture()},this.copyTextureToTexture3D=function(N,X,ee=null,ne=null,q=0){return Go('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(N,X,ee,ne,q)},this.initRenderTarget=function(N){pe.get(N).__webglFramebuffer===void 0&&Oe.setupRenderTarget(N)},this.initTexture=function(N){N.isCubeTexture?Oe.setTextureCube(N,0):N.isData3DTexture?Oe.setTexture3D(N,0):N.isDataArrayTexture||N.isCompressedArrayTexture?Oe.setTexture2DArray(N,0):Oe.setTexture2D(N,0),ue.unbindTexture()},this.resetState=function(){D=0,P=0,I=null,ue.reset(),st.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ji}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=bt._getDrawingBufferColorSpace(e),t.unpackColorSpace=bt._getUnpackColorSpace()}}const KD=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Km,AddEquation:Tr,AddOperation:Lx,AdditiveAnimationBlendMode:ng,AdditiveBlending:Mm,AgXToneMapping:Bx,AlphaFormat:Qm,AlwaysCompare:Qx,AlwaysDepth:Sh,AlwaysStencilFunc:Am,AmbientLight:FS,AnimationAction:jS,AnimationClip:el,AnimationLoader:uA,AnimationMixer:BA,AnimationObjectGroup:IA,AnimationUtils:aA,ArcCurve:pS,ArrayCamera:qS,ArrowHelper:rR,AttachedBindMode:Tm,Audio:YS,AudioAnalyser:TA,AudioContext:Ng,AudioListener:MA,AudioLoader:yA,AxesHelper:aR,BackSide:En,BasicDepthPacking:Ur,BasicShadowMap:fx,BatchedMesh:hS,Bone:Ef,BooleanKeyframeTrack:Va,Box2:WA,Box3:On,Box3Helper:iR,BoxGeometry:Ha,BoxHelper:nR,BufferAttribute:Ut,BufferGeometry:pt,BufferGeometryLoader:XS,ByteType:jm,Cache:Ts,Camera:Ac,CameraHelper:tR,CanvasTexture:C1,CapsuleGeometry:Rf,CatmullRomCurve3:mS,CineonToneMapping:Ix,CircleGeometry:wf,ClampToEdgeWrapping:Ci,Clock:Lg,Color:Re,ColorKeyframeTrack:Tg,ColorManagement:bt,CompressedArrayTexture:R1,CompressedCubeTexture:w1,CompressedTexture:Af,CompressedTextureLoader:hA,ConeGeometry:Lc,ConstantAlphaFactor:Cx,ConstantColorFactor:Rx,Controls:lR,CubeCamera:aS,CubeReflectionMapping:Js,CubeRefractionMapping:Cr,CubeTexture:Rc,CubeTextureLoader:fA,CubeUVReflectionMapping:nl,CubicBezierCurve:mg,CubicBezierCurve3:gS,CubicInterpolant:US,CullFaceBack:Sm,CullFaceFront:hx,CullFaceFrontBack:zb,CullFaceNone:ux,Curve:ms,CurvePath:_S,CustomBlending:dx,CustomToneMapping:Ox,CylinderGeometry:Nc,Cylindrical:XA,Data3DTexture:xf,DataArrayTexture:yf,DataTexture:As,DataTextureLoader:dA,DataUtils:QT,DecrementStencilOp:jb,DecrementWrapStencilOp:Jb,DefaultLoadingManager:OS,DepthFormat:Yo,DepthStencilFormat:La,DepthTexture:Dc,DetachedBindMode:Fx,DirectionalLight:Dg,DirectionalLightHelper:eR,DiscreteInterpolant:PS,DodecahedronGeometry:Cf,DoubleSide:ri,DstAlphaFactor:Mx,DstColorFactor:bx,DynamicCopyUsage:fT,DynamicDrawUsage:aT,DynamicReadUsage:cT,EdgesGeometry:dS,EllipseCurve:Df,EqualCompare:Kx,EqualDepth:Eh,EqualStencilFunc:tT,EquirectangularReflectionMapping:hc,EquirectangularRefractionMapping:fc,Euler:Ui,EventDispatcher:Pi,ExtrudeGeometry:Nf,FileLoader:ds,Float16BufferAttribute:r1,Float32BufferAttribute:Ye,FloatType:Kn,Fog:Mf,FogExp2:Sf,FramebufferTexture:A1,FrontSide:fs,Frustum:sl,FrustumArray:bf,GLBufferAttribute:GA,GLSL1:pT,GLSL3:Rm,GreaterCompare:jx,GreaterDepth:Th,GreaterEqualCompare:Jx,GreaterEqualDepth:bh,GreaterEqualStencilFunc:rT,GreaterStencilFunc:iT,GridHelper:QA,Group:Ks,HalfFloatType:Lr,HemisphereLight:zS,HemisphereLightHelper:JA,IcosahedronGeometry:Lf,ImageBitmapLoader:WS,ImageLoader:Mc,ImageUtils:nS,IncrementStencilOp:Kb,IncrementWrapStencilOp:Zb,InstancedBufferAttribute:Ua,InstancedBufferGeometry:kS,InstancedInterleavedBuffer:VA,InstancedMesh:hg,Int16BufferAttribute:i1,Int32BufferAttribute:s1,Int8BufferAttribute:e1,IntType:ff,InterleavedBuffer:wc,InterleavedBufferAttribute:Nr,Interpolant:al,InterpolateDiscrete:Ko,InterpolateLinear:jo,InterpolateSmooth:dh,InterpolationSamplingMode:vT,InterpolationSamplingType:gT,InvertStencilOp:Qb,KeepStencilOp:va,KeyframeTrack:Ji,LOD:uS,LatheGeometry:Uf,Layers:Jo,LessCompare:Yx,LessDepth:Mh,LessEqualCompare:sg,LessEqualDepth:Da,LessEqualStencilFunc:nT,LessStencilFunc:eT,Light:Or,LightProbe:GS,Line:Qs,Line3:qA,LineBasicMaterial:Jn,LineCurve:gg,LineCurve3:vS,LineDashedMaterial:DS,LineLoop:fg,LineSegments:ps,LinearFilter:jt,LinearInterpolant:bg,LinearMipMapLinearFilter:Gb,LinearMipMapNearestFilter:Vb,LinearMipmapLinearFilter:Di,LinearMipmapNearestFilter:Vo,LinearSRGBColorSpace:bn,LinearToneMapping:Ux,LinearTransfer:pc,Loader:oi,LoaderUtils:wr,LoadingManager:Ag,LoopOnce:Hx,LoopPingPong:Gx,LoopRepeat:Vx,MOUSE:Ob,Material:gn,MaterialLoader:Hf,MathUtils:$x,Matrix2:Ig,Matrix3:mt,Matrix4:it,MaxEquation:vx,Mesh:pn,MeshBasicMaterial:Ni,MeshDepthMaterial:Sg,MeshDistanceMaterial:Mg,MeshLambertMaterial:wS,MeshMatcapMaterial:CS,MeshNormalMaterial:xg,MeshPhongMaterial:AS,MeshPhysicalMaterial:Zi,MeshStandardMaterial:Ic,MeshToonMaterial:RS,MinEquation:gx,MirroredRepeatWrapping:Wo,MixOperation:Nx,MultiplyBlending:bm,MultiplyOperation:bc,NearestFilter:an,NearestMipMapLinearFilter:Hb,NearestMipMapNearestFilter:Fb,NearestMipmapLinearFilter:xa,NearestMipmapNearestFilter:hf,NeutralToneMapping:zx,NeverCompare:qx,NeverDepth:xh,NeverStencilFunc:$b,NoBlending:mi,NoColorSpace:cs,NoToneMapping:hs,NormalAnimationBlendMode:_f,NormalBlending:Ta,NotEqualCompare:Zx,NotEqualDepth:Ah,NotEqualStencilFunc:sT,NumberKeyframeTrack:Ia,Object3D:wt,ObjectLoader:vA,ObjectSpaceNormalMap:Wx,OctahedronGeometry:Uc,OneFactor:yx,OneMinusConstantAlphaFactor:Dx,OneMinusConstantColorFactor:wx,OneMinusDstAlphaFactor:Ex,OneMinusDstColorFactor:Tx,OneMinusSrcAlphaFactor:yh,OneMinusSrcColorFactor:Sx,OrthographicCamera:ol,PCFShadowMap:cf,PCFSoftShadowMap:ec,PMREMGenerator:Pm,Path:sf,PerspectiveCamera:xn,Plane:br,PlaneGeometry:rl,PlaneHelper:sR,PointLight:Cg,PointLightHelper:jA,Points:dg,PointsMaterial:Tf,PolarGridHelper:$A,PolyhedronGeometry:Ir,PositionalAudio:bA,PropertyBinding:Nt,PropertyMixer:KS,QuadraticBezierCurve:vg,QuadraticBezierCurve3:_g,Quaternion:Zn,QuaternionKeyframeTrack:Oa,QuaternionLinearInterpolant:IS,RED_GREEN_RGTC2_Format:Jh,RED_RGTC1_Format:tg,REVISION:Fa,RGBADepthPacking:Xx,RGBAFormat:jn,RGBAIntegerFormat:vf,RGBA_ASTC_10x10_Format:Wh,RGBA_ASTC_10x5_Format:Gh,RGBA_ASTC_10x6_Format:kh,RGBA_ASTC_10x8_Format:Xh,RGBA_ASTC_12x10_Format:qh,RGBA_ASTC_12x12_Format:Yh,RGBA_ASTC_4x4_Format:Ph,RGBA_ASTC_5x4_Format:Ih,RGBA_ASTC_5x5_Format:Oh,RGBA_ASTC_6x5_Format:Bh,RGBA_ASTC_6x6_Format:zh,RGBA_ASTC_8x5_Format:Fh,RGBA_ASTC_8x6_Format:Hh,RGBA_ASTC_8x8_Format:Vh,RGBA_BPTC_Format:rc,RGBA_ETC2_EAC_Format:Uh,RGBA_PVRTC_2BPPV1_Format:Dh,RGBA_PVRTC_4BPPV1_Format:Ch,RGBA_S3TC_DXT1_Format:nc,RGBA_S3TC_DXT3_Format:ic,RGBA_S3TC_DXT5_Format:sc,RGBDepthPacking:Xb,RGBFormat:$m,RGBIntegerFormat:kb,RGB_BPTC_SIGNED_Format:Kh,RGB_BPTC_UNSIGNED_Format:jh,RGB_ETC1_Format:Nh,RGB_ETC2_Format:Lh,RGB_PVRTC_2BPPV1_Format:wh,RGB_PVRTC_4BPPV1_Format:Rh,RGB_S3TC_DXT1_Format:tc,RGDepthPacking:Wb,RGFormat:eg,RGIntegerFormat:gf,RawShaderMaterial:TS,Ray:il,Raycaster:ZS,RectAreaLight:HS,RedFormat:mf,RedIntegerFormat:Tc,ReinhardToneMapping:Px,RenderTarget:ag,RenderTarget3D:zA,RepeatWrapping:Dr,ReplaceStencilOp:Yb,ReverseSubtractEquation:mx,RingGeometry:Pf,SIGNED_RED_GREEN_RGTC2_Format:Qh,SIGNED_RED_RGTC1_Format:Zh,SRGBColorSpace:kt,SRGBTransfer:qt,Scene:_c,ShaderChunk:_t,ShaderLib:ls,ShaderMaterial:zn,ShadowMaterial:bS,Shape:Ra,ShapeGeometry:If,ShapePath:oR,ShapeUtils:us,ShortType:Zm,Skeleton:Cc,SkeletonHelper:KA,SkinnedMesh:ug,Source:Rr,Sphere:Nn,SphereGeometry:Pc,Spherical:kA,SphericalHarmonics3:VS,SplineCurve:yg,SpotLight:wg,SpotLightHelper:YA,Sprite:cS,SpriteMaterial:cg,SrcAlphaFactor:_h,SrcAlphaSaturateFactor:Ax,SrcColorFactor:xx,StaticCopyUsage:hT,StaticDrawUsage:mc,StaticReadUsage:lT,StereoCamera:xA,StreamCopyUsage:dT,StreamDrawUsage:oT,StreamReadUsage:uT,StringKeyframeTrack:Ga,SubtractEquation:px,SubtractiveBlending:Em,TOUCH:Bb,TangentSpaceNormalMap:Pr,TetrahedronGeometry:Of,Texture:nn,TextureLoader:BS,TextureUtils:dR,TimestampQuery:mT,TorusGeometry:Bf,TorusKnotGeometry:zf,Triangle:pi,TriangleFanDrawMode:$h,TriangleStripDrawMode:ig,TrianglesDrawMode:kx,TubeGeometry:Ff,UVMapping:uf,Uint16BufferAttribute:og,Uint32BufferAttribute:lg,Uint8BufferAttribute:t1,Uint8ClampedBufferAttribute:n1,Uniform:Vt,UniformsGroup:HA,UniformsLib:Ne,UniformsUtils:rS,UnsignedByteType:Bn,UnsignedInt248Type:Na,UnsignedInt5999Type:Jm,UnsignedIntType:Rs,UnsignedShort4444Type:df,UnsignedShort5551Type:pf,UnsignedShortType:qo,VSMShadowMap:os,Vector2:oe,Vector3:B,Vector4:Lt,VectorKeyframeTrack:Ba,VideoFrameTexture:T1,VideoTexture:fS,WebGL3DRenderTarget:GT,WebGLArrayRenderTarget:VT,WebGLCoordinateSystem:ji,WebGLCubeRenderTarget:oS,WebGLRenderTarget:Sn,WebGLRenderer:sM,WebGLUtils:iM,WebGPUCoordinateSystem:gc,WebXRController:ph,WireframeGeometry:ES,WrapAroundEnding:dc,ZeroCurvatureEnding:Sa,ZeroFactor:_x,ZeroSlopeEnding:Ma,ZeroStencilOp:qb,createCanvasElement:tS},Symbol.toStringTag,{value:"Module"}));var em={exports:{}},Ws={};/**
 * @license React
 * react-reconciler-constants.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ay;function jD(){return Ay||(Ay=1,Ws.ConcurrentRoot=1,Ws.ContinuousEventPriority=8,Ws.DefaultEventPriority=32,Ws.DiscreteEventPriority=2,Ws.IdleEventPriority=268435456,Ws.LegacyRoot=0,Ws.NoEventPriority=0),Ws}var Ry;function ZD(){return Ry||(Ry=1,em.exports=jD()),em.exports}var gh=ZD(),tm={exports:{}},nm={},im={exports:{}},sm={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var wy;function JD(){if(wy)return sm;wy=1;var s=Ym();function e(p,g){return p===g&&(p!==0||1/p===1/g)||p!==p&&g!==g}var t=typeof Object.is=="function"?Object.is:e,n=s.useState,i=s.useEffect,r=s.useLayoutEffect,l=s.useDebugValue;function c(p,g){var v=g(),x=n({inst:{value:v,getSnapshot:g}}),M=x[0].inst,S=x[1];return r(function(){M.value=v,M.getSnapshot=g,u(M)&&S({inst:M})},[p,v,g]),i(function(){return u(M)&&S({inst:M}),p(function(){u(M)&&S({inst:M})})},[p]),l(v),v}function u(p){var g=p.getSnapshot;p=p.value;try{var v=g();return!t(p,v)}catch{return!0}}function f(p,g){return g()}var d=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?f:c;return sm.useSyncExternalStore=s.useSyncExternalStore!==void 0?s.useSyncExternalStore:d,sm}var Cy;function QD(){return Cy||(Cy=1,im.exports=JD()),im.exports}/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Dy;function $D(){if(Dy)return nm;Dy=1;var s=Ym(),e=QD();function t(f,d){return f===d&&(f!==0||1/f===1/d)||f!==f&&d!==d}var n=typeof Object.is=="function"?Object.is:t,i=e.useSyncExternalStore,r=s.useRef,l=s.useEffect,c=s.useMemo,u=s.useDebugValue;return nm.useSyncExternalStoreWithSelector=function(f,d,p,g,v){var x=r(null);if(x.current===null){var M={hasValue:!1,value:null};x.current=M}else M=x.current;x=c(function(){function _(D){if(!b){if(b=!0,T=D,D=g(D),v!==void 0&&M.hasValue){var P=M.value;if(v(P,D))return A=P}return A=D}if(P=A,n(T,D))return P;var I=g(D);return v!==void 0&&v(P,I)?(T=D,P):(T=D,A=I)}var b=!1,T,A,U=p===void 0?null:p;return[function(){return _(d())},U===null?void 0:function(){return _(U())}]},[d,p,g,v]);var S=i(f,x[0],x[1]);return l(function(){M.hasValue=!0,M.value=S},[S]),u(S),S},nm}var Ny;function e3(){return Ny||(Ny=1,tm.exports=$D()),tm.exports}var t3=e3();const n3=lx(t3),Ly=s=>{let e;const t=new Set,n=(f,d)=>{const p=typeof f=="function"?f(e):f;if(!Object.is(p,e)){const g=e;e=d??(typeof p!="object"||p===null)?p:Object.assign({},e,p),t.forEach(v=>v(e,g))}},i=()=>e,c={setState:n,getState:i,getInitialState:()=>u,subscribe:f=>(t.add(f),()=>t.delete(f))},u=e=s(n,i,c);return c},i3=s=>s?Ly(s):Ly,{useSyncExternalStoreWithSelector:s3}=n3,r3=s=>s;function a3(s,e=r3,t){const n=s3(s.subscribe,s.getState,s.getInitialState,e,t);return cx.useDebugValue(n),n}const Uy=(s,e)=>{const t=i3(s),n=(i,r=e)=>a3(t,i,r);return Object.assign(n,t),n},o3=(s,e)=>s?Uy(s,e):Uy;var rm={exports:{}},am={exports:{}},om={exports:{}},lm={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Py;function l3(){return Py||(Py=1,function(s){function e(V,$){var W=V.length;V.push($);e:for(;0<W;){var le=W-1>>>1,me=V[le];if(0<i(me,$))V[le]=$,V[W]=me,W=le;else break e}}function t(V){return V.length===0?null:V[0]}function n(V){if(V.length===0)return null;var $=V[0],W=V.pop();if(W!==$){V[0]=W;e:for(var le=0,me=V.length,ye=me>>>1;le<ye;){var Pe=2*(le+1)-1,Je=V[Pe],te=Pe+1,xe=V[te];if(0>i(Je,W))te<me&&0>i(xe,Je)?(V[le]=xe,V[te]=W,le=te):(V[le]=Je,V[Pe]=W,le=Pe);else if(te<me&&0>i(xe,W))V[le]=xe,V[te]=W,le=te;else break e}}return $}function i(V,$){var W=V.sortIndex-$.sortIndex;return W!==0?W:V.id-$.id}if(s.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var r=performance;s.unstable_now=function(){return r.now()}}else{var l=Date,c=l.now();s.unstable_now=function(){return l.now()-c}}var u=[],f=[],d=1,p=null,g=3,v=!1,x=!1,M=!1,S=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,b=typeof setImmediate<"u"?setImmediate:null;function T(V){for(var $=t(f);$!==null;){if($.callback===null)n(f);else if($.startTime<=V)n(f),$.sortIndex=$.expirationTime,e(u,$);else break;$=t(f)}}function A(V){if(M=!1,T(V),!x)if(t(u)!==null)x=!0,J();else{var $=t(f);$!==null&&se(A,$.startTime-V)}}var U=!1,D=-1,P=5,I=-1;function w(){return!(s.unstable_now()-I<P)}function R(){if(U){var V=s.unstable_now();I=V;var $=!0;try{e:{x=!1,M&&(M=!1,_(D),D=-1),v=!0;var W=g;try{t:{for(T(V),p=t(u);p!==null&&!(p.expirationTime>V&&w());){var le=p.callback;if(typeof le=="function"){p.callback=null,g=p.priorityLevel;var me=le(p.expirationTime<=V);if(V=s.unstable_now(),typeof me=="function"){p.callback=me,T(V),$=!0;break t}p===t(u)&&n(u),T(V)}else n(u);p=t(u)}if(p!==null)$=!0;else{var ye=t(f);ye!==null&&se(A,ye.startTime-V),$=!1}}break e}finally{p=null,g=W,v=!1}$=void 0}}finally{$?F():U=!1}}}var F;if(typeof b=="function")F=function(){b(R)};else if(typeof MessageChannel<"u"){var j=new MessageChannel,k=j.port2;j.port1.onmessage=R,F=function(){k.postMessage(null)}}else F=function(){S(R,0)};function J(){U||(U=!0,F())}function se(V,$){D=S(function(){V(s.unstable_now())},$)}s.unstable_IdlePriority=5,s.unstable_ImmediatePriority=1,s.unstable_LowPriority=4,s.unstable_NormalPriority=3,s.unstable_Profiling=null,s.unstable_UserBlockingPriority=2,s.unstable_cancelCallback=function(V){V.callback=null},s.unstable_continueExecution=function(){x||v||(x=!0,J())},s.unstable_forceFrameRate=function(V){0>V||125<V?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<V?Math.floor(1e3/V):5},s.unstable_getCurrentPriorityLevel=function(){return g},s.unstable_getFirstCallbackNode=function(){return t(u)},s.unstable_next=function(V){switch(g){case 1:case 2:case 3:var $=3;break;default:$=g}var W=g;g=$;try{return V()}finally{g=W}},s.unstable_pauseExecution=function(){},s.unstable_requestPaint=function(){},s.unstable_runWithPriority=function(V,$){switch(V){case 1:case 2:case 3:case 4:case 5:break;default:V=3}var W=g;g=V;try{return $()}finally{g=W}},s.unstable_scheduleCallback=function(V,$,W){var le=s.unstable_now();switch(typeof W=="object"&&W!==null?(W=W.delay,W=typeof W=="number"&&0<W?le+W:le):W=le,V){case 1:var me=-1;break;case 2:me=250;break;case 5:me=1073741823;break;case 4:me=1e4;break;default:me=5e3}return me=W+me,V={id:d++,callback:$,priorityLevel:V,startTime:W,expirationTime:me,sortIndex:-1},W>le?(V.sortIndex=W,e(f,V),t(u)===null&&V===t(f)&&(M?(_(D),D=-1):M=!0,se(A,W-le))):(V.sortIndex=me,e(u,V),x||v||(x=!0,J())),V},s.unstable_shouldYield=w,s.unstable_wrapCallback=function(V){var $=g;return function(){var W=g;g=$;try{return V.apply(this,arguments)}finally{g=W}}}}(lm)),lm}var Iy;function rM(){return Iy||(Iy=1,om.exports=l3()),om.exports}/**
 * @license React
 * react-reconciler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Oy;function c3(){return Oy||(Oy=1,function(s){s.exports=function(e){function t(a,o,h,m){return new JM(a,o,h,m)}function n(){}function i(a){var o="https://react.dev/errors/"+a;if(1<arguments.length){o+="?args[]="+encodeURIComponent(arguments[1]);for(var h=2;h<arguments.length;h++)o+="&args[]="+encodeURIComponent(arguments[h])}return"Minified React error #"+a+"; visit "+o+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function r(a){return a===null||typeof a!="object"?null:(a=g0&&a[g0]||a["@@iterator"],typeof a=="function"?a:null)}function l(a){if(a==null)return null;if(typeof a=="function")return a.$$typeof===iE?null:a.displayName||a.name||null;if(typeof a=="string")return a;switch(a){case Ja:return"Fragment";case Za:return"Portal";case Ld:return"Profiler";case d0:return"StrictMode";case Pd:return"Suspense";case Id:return"SuspenseList"}if(typeof a=="object")switch(a.$$typeof){case rr:return(a.displayName||"Context")+".Provider";case p0:return(a._context.displayName||"Context")+".Consumer";case Ud:var o=a.render;return a=a.displayName,a||(a=o.displayName||o.name||"",a=a!==""?"ForwardRef("+a+")":"ForwardRef"),a;case Od:return o=a.displayName||null,o!==null?o:l(a.type)||"Memo";case ar:o=a._payload,a=a._init;try{return l(a(o))}catch{}}return null}function c(a){if(Bd===void 0)try{throw Error()}catch(h){var o=h.stack.trim().match(/\n( *(at )?)/);Bd=o&&o[1]||"",v0=-1<h.stack.indexOf(`
    at`)?" (<anonymous>)":-1<h.stack.indexOf("@")?"@unknown:0:0":""}return`
`+Bd+a+v0}function u(a,o){if(!a||zd)return"";zd=!0;var h=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var m={DetermineComponentFrameRoot:function(){try{if(o){var Ie=function(){throw Error()};if(Object.defineProperty(Ie.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(Ie,[])}catch(gt){var ze=gt}Reflect.construct(a,[],Ie)}else{try{Ie.call()}catch(gt){ze=gt}a.call(Ie.prototype)}}else{try{throw Error()}catch(gt){ze=gt}(Ie=a())&&typeof Ie.catch=="function"&&Ie.catch(function(){})}}catch(gt){if(gt&&ze&&typeof gt.stack=="string")return[gt.stack,ze.stack]}return[null,null]}};m.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var y=Object.getOwnPropertyDescriptor(m.DetermineComponentFrameRoot,"name");y&&y.configurable&&Object.defineProperty(m.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var E=m.DetermineComponentFrameRoot(),L=E[0],H=E[1];if(L&&H){var K=L.split(`
`),ce=H.split(`
`);for(y=m=0;m<K.length&&!K[m].includes("DetermineComponentFrameRoot");)m++;for(;y<ce.length&&!ce[y].includes("DetermineComponentFrameRoot");)y++;if(m===K.length||y===ce.length)for(m=K.length-1,y=ce.length-1;1<=m&&0<=y&&K[m]!==ce[y];)y--;for(;1<=m&&0<=y;m--,y--)if(K[m]!==ce[y]){if(m!==1||y!==1)do if(m--,y--,0>y||K[m]!==ce[y]){var be=`
`+K[m].replace(" at new "," at ");return a.displayName&&be.includes("<anonymous>")&&(be=be.replace("<anonymous>",a.displayName)),be}while(1<=m&&0<=y);break}}}finally{zd=!1,Error.prepareStackTrace=h}return(h=a?a.displayName||a.name:"")?c(h):""}function f(a){switch(a.tag){case 26:case 27:case 5:return c(a.type);case 16:return c("Lazy");case 13:return c("Suspense");case 19:return c("SuspenseList");case 0:case 15:return a=u(a.type,!1),a;case 11:return a=u(a.type.render,!1),a;case 1:return a=u(a.type,!0),a;default:return""}}function d(a){try{var o="";do o+=f(a),a=a.return;while(a);return o}catch(h){return`
Error generating stack: `+h.message+`
`+h.stack}}function p(a){var o=a,h=a;if(a.alternate)for(;o.return;)o=o.return;else{a=o;do o=a,(o.flags&4098)!==0&&(h=o.return),a=o.return;while(a)}return o.tag===3?h:null}function g(a){if(p(a)!==a)throw Error(i(188))}function v(a){var o=a.alternate;if(!o){if(o=p(a),o===null)throw Error(i(188));return o!==a?null:a}for(var h=a,m=o;;){var y=h.return;if(y===null)break;var E=y.alternate;if(E===null){if(m=y.return,m!==null){h=m;continue}break}if(y.child===E.child){for(E=y.child;E;){if(E===h)return g(y),a;if(E===m)return g(y),o;E=E.sibling}throw Error(i(188))}if(h.return!==m.return)h=y,m=E;else{for(var L=!1,H=y.child;H;){if(H===h){L=!0,h=y,m=E;break}if(H===m){L=!0,m=y,h=E;break}H=H.sibling}if(!L){for(H=E.child;H;){if(H===h){L=!0,h=E,m=y;break}if(H===m){L=!0,m=E,h=y;break}H=H.sibling}if(!L)throw Error(i(189))}}if(h.alternate!==m)throw Error(i(190))}if(h.tag!==3)throw Error(i(188));return h.stateNode.current===h?a:o}function x(a){var o=a.tag;if(o===5||o===26||o===27||o===6)return a;for(a=a.child;a!==null;){if(o=x(a),o!==null)return o;a=a.sibling}return null}function M(a){var o=a.tag;if(o===5||o===26||o===27||o===6)return a;for(a=a.child;a!==null;){if(a.tag!==4&&(o=M(a),o!==null))return o;a=a.sibling}return null}function S(a){return{current:a}}function _(a){0>$a||(a.current=Xd[$a],Xd[$a]=null,$a--)}function b(a,o){$a++,Xd[$a]=a.current,a.current=o}function T(a){return a>>>=0,a===0?32:31-(_b(a)/yb|0)|0}function A(a){var o=a&42;if(o!==0)return o;switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return a&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return a}}function U(a,o){var h=a.pendingLanes;if(h===0)return 0;var m=0,y=a.suspendedLanes,E=a.pingedLanes,L=a.warmLanes;a=a.finishedLanes!==0;var H=h&134217727;return H!==0?(h=H&~y,h!==0?m=A(h):(E&=H,E!==0?m=A(E):a||(L=H&~L,L!==0&&(m=A(L))))):(H=h&~y,H!==0?m=A(H):E!==0?m=A(E):a||(L=h&~L,L!==0&&(m=A(L)))),m===0?0:o!==0&&o!==m&&(o&y)===0&&(y=m&-m,L=o&-o,y>=L||y===32&&(L&4194176)!==0)?o:m}function D(a,o){return(a.pendingLanes&~(a.suspendedLanes&~a.pingedLanes)&o)===0}function P(a,o){switch(a){case 1:case 2:case 4:case 8:return o+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function I(){var a=eu;return eu<<=1,(eu&4194176)===0&&(eu=128),a}function w(){var a=tu;return tu<<=1,(tu&62914560)===0&&(tu=4194304),a}function R(a){for(var o=[],h=0;31>h;h++)o.push(a);return o}function F(a,o){a.pendingLanes|=o,o!==268435456&&(a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0)}function j(a,o,h,m,y,E){var L=a.pendingLanes;a.pendingLanes=h,a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0,a.expiredLanes&=h,a.entangledLanes&=h,a.errorRecoveryDisabledLanes&=h,a.shellSuspendCounter=0;var H=a.entanglements,K=a.expirationTimes,ce=a.hiddenUpdates;for(h=L&~h;0<h;){var be=31-Si(h),Ie=1<<be;H[be]=0,K[be]=-1;var ze=ce[be];if(ze!==null)for(ce[be]=null,be=0;be<ze.length;be++){var gt=ze[be];gt!==null&&(gt.lane&=-536870913)}h&=~Ie}m!==0&&k(a,m,0),E!==0&&y===0&&a.tag!==0&&(a.suspendedLanes|=E&~(L&~o))}function k(a,o,h){a.pendingLanes|=o,a.suspendedLanes&=~o;var m=31-Si(o);a.entangledLanes|=o,a.entanglements[m]=a.entanglements[m]|1073741824|h&4194218}function J(a,o){var h=a.entangledLanes|=o;for(a=a.entanglements;h;){var m=31-Si(h),y=1<<m;y&o|a[m]&o&&(a[m]|=o),h&=~y}}function se(a){return a&=-a,2<a?8<a?(a&134217727)!==0?32:268435456:8:2}function V(a){if(Mi&&typeof Mi.onCommitFiberRoot=="function")try{Mi.onCommitFiberRoot(Al,a,void 0,(a.current.flags&128)===128)}catch{}}function $(a){if(typeof bb=="function"&&Tb(a),Mi&&typeof Mi.setStrictMode=="function")try{Mi.setStrictMode(Al,a)}catch{}}function W(a,o){return a===o&&(a!==0||1/a===1/o)||a!==a&&o!==o}function le(a,o){if(typeof a=="object"&&a!==null){var h=k0.get(a);return h!==void 0?h:(o={value:a,source:o,stack:d(o)},k0.set(a,o),o)}return{value:a,source:o,stack:d(o)}}function me(a,o){to[no++]=su,to[no++]=iu,iu=a,su=o}function ye(a,o,h){Hi[Vi++]=Us,Hi[Vi++]=Ps,Hi[Vi++]=qr,qr=a;var m=Us;a=Ps;var y=32-Si(m)-1;m&=~(1<<y),h+=1;var E=32-Si(o)+y;if(30<E){var L=y-y%5;E=(m&(1<<L)-1).toString(32),m>>=L,y-=L,Us=1<<32-Si(o)+y|h<<y|m,Ps=E+a}else Us=1<<E|h<<y|m,Ps=a}function Pe(a){a.return!==null&&(me(a,1),ye(a,1,0))}function Je(a){for(;a===iu;)iu=to[--no],to[no]=null,su=to[--no],to[no]=null;for(;a===qr;)qr=Hi[--Vi],Hi[Vi]=null,Ps=Hi[--Vi],Hi[Vi]=null,Us=Hi[--Vi],Hi[Vi]=null}function te(a,o){b(lr,o),b(Rl,a),b(In,null),a=aE(o),_(In),b(In,a)}function xe(){_(In),_(Rl),_(lr)}function We(a){a.memoizedState!==null&&b(ru,a);var o=In.current,h=oE(o,a.type);o!==h&&(b(Rl,a),b(In,h))}function De(a){Rl.current===a&&(_(In),_(Rl)),ru.current===a&&(_(ru),Ls?Wr._currentValue=Qa:Wr._currentValue2=Qa)}function Ge(a){var o=Error(i(418,""));throw lt(le(o,a)),Yd}function ft(a,o){if(!zi)throw Error(i(175));eb(a.stateNode,a.type,a.memoizedProps,o,a)||Ge(a)}function Qe(a){for(ti=a.return;ti;)switch(ti.tag){case 3:case 27:ys=!0;return;case 5:case 13:ys=!1;return;default:ti=ti.return}}function zt(a){if(!zi||a!==ti)return!1;if(!Pt)return Qe(a),Pt=!0,!1;var o=!1;if(kn?a.tag!==3&&a.tag!==27&&(a.tag!==5||L0(a.type)&&!$c(a.type,a.memoizedProps))&&(o=!0):a.tag!==3&&(a.tag!==5||L0(a.type)&&!$c(a.type,a.memoizedProps))&&(o=!0),o&&Xn&&Ge(a),Qe(a),a.tag===13){if(!zi)throw Error(i(316));if(a=a.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(i(317));Xn=ib(a)}else Xn=ti?D0(a.stateNode):null;return!0}function yt(){zi&&(Xn=ti=null,Pt=!1)}function lt(a){ns===null?ns=[a]:ns.push(a)}function O(){for(var a=io,o=Kd=io=0;o<a;){var h=Gi[o];Gi[o++]=null;var m=Gi[o];Gi[o++]=null;var y=Gi[o];Gi[o++]=null;var E=Gi[o];if(Gi[o++]=null,m!==null&&y!==null){var L=m.pending;L===null?y.next=y:(y.next=L.next,L.next=y),m.pending=y}E!==0&&ue(h,y,E)}}function Te(a,o,h,m){Gi[io++]=a,Gi[io++]=o,Gi[io++]=h,Gi[io++]=m,Kd|=m,a.lanes|=m,a=a.alternate,a!==null&&(a.lanes|=m)}function ge(a,o,h,m){return Te(a,o,h,m),Be(a)}function Ee(a,o){return Te(a,null,null,o),Be(a)}function ue(a,o,h){a.lanes|=h;var m=a.alternate;m!==null&&(m.lanes|=h);for(var y=!1,E=a.return;E!==null;)E.childLanes|=h,m=E.alternate,m!==null&&(m.childLanes|=h),E.tag===22&&(a=E.stateNode,a===null||a._visibility&1||(y=!0)),a=E,E=E.return;y&&o!==null&&a.tag===3&&(E=a.stateNode,y=31-Si(h),E=E.hiddenUpdates,a=E[y],a===null?E[y]=[o]:a.push(o),o.lane=h|536870912)}function Be(a){if(50<Ol)throw Ol=0,up=null,Error(i(185));for(var o=a.return;o!==null;)a=o,o=a.return;return a.tag===3?a.stateNode:null}function pe(a){a!==so&&a.next===null&&(so===null?au=so=a:so=so.next=a),ou=!0,jd||(jd=!0,re(ut))}function Oe(a,o){if(!Zd&&ou){Zd=!0;do for(var h=!1,m=au;m!==null;){if(a!==0){var y=m.pendingLanes;if(y===0)var E=0;else{var L=m.suspendedLanes,H=m.pingedLanes;E=(1<<31-Si(42|a)+1)-1,E&=y&~(L&~H),E=E&201326677?E&201326677|1:E?E|2:0}E!==0&&(h=!0,Z(m,E))}else E=Dt,E=U(m,m===en?E:0),(E&3)===0||D(m,E)||(h=!0,Z(m,E));m=m.next}while(h);Zd=!1}}function ut(){ou=jd=!1;var a=0;ro!==0&&(mE()&&(a=ro),ro=0);for(var o=ts(),h=null,m=au;m!==null;){var y=m.next,E=z(m,o);E===0?(m.next=null,h===null?au=y:h.next=y,y===null&&(so=h)):(h=m,(a!==0||(E&3)!==0)&&(ou=!0)),m=y}Oe(a)}function z(a,o){for(var h=a.suspendedLanes,m=a.pingedLanes,y=a.expirationTimes,E=a.pendingLanes&-62914561;0<E;){var L=31-Si(E),H=1<<L,K=y[L];K===-1?((H&h)===0||(H&m)!==0)&&(y[L]=P(H,o)):K<=o&&(a.expiredLanes|=H),E&=~H}if(o=en,h=Dt,h=U(a,a===o?h:0),m=a.callbackNode,h===0||a===o&&tn===2||a.cancelPendingCommit!==null)return m!==null&&m!==null&&Wd(m),a.callbackNode=null,a.callbackPriority=0;if((h&3)===0||D(a,h)){if(o=h&-h,o===a.callbackPriority)return o;switch(m!==null&&Wd(m),se(h)){case 2:case 8:h=Mb;break;case 32:h=qd;break;case 268435456:h=Eb;break;default:h=qd}return m=C.bind(null,a),h=nu(h,m),a.callbackPriority=o,a.callbackNode=h,o}return m!==null&&m!==null&&Wd(m),a.callbackPriority=2,a.callbackNode=null,2}function C(a,o){var h=a.callbackNode;if(Gr()&&a.callbackNode!==h)return null;var m=Dt;return m=U(a,a===en?m:0),m===0?null:(qv(a,m,o),z(a,ts()),a.callbackNode!=null&&a.callbackNode===h?C.bind(null,a):null)}function Z(a,o){if(Gr())return null;qv(a,o,!0)}function re(a){SE?ME(function(){(Kt&6)!==0?nu(G0,a):a()}):nu(G0,a)}function de(){return ro===0&&(ro=I()),ro}function ae(a,o){if(wl===null){var h=wl=[];Jd=0,ao=de(),oo={status:"pending",value:void 0,then:function(m){h.push(m)}}}return Jd++,o.then(je,je),o}function je(){if(--Jd===0&&wl!==null){oo!==null&&(oo.status="fulfilled");var a=wl;wl=null,ao=0,oo=null;for(var o=0;o<a.length;o++)(0,a[o])()}}function we(a,o){var h=[],m={status:"pending",value:null,reason:null,then:function(y){h.push(y)}};return a.then(function(){m.status="fulfilled",m.value=o;for(var y=0;y<h.length;y++)(0,h[y])(o)},function(y){for(m.status="rejected",m.reason=y,y=0;y<h.length;y++)(0,h[y])(void 0)}),m}function ke(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function Ke(a,o){a=a.updateQueue,o.updateQueue===a&&(o.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,callbacks:null})}function fe(a){return{lane:a,tag:0,payload:null,callback:null,next:null}}function Ue(a,o,h){var m=a.updateQueue;if(m===null)return null;if(m=m.shared,(Kt&2)!==0){var y=m.pending;return y===null?o.next=o:(o.next=y.next,y.next=o),m.pending=o,o=Be(a),ue(a,null,h),o}return Te(a,m,o,h),Be(a)}function et(a,o,h){if(o=o.updateQueue,o!==null&&(o=o.shared,(h&4194176)!==0)){var m=o.lanes;m&=a.pendingLanes,h|=m,o.lanes=h,J(a,h)}}function tt(a,o){var h=a.updateQueue,m=a.alternate;if(m!==null&&(m=m.updateQueue,h===m)){var y=null,E=null;if(h=h.firstBaseUpdate,h!==null){do{var L={lane:h.lane,tag:h.tag,payload:h.payload,callback:null,next:null};E===null?y=E=L:E=E.next=L,h=h.next}while(h!==null);E===null?y=E=o:E=E.next=o}else y=E=o;h={baseState:m.baseState,firstBaseUpdate:y,lastBaseUpdate:E,shared:m.shared,callbacks:m.callbacks},a.updateQueue=h;return}a=h.lastBaseUpdate,a===null?h.firstBaseUpdate=o:a.next=o,h.lastBaseUpdate=o}function Ae(){if(Qd){var a=oo;if(a!==null)throw a}}function st(a,o,h,m){Qd=!1;var y=a.updateQueue;cr=!1;var E=y.firstBaseUpdate,L=y.lastBaseUpdate,H=y.shared.pending;if(H!==null){y.shared.pending=null;var K=H,ce=K.next;K.next=null,L===null?E=ce:L.next=ce,L=K;var be=a.alternate;be!==null&&(be=be.updateQueue,H=be.lastBaseUpdate,H!==L&&(H===null?be.firstBaseUpdate=ce:H.next=ce,be.lastBaseUpdate=K))}if(E!==null){var Ie=y.baseState;L=0,be=ce=K=null,H=E;do{var ze=H.lane&-536870913,gt=ze!==H.lane;if(gt?(Dt&ze)===ze:(m&ze)===ze){ze!==0&&ze===ao&&(Qd=!0),be!==null&&(be=be.next={lane:0,tag:H.tag,payload:H.payload,callback:null,next:null});e:{var Wi=a,Bl=H;ze=o;var ta=h;switch(Bl.tag){case 1:if(Wi=Bl.payload,typeof Wi=="function"){Ie=Wi.call(ta,Ie,ze);break e}Ie=Wi;break e;case 3:Wi.flags=Wi.flags&-65537|128;case 0:if(Wi=Bl.payload,ze=typeof Wi=="function"?Wi.call(ta,Ie,ze):Wi,ze==null)break e;Ie=Nd({},Ie,ze);break e;case 2:cr=!0}}ze=H.callback,ze!==null&&(a.flags|=64,gt&&(a.flags|=8192),gt=y.callbacks,gt===null?y.callbacks=[ze]:gt.push(ze))}else gt={lane:ze,tag:H.tag,payload:H.payload,callback:H.callback,next:null},be===null?(ce=be=gt,K=Ie):be=be.next=gt,L|=ze;if(H=H.next,H===null){if(H=y.shared.pending,H===null)break;gt=H,H=gt.next,gt.next=null,y.lastBaseUpdate=gt,y.shared.pending=null}}while(!0);be===null&&(K=Ie),y.baseState=K,y.firstBaseUpdate=ce,y.lastBaseUpdate=be,E===null&&(y.shared.lanes=0),fr|=L,a.lanes=L,a.memoizedState=Ie}}function G(a,o){if(typeof a!="function")throw Error(i(191,a));a.call(o)}function Le(a,o){var h=a.callbacks;if(h!==null)for(a.callbacks=null,a=0;a<h.length;a++)G(h[a],o)}function ve(a,o){if(Ei(a,o))return!0;if(typeof a!="object"||a===null||typeof o!="object"||o===null)return!1;var h=Object.keys(a),m=Object.keys(o);if(h.length!==m.length)return!1;for(m=0;m<h.length;m++){var y=h[m];if(!Ab.call(o,y)||!Ei(a[y],o[y]))return!1}return!0}function Ve(a){return a=a.status,a==="fulfilled"||a==="rejected"}function Se(){}function he(a,o,h){switch(h=a[h],h===void 0?a.push(o):h!==o&&(o.then(Se,Se),o=h),o.status){case"fulfilled":return o.value;case"rejected":throw a=o.reason,a===Cl?Error(i(483)):a;default:if(typeof o.status=="string")o.then(Se,Se);else{if(a=en,a!==null&&100<a.shellSuspendCounter)throw Error(i(482));a=o,a.status="pending",a.then(function(m){if(o.status==="pending"){var y=o;y.status="fulfilled",y.value=m}},function(m){if(o.status==="pending"){var y=o;y.status="rejected",y.reason=m}})}switch(o.status){case"fulfilled":return o.value;case"rejected":throw a=o.reason,a===Cl?Error(i(483)):a}throw lo=o,Cl}}function qe(){if(lo===null)throw Error(i(459));var a=lo;return lo=null,a}function at(a){var o=Dl;return Dl+=1,co===null&&(co=[]),he(co,a,o)}function Ft(a,o){o=o.props.ref,a.ref=o!==void 0?o:null}function Ct(a,o){throw o.$$typeof===eE?Error(i(525)):(a=Object.prototype.toString.call(o),Error(i(31,a==="[object Object]"?"object with keys {"+Object.keys(o).join(", ")+"}":a)))}function li(a){var o=a._init;return o(a._payload)}function Oi(a){function o(Q,Y){if(a){var ie=Q.deletions;ie===null?(Q.deletions=[Y],Q.flags|=16):ie.push(Y)}}function h(Q,Y){if(!a)return null;for(;Y!==null;)o(Q,Y),Y=Y.sibling;return null}function m(Q){for(var Y=new Map;Q!==null;)Q.key!==null?Y.set(Q.key,Q):Y.set(Q.index,Q),Q=Q.sibling;return Y}function y(Q,Y){return Q=sr(Q,Y),Q.index=0,Q.sibling=null,Q}function E(Q,Y,ie){return Q.index=ie,a?(ie=Q.alternate,ie!==null?(ie=ie.index,ie<Y?(Q.flags|=33554434,Y):ie):(Q.flags|=33554434,Y)):(Q.flags|=1048576,Y)}function L(Q){return a&&Q.alternate===null&&(Q.flags|=33554434),Q}function H(Q,Y,ie,Me){return Y===null||Y.tag!==6?(Y=wd(ie,Q.mode,Me),Y.return=Q,Y):(Y=y(Y,ie),Y.return=Q,Y)}function K(Q,Y,ie,Me){var $e=ie.type;return $e===Ja?be(Q,Y,ie.props.children,Me,ie.key):Y!==null&&(Y.elementType===$e||typeof $e=="object"&&$e!==null&&$e.$$typeof===ar&&li($e)===Y.type)?(Y=y(Y,ie.props),Ft(Y,ie),Y.return=Q,Y):(Y=Zc(ie.type,ie.key,ie.props,null,Q.mode,Me),Ft(Y,ie),Y.return=Q,Y)}function ce(Q,Y,ie,Me){return Y===null||Y.tag!==4||Y.stateNode.containerInfo!==ie.containerInfo||Y.stateNode.implementation!==ie.implementation?(Y=Cd(ie,Q.mode,Me),Y.return=Q,Y):(Y=y(Y,ie.children||[]),Y.return=Q,Y)}function be(Q,Y,ie,Me,$e){return Y===null||Y.tag!==7?(Y=kr(ie,Q.mode,Me,$e),Y.return=Q,Y):(Y=y(Y,ie),Y.return=Q,Y)}function Ie(Q,Y,ie){if(typeof Y=="string"&&Y!==""||typeof Y=="number"||typeof Y=="bigint")return Y=wd(""+Y,Q.mode,ie),Y.return=Q,Y;if(typeof Y=="object"&&Y!==null){switch(Y.$$typeof){case Jc:return ie=Zc(Y.type,Y.key,Y.props,null,Q.mode,ie),Ft(ie,Y),ie.return=Q,ie;case Za:return Y=Cd(Y,Q.mode,ie),Y.return=Q,Y;case ar:var Me=Y._init;return Y=Me(Y._payload),Ie(Q,Y,ie)}if(Qc(Y)||r(Y))return Y=kr(Y,Q.mode,ie,null),Y.return=Q,Y;if(typeof Y.then=="function")return Ie(Q,at(Y),ie);if(Y.$$typeof===rr)return Ie(Q,Xc(Q,Y),ie);Ct(Q,Y)}return null}function ze(Q,Y,ie,Me){var $e=Y!==null?Y.key:null;if(typeof ie=="string"&&ie!==""||typeof ie=="number"||typeof ie=="bigint")return $e!==null?null:H(Q,Y,""+ie,Me);if(typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case Jc:return ie.key===$e?K(Q,Y,ie,Me):null;case Za:return ie.key===$e?ce(Q,Y,ie,Me):null;case ar:return $e=ie._init,ie=$e(ie._payload),ze(Q,Y,ie,Me)}if(Qc(ie)||r(ie))return $e!==null?null:be(Q,Y,ie,Me,null);if(typeof ie.then=="function")return ze(Q,Y,at(ie),Me);if(ie.$$typeof===rr)return ze(Q,Y,Xc(Q,ie),Me);Ct(Q,ie)}return null}function gt(Q,Y,ie,Me,$e){if(typeof Me=="string"&&Me!==""||typeof Me=="number"||typeof Me=="bigint")return Q=Q.get(ie)||null,H(Y,Q,""+Me,$e);if(typeof Me=="object"&&Me!==null){switch(Me.$$typeof){case Jc:return Q=Q.get(Me.key===null?ie:Me.key)||null,K(Y,Q,Me,$e);case Za:return Q=Q.get(Me.key===null?ie:Me.key)||null,ce(Y,Q,Me,$e);case ar:var rn=Me._init;return Me=rn(Me._payload),gt(Q,Y,ie,Me,$e)}if(Qc(Me)||r(Me))return Q=Q.get(ie)||null,be(Y,Q,Me,$e,null);if(typeof Me.then=="function")return gt(Q,Y,ie,at(Me),$e);if(Me.$$typeof===rr)return gt(Q,Y,ie,Xc(Y,Me),$e);Ct(Y,Me)}return null}function Wi(Q,Y,ie,Me){for(var $e=null,rn=null,ct=Y,It=Y=0,Cn=null;ct!==null&&It<ie.length;It++){ct.index>It?(Cn=ct,ct=null):Cn=ct.sibling;var Ot=ze(Q,ct,ie[It],Me);if(Ot===null){ct===null&&(ct=Cn);break}a&&ct&&Ot.alternate===null&&o(Q,ct),Y=E(Ot,Y,It),rn===null?$e=Ot:rn.sibling=Ot,rn=Ot,ct=Cn}if(It===ie.length)return h(Q,ct),Pt&&me(Q,It),$e;if(ct===null){for(;It<ie.length;It++)ct=Ie(Q,ie[It],Me),ct!==null&&(Y=E(ct,Y,It),rn===null?$e=ct:rn.sibling=ct,rn=ct);return Pt&&me(Q,It),$e}for(ct=m(ct);It<ie.length;It++)Cn=gt(ct,Q,It,ie[It],Me),Cn!==null&&(a&&Cn.alternate!==null&&ct.delete(Cn.key===null?It:Cn.key),Y=E(Cn,Y,It),rn===null?$e=Cn:rn.sibling=Cn,rn=Cn);return a&&ct.forEach(function(pr){return o(Q,pr)}),Pt&&me(Q,It),$e}function Bl(Q,Y,ie,Me){if(ie==null)throw Error(i(151));for(var $e=null,rn=null,ct=Y,It=Y=0,Cn=null,Ot=ie.next();ct!==null&&!Ot.done;It++,Ot=ie.next()){ct.index>It?(Cn=ct,ct=null):Cn=ct.sibling;var pr=ze(Q,ct,Ot.value,Me);if(pr===null){ct===null&&(ct=Cn);break}a&&ct&&pr.alternate===null&&o(Q,ct),Y=E(pr,Y,It),rn===null?$e=pr:rn.sibling=pr,rn=pr,ct=Cn}if(Ot.done)return h(Q,ct),Pt&&me(Q,It),$e;if(ct===null){for(;!Ot.done;It++,Ot=ie.next())Ot=Ie(Q,Ot.value,Me),Ot!==null&&(Y=E(Ot,Y,It),rn===null?$e=Ot:rn.sibling=Ot,rn=Ot);return Pt&&me(Q,It),$e}for(ct=m(ct);!Ot.done;It++,Ot=ie.next())Ot=gt(ct,Q,It,Ot.value,Me),Ot!==null&&(a&&Ot.alternate!==null&&ct.delete(Ot.key===null?It:Ot.key),Y=E(Ot,Y,It),rn===null?$e=Ot:rn.sibling=Ot,rn=Ot);return a&&ct.forEach(function(Ub){return o(Q,Ub)}),Pt&&me(Q,It),$e}function ta(Q,Y,ie,Me){if(typeof ie=="object"&&ie!==null&&ie.type===Ja&&ie.key===null&&(ie=ie.props.children),typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case Jc:e:{for(var $e=ie.key;Y!==null;){if(Y.key===$e){if($e=ie.type,$e===Ja){if(Y.tag===7){h(Q,Y.sibling),Me=y(Y,ie.props.children),Me.return=Q,Q=Me;break e}}else if(Y.elementType===$e||typeof $e=="object"&&$e!==null&&$e.$$typeof===ar&&li($e)===Y.type){h(Q,Y.sibling),Me=y(Y,ie.props),Ft(Me,ie),Me.return=Q,Q=Me;break e}h(Q,Y);break}else o(Q,Y);Y=Y.sibling}ie.type===Ja?(Me=kr(ie.props.children,Q.mode,Me,ie.key),Me.return=Q,Q=Me):(Me=Zc(ie.type,ie.key,ie.props,null,Q.mode,Me),Ft(Me,ie),Me.return=Q,Q=Me)}return L(Q);case Za:e:{for($e=ie.key;Y!==null;){if(Y.key===$e)if(Y.tag===4&&Y.stateNode.containerInfo===ie.containerInfo&&Y.stateNode.implementation===ie.implementation){h(Q,Y.sibling),Me=y(Y,ie.children||[]),Me.return=Q,Q=Me;break e}else{h(Q,Y);break}else o(Q,Y);Y=Y.sibling}Me=Cd(ie,Q.mode,Me),Me.return=Q,Q=Me}return L(Q);case ar:return $e=ie._init,ie=$e(ie._payload),ta(Q,Y,ie,Me)}if(Qc(ie))return Wi(Q,Y,ie,Me);if(r(ie)){if($e=r(ie),typeof $e!="function")throw Error(i(150));return ie=$e.call(ie),Bl(Q,Y,ie,Me)}if(typeof ie.then=="function")return ta(Q,Y,at(ie),Me);if(ie.$$typeof===rr)return ta(Q,Y,Xc(Q,ie),Me);Ct(Q,ie)}return typeof ie=="string"&&ie!==""||typeof ie=="number"||typeof ie=="bigint"?(ie=""+ie,Y!==null&&Y.tag===6?(h(Q,Y.sibling),Me=y(Y,ie),Me.return=Q,Q=Me):(h(Q,Y),Me=wd(ie,Q.mode,Me),Me.return=Q,Q=Me),L(Q)):h(Q,Y)}return function(Q,Y,ie,Me){try{Dl=0;var $e=ta(Q,Y,ie,Me);return co=null,$e}catch(ct){if(ct===Cl)throw ct;var rn=t(29,ct,null,Q.mode);return rn.lanes=Me,rn.return=Q,rn}finally{}}}function ul(a,o){a=zs,b(cu,a),b(uo,o),zs=a|o.baseLanes}function ka(){b(cu,zs),b(uo,uo.current)}function Qi(){zs=cu.current,_(uo),_(cu)}function Bi(a){var o=a.alternate;b(Mn,Mn.current&1),b(ki,a),xs===null&&(o===null||uo.current!==null||o.memoizedState!==null)&&(xs=a)}function hl(a){if(a.tag===22){if(b(Mn,Mn.current),b(ki,a),xs===null){var o=a.alternate;o!==null&&o.memoizedState!==null&&(xs=a)}}else $i()}function $i(){b(Mn,Mn.current),b(ki,ki.current)}function ci(a){_(ki),xs===a&&(xs=null),_(Mn)}function Br(a){for(var o=a;o!==null;){if(o.tag===13){var h=o.memoizedState;if(h!==null&&(h=h.dehydrated,h===null||Vd(h)||Gd(h)))return o}else if(o.tag===19&&o.memoizedProps.revealOrder!==void 0){if((o.flags&128)!==0)return o}else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break;for(;o.sibling===null;){if(o.return===null||o.return===a)return null;o=o.return}o.sibling.return=o.return,o=o.sibling}return null}function Qt(){throw Error(i(321))}function Xa(a,o){if(o===null)return!1;for(var h=0;h<o.length&&h<a.length;h++)if(!Ei(a[h],o[h]))return!1;return!0}function Wa(a,o,h,m,y,E){return ur=E,St=o,o.memoizedState=null,o.updateQueue=null,o.lanes=0,ht.H=a===null||a.memoizedState===null?jr:hr,Kr=!1,E=h(m,y),Kr=!1,ho&&(E=zc(o,h,m,y)),Bc(a),E}function Bc(a){ht.H=Ss;var o=Yt!==null&&Yt.next!==null;if(ur=0,vn=Yt=St=null,uu=!1,Nl=0,fo=null,o)throw Error(i(300));a===null||Rn||(a=a.dependencies,a!==null&&kc(a)&&(Rn=!0))}function zc(a,o,h,m){St=a;var y=0;do{if(ho&&(fo=null),Nl=0,ho=!1,25<=y)throw Error(i(301));if(y+=1,vn=Yt=null,a.updateQueue!=null){var E=a.updateQueue;E.lastEffect=null,E.events=null,E.stores=null,E.memoCache!=null&&(E.memoCache.index=0)}ht.H=Zr,E=o(h,m)}while(ho);return E}function kf(){var a=ht.H,o=a.useState()[0];return o=typeof o.then=="function"?ee(o):o,a=a.useState()[0],(Yt!==null?Yt.memoizedState:null)!==a&&(St.flags|=1024),o}function fl(){var a=hu!==0;return hu=0,a}function dl(a,o,h){o.updateQueue=a.updateQueue,o.flags&=-2053,a.lanes&=~h}function pl(a){if(uu){for(a=a.memoizedState;a!==null;){var o=a.queue;o!==null&&(o.pending=null),a=a.next}uu=!1}ur=0,vn=Yt=St=null,ho=!1,Nl=hu=0,fo=null}function N(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return vn===null?St.memoizedState=vn=a:vn=vn.next=a,vn}function X(){if(Yt===null){var a=St.alternate;a=a!==null?a.memoizedState:null}else a=Yt.next;var o=vn===null?St.memoizedState:vn.next;if(o!==null)vn=o,Yt=a;else{if(a===null)throw St.alternate===null?Error(i(467)):Error(i(310));Yt=a,a={memoizedState:Yt.memoizedState,baseState:Yt.baseState,baseQueue:Yt.baseQueue,queue:Yt.queue,next:null},vn===null?St.memoizedState=vn=a:vn=vn.next=a}return vn}function ee(a){var o=Nl;return Nl+=1,fo===null&&(fo=[]),a=he(fo,a,o),o=St,(vn===null?o.memoizedState:vn.next)===null&&(o=o.alternate,ht.H=o===null||o.memoizedState===null?jr:hr),a}function ne(a){if(a!==null&&typeof a=="object"){if(typeof a.then=="function")return ee(a);if(a.$$typeof===rr)return Vn(a)}throw Error(i(438,String(a)))}function q(a){var o=null,h=St.updateQueue;if(h!==null&&(o=h.memoCache),o==null){var m=St.alternate;m!==null&&(m=m.updateQueue,m!==null&&(m=m.memoCache,m!=null&&(o={data:m.data.map(function(y){return y.slice()}),index:0})))}if(o==null&&(o={data:[],index:0}),h===null&&(h=ep(),St.updateQueue=h),h.memoCache=o,h=o.data[o.index],h===void 0)for(h=o.data[o.index]=Array(a),m=0;m<a;m++)h[m]=nE;return o.index++,h}function _e(a,o){return typeof o=="function"?o(a):o}function Ce(a){var o=X();return Xe(o,Yt,a)}function Xe(a,o,h){var m=a.queue;if(m===null)throw Error(i(311));m.lastRenderedReducer=h;var y=a.baseQueue,E=m.pending;if(E!==null){if(y!==null){var L=y.next;y.next=E.next,E.next=L}o.baseQueue=y=E,m.pending=null}if(E=a.baseState,y===null)a.memoizedState=E;else{o=y.next;var H=L=null,K=null,ce=o,be=!1;do{var Ie=ce.lane&-536870913;if(Ie!==ce.lane?(Dt&Ie)===Ie:(ur&Ie)===Ie){var ze=ce.revertLane;if(ze===0)K!==null&&(K=K.next={lane:0,revertLane:0,action:ce.action,hasEagerState:ce.hasEagerState,eagerState:ce.eagerState,next:null}),Ie===ao&&(be=!0);else if((ur&ze)===ze){ce=ce.next,ze===ao&&(be=!0);continue}else Ie={lane:0,revertLane:ce.revertLane,action:ce.action,hasEagerState:ce.hasEagerState,eagerState:ce.eagerState,next:null},K===null?(H=K=Ie,L=E):K=K.next=Ie,St.lanes|=ze,fr|=ze;Ie=ce.action,Kr&&h(E,Ie),E=ce.hasEagerState?ce.eagerState:h(E,Ie)}else ze={lane:Ie,revertLane:ce.revertLane,action:ce.action,hasEagerState:ce.hasEagerState,eagerState:ce.eagerState,next:null},K===null?(H=K=ze,L=E):K=K.next=ze,St.lanes|=Ie,fr|=Ie;ce=ce.next}while(ce!==null&&ce!==o);if(K===null?L=E:K.next=H,!Ei(E,a.memoizedState)&&(Rn=!0,be&&(h=oo,h!==null)))throw h;a.memoizedState=E,a.baseState=L,a.baseQueue=K,m.lastRenderedState=E}return y===null&&(m.lanes=0),[a.memoizedState,m.dispatch]}function Fe(a){var o=X(),h=o.queue;if(h===null)throw Error(i(311));h.lastRenderedReducer=a;var m=h.dispatch,y=h.pending,E=o.memoizedState;if(y!==null){h.pending=null;var L=y=y.next;do E=a(E,L.action),L=L.next;while(L!==y);Ei(E,o.memoizedState)||(Rn=!0),o.memoizedState=E,o.baseQueue===null&&(o.baseState=E),h.lastRenderedState=E}return[E,m]}function rt(a,o,h){var m=St,y=X(),E=Pt;if(E){if(h===void 0)throw Error(i(407));h=h()}else h=o();var L=!Ei((Yt||y).memoizedState,h);if(L&&(y.memoizedState=h,Rn=!0),y=y.queue,Xf(xt.bind(null,m,y,a),[a]),y.getSnapshot!==o||L||vn!==null&&vn.memoizedState.tag&1){if(m.flags|=2048,vs(9,Ze.bind(null,m,y,h,o),{destroy:void 0},null),en===null)throw Error(i(349));E||(ur&60)!==0||ot(m,o,h)}return h}function ot(a,o,h){a.flags|=16384,a={getSnapshot:o,value:h},o=St.updateQueue,o===null?(o=ep(),St.updateQueue=o,o.stores=[a]):(h=o.stores,h===null?o.stores=[a]:h.push(a))}function Ze(a,o,h,m){o.value=h,o.getSnapshot=m,Ht(o)&&sn(a)}function xt(a,o,h){return h(function(){Ht(o)&&sn(a)})}function Ht(a){var o=a.getSnapshot;a=a.value;try{var h=o();return!Ei(a,h)}catch{return!0}}function sn(a){var o=Ee(a,2);o!==null&&ei(o,a,2)}function Xt(a){var o=N();if(typeof a=="function"){var h=a;if(a=h(),Kr){$(!0);try{h()}finally{$(!1)}}}return o.memoizedState=o.baseState=a,o.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:_e,lastRenderedState:a},o}function Gt(a,o,h,m){return a.baseState=h,Xe(a,Yt,typeof m=="function"?m:_e)}function nt(a,o,h,m,y){if(Vc(a))throw Error(i(485));if(a=o.action,a!==null){var E={payload:y,action:a,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(L){E.listeners.push(L)}};ht.T!==null?h(!0):E.isTransition=!1,m(E),h=o.pending,h===null?(E.next=o.pending=E,$t(o,E)):(E.next=h.next,o.pending=h.next=E)}}function $t(a,o){var h=o.action,m=o.payload,y=a.state;if(o.isTransition){var E=ht.T,L={};ht.T=L;try{var H=h(y,m),K=ht.S;K!==null&&K(L,H),Rt(a,o,H)}catch(ce){gs(a,o,ce)}finally{ht.T=E}}else try{E=h(y,m),Rt(a,o,E)}catch(ce){gs(a,o,ce)}}function Rt(a,o,h){h!==null&&typeof h=="object"&&typeof h.then=="function"?h.then(function(m){Fn(a,o,m)},function(m){return gs(a,o,m)}):Fn(a,o,h)}function Fn(a,o,h){o.status="fulfilled",o.value=h,Hn(o),a.state=h,o=a.pending,o!==null&&(h=o.next,h===o?a.pending=null:(h=h.next,o.next=h,$t(a,h)))}function gs(a,o,h){var m=a.pending;if(a.pending=null,m!==null){m=m.next;do o.status="rejected",o.reason=h,Hn(o),o=o.next;while(o!==m)}a.action=null}function Hn(a){a=a.listeners;for(var o=0;o<a.length;o++)(0,a[o])()}function $s(a,o){return o}function Zt(a,o){if(Pt){var h=en.formState;if(h!==null){e:{var m=St;if(Pt){if(Xn){var y=YE(Xn,ys);if(y){Xn=D0(y),m=KE(y);break e}}Ge(m)}m=!1}m&&(o=h[0])}}h=N(),h.memoizedState=h.baseState=o,m={pending:null,lanes:0,dispatch:null,lastRenderedReducer:$s,lastRenderedState:o},h.queue=m,h=tv.bind(null,St,m),m.dispatch=h,m=Xt(!1);var E=Kf.bind(null,St,!1,m.queue);return m=N(),y={state:o,dispatch:null,action:a,pending:null},m.queue=y,h=nt.bind(null,St,y,E,h),y.dispatch=h,m.memoizedState=a,[o,h,!1]}function Qn(a){var o=X();return $n(o,Yt,a)}function $n(a,o,h){o=Xe(a,o,$s)[0],a=Ce(_e)[0],o=typeof o=="object"&&o!==null&&typeof o.then=="function"?ee(o):o;var m=X(),y=m.queue,E=y.dispatch;return h!==m.memoizedState&&(St.flags|=2048,vs(9,Ln.bind(null,y,h),{destroy:void 0},null)),[o,E,a]}function Ln(a,o){a.action=o}function Un(a){var o=X(),h=Yt;if(h!==null)return $n(o,h,a);X(),o=o.memoizedState,h=X();var m=h.queue.dispatch;return h.memoizedState=a,[o,m,!1]}function vs(a,o,h,m){return a={tag:a,create:o,inst:h,deps:m,next:null},o=St.updateQueue,o===null&&(o=ep(),St.updateQueue=o),h=o.lastEffect,h===null?o.lastEffect=a.next=a:(m=h.next,h.next=a,a.next=m,o.lastEffect=a),a}function _s(){return X().memoizedState}function Fc(a,o,h,m){var y=N();St.flags|=a,y.memoizedState=vs(1|o,h,{destroy:void 0},m===void 0?null:m)}function Hc(a,o,h,m){var y=X();m=m===void 0?null:m;var E=y.memoizedState.inst;Yt!==null&&m!==null&&Xa(m,Yt.memoizedState.deps)?y.memoizedState=vs(o,h,E,m):(St.flags|=a,y.memoizedState=vs(1|o,h,E,m))}function kg(a,o){Fc(8390656,8,a,o)}function Xf(a,o){Hc(2048,8,a,o)}function Xg(a,o){return Hc(4,2,a,o)}function Wg(a,o){return Hc(4,4,a,o)}function qg(a,o){if(typeof o=="function"){a=a();var h=o(a);return function(){typeof h=="function"?h():o(null)}}if(o!=null)return a=a(),o.current=a,function(){o.current=null}}function Yg(a,o,h){h=h!=null?h.concat([a]):null,Hc(4,4,qg.bind(null,o,a),h)}function Wf(){}function Kg(a,o){var h=X();o=o===void 0?null:o;var m=h.memoizedState;return o!==null&&Xa(o,m[1])?m[0]:(h.memoizedState=[a,o],a)}function jg(a,o){var h=X();o=o===void 0?null:o;var m=h.memoizedState;if(o!==null&&Xa(o,m[1]))return m[0];if(m=a(),Kr){$(!0);try{a()}finally{$(!1)}}return h.memoizedState=[m,o],m}function qf(a,o,h){return h===void 0||(ur&1073741824)!==0?a.memoizedState=o:(a.memoizedState=h,a=Wv(),St.lanes|=a,fr|=a,h)}function Zg(a,o,h,m){return Ei(h,o)?h:uo.current!==null?(a=qf(a,h,m),Ei(a,o)||(Rn=!0),a):(ur&42)===0?(Rn=!0,a.memoizedState=h):(a=Wv(),St.lanes|=a,fr|=a,o)}function Jg(a,o,h,m,y){var E=Xr();hi(E!==0&&8>E?E:8);var L=ht.T,H={};ht.T=H,Kf(a,!1,o,h);try{var K=y(),ce=ht.S;if(ce!==null&&ce(H,K),K!==null&&typeof K=="object"&&typeof K.then=="function"){var be=we(K,m);ml(a,o,be,yi(a))}else ml(a,o,m,yi(a))}catch(Ie){ml(a,o,{then:function(){},status:"rejected",reason:Ie},yi())}finally{hi(E),ht.T=L}}function Qg(a){var o=a.memoizedState;if(o!==null)return o;o={memoizedState:Qa,baseState:Qa,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:_e,lastRenderedState:Qa},next:null};var h={};return o.next={memoizedState:h,baseState:h,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:_e,lastRenderedState:h},next:null},a.memoizedState=o,a=a.alternate,a!==null&&(a.memoizedState=o),o}function Yf(){return Vn(Wr)}function $g(){return X().memoizedState}function ev(){return X().memoizedState}function PM(a){for(var o=a.return;o!==null;){switch(o.tag){case 24:case 3:var h=yi();a=fe(h);var m=Ue(o,a,h);m!==null&&(ei(m,o,h),et(m,o,h)),o={cache:od()},a.payload=o;return}o=o.return}}function IM(a,o,h){var m=yi();h={lane:m,revertLane:0,action:h,hasEagerState:!1,eagerState:null,next:null},Vc(a)?nv(o,h):(h=ge(a,o,h,m),h!==null&&(ei(h,a,m),iv(h,o,m)))}function tv(a,o,h){var m=yi();ml(a,o,h,m)}function ml(a,o,h,m){var y={lane:m,revertLane:0,action:h,hasEagerState:!1,eagerState:null,next:null};if(Vc(a))nv(o,y);else{var E=a.alternate;if(a.lanes===0&&(E===null||E.lanes===0)&&(E=o.lastRenderedReducer,E!==null))try{var L=o.lastRenderedState,H=E(L,h);if(y.hasEagerState=!0,y.eagerState=H,Ei(H,L))return Te(a,o,y,0),en===null&&O(),!1}catch{}finally{}if(h=ge(a,o,y,m),h!==null)return ei(h,a,m),iv(h,o,m),!0}return!1}function Kf(a,o,h,m){if(m={lane:2,revertLane:de(),action:m,hasEagerState:!1,eagerState:null,next:null},Vc(a)){if(o)throw Error(i(479))}else o=ge(a,h,m,2),o!==null&&ei(o,a,2)}function Vc(a){var o=a.alternate;return a===St||o!==null&&o===St}function nv(a,o){ho=uu=!0;var h=a.pending;h===null?o.next=o:(o.next=h.next,h.next=o),a.pending=o}function iv(a,o,h){if((h&4194176)!==0){var m=o.lanes;m&=a.pendingLanes,h|=m,o.lanes=h,J(a,h)}}function jf(a,o,h,m){o=a.memoizedState,h=h(m,o),h=h==null?o:Nd({},o,h),a.memoizedState=h,a.lanes===0&&(a.updateQueue.baseState=h)}function sv(a,o,h,m,y,E,L){return a=a.stateNode,typeof a.shouldComponentUpdate=="function"?a.shouldComponentUpdate(m,E,L):o.prototype&&o.prototype.isPureReactComponent?!ve(h,m)||!ve(y,E):!0}function rv(a,o,h,m){a=o.state,typeof o.componentWillReceiveProps=="function"&&o.componentWillReceiveProps(h,m),typeof o.UNSAFE_componentWillReceiveProps=="function"&&o.UNSAFE_componentWillReceiveProps(h,m),o.state!==a&&tp.enqueueReplaceState(o,o.state,null)}function zr(a,o){var h=o;if("ref"in o){h={};for(var m in o)m!=="ref"&&(h[m]=o[m])}if(a=a.defaultProps){h===o&&(h=Nd({},h));for(var y in a)h[y]===void 0&&(h[y]=a[y])}return h}function Gc(a,o){try{var h=a.onUncaughtError;h(o.value,{componentStack:o.stack})}catch(m){setTimeout(function(){throw m})}}function av(a,o,h){try{var m=a.onCaughtError;m(h.value,{componentStack:h.stack,errorBoundary:o.tag===1?o.stateNode:null})}catch(y){setTimeout(function(){throw y})}}function Zf(a,o,h){return h=fe(h),h.tag=3,h.payload={element:null},h.callback=function(){Gc(a,o)},h}function ov(a){return a=fe(a),a.tag=3,a}function lv(a,o,h,m){var y=h.type.getDerivedStateFromError;if(typeof y=="function"){var E=m.value;a.payload=function(){return y(E)},a.callback=function(){av(o,h,m)}}var L=h.stateNode;L!==null&&typeof L.componentDidCatch=="function"&&(a.callback=function(){av(o,h,m),typeof y!="function"&&(dr===null?dr=new Set([this]):dr.add(this));var H=m.stack;this.componentDidCatch(m.value,{componentStack:H!==null?H:""})})}function OM(a,o,h,m,y){if(h.flags|=32768,m!==null&&typeof m=="object"&&typeof m.then=="function"){if(o=h.alternate,o!==null&&vl(o,h,y,!0),h=ki.current,h!==null){switch(h.tag){case 13:return xs===null?bd():h.alternate===null&&fn===0&&(fn=3),h.flags&=-257,h.flags|=65536,h.lanes=y,m===lu?h.flags|=16384:(o=h.updateQueue,o===null?h.updateQueue=new Set([m]):o.add(m),Ad(a,m,y)),!1;case 22:return h.flags|=65536,m===lu?h.flags|=16384:(o=h.updateQueue,o===null?(o={transitions:null,markerInstances:null,retryQueue:new Set([m])},h.updateQueue=o):(h=o.retryQueue,h===null?o.retryQueue=new Set([m]):h.add(m)),Ad(a,m,y)),!1}throw Error(i(435,h.tag))}return Ad(a,m,y),bd(),!1}if(Pt)return o=ki.current,o!==null?((o.flags&65536)===0&&(o.flags|=256),o.flags|=65536,o.lanes=y,m!==Yd&&(a=Error(i(422),{cause:m}),lt(le(a,h)))):(m!==Yd&&(o=Error(i(423),{cause:m}),lt(le(o,h))),a=a.current.alternate,a.flags|=65536,y&=-y,a.lanes|=y,m=le(m,h),y=Zf(a.stateNode,m,y),tt(a,y),fn!==4&&(fn=2)),!1;var E=Error(i(520),{cause:m});if(E=le(E,h),Ul===null?Ul=[E]:Ul.push(E),fn!==4&&(fn=2),o===null)return!0;m=le(m,h),h=o;do{switch(h.tag){case 3:return h.flags|=65536,a=y&-y,h.lanes|=a,a=Zf(h.stateNode,m,a),tt(h,a),!1;case 1:if(o=h.type,E=h.stateNode,(h.flags&128)===0&&(typeof o.getDerivedStateFromError=="function"||E!==null&&typeof E.componentDidCatch=="function"&&(dr===null||!dr.has(E))))return h.flags|=65536,y&=-y,h.lanes|=y,y=ov(y),lv(y,a,h,m),tt(h,y),!1}h=h.return}while(h!==null);return!1}function Pn(a,o,h,m){o.child=a===null?X0(o,null,h,m):Yr(o,a.child,h,m)}function cv(a,o,h,m,y){h=h.render;var E=o.ref;if("ref"in m){var L={};for(var H in m)H!=="ref"&&(L[H]=m[H])}else L=m;return Fr(o),m=Wa(a,o,h,L,E,y),H=fl(),a!==null&&!Rn?(dl(a,o,y),ws(a,o,y)):(Pt&&H&&Pe(o),o.flags|=1,Pn(a,o,m,y),o.child)}function uv(a,o,h,m,y){if(a===null){var E=h.type;return typeof E=="function"&&!Rd(E)&&E.defaultProps===void 0&&h.compare===null?(o.tag=15,o.type=E,hv(a,o,E,m,y)):(a=Zc(h.type,null,m,o,o.mode,y),a.ref=o.ref,a.return=o,o.child=a)}if(E=a.child,!sd(a,y)){var L=E.memoizedProps;if(h=h.compare,h=h!==null?h:ve,h(L,m)&&a.ref===o.ref)return ws(a,o,y)}return o.flags|=1,a=sr(E,m),a.ref=o.ref,a.return=o,o.child=a}function hv(a,o,h,m,y){if(a!==null){var E=a.memoizedProps;if(ve(E,m)&&a.ref===o.ref)if(Rn=!1,o.pendingProps=m=E,sd(a,y))(a.flags&131072)!==0&&(Rn=!0);else return o.lanes=a.lanes,ws(a,o,y)}return Jf(a,o,h,m,y)}function fv(a,o,h){var m=o.pendingProps,y=m.children,E=(o.stateNode._pendingVisibility&2)!==0,L=a!==null?a.memoizedState:null;if(gl(a,o),m.mode==="hidden"||E){if((o.flags&128)!==0){if(m=L!==null?L.baseLanes|h:h,a!==null){for(y=o.child=a.child,E=0;y!==null;)E=E|y.lanes|y.childLanes,y=y.sibling;o.childLanes=E&~m}else o.childLanes=0,o.child=null;return dv(a,o,m,h)}if((h&536870912)!==0)o.memoizedState={baseLanes:0,cachePool:null},a!==null&&Wc(o,L!==null?L.cachePool:null),L!==null?ul(o,L):ka(),hl(o);else return o.lanes=o.childLanes=536870912,dv(a,o,L!==null?L.baseLanes|h:h,h)}else L!==null?(Wc(o,L.cachePool),ul(o,L),$i(),o.memoizedState=null):(a!==null&&Wc(o,null),ka(),$i());return Pn(a,o,y,h),o.child}function dv(a,o,h,m){var y=ld();return y=y===null?null:{parent:Ls?un._currentValue:un._currentValue2,pool:y},o.memoizedState={baseLanes:h,cachePool:y},a!==null&&Wc(o,null),ka(),hl(o),a!==null&&vl(a,o,m,!0),null}function gl(a,o){var h=o.ref;if(h===null)a!==null&&a.ref!==null&&(o.flags|=2097664);else{if(typeof h!="function"&&typeof h!="object")throw Error(i(284));(a===null||a.ref!==h)&&(o.flags|=2097664)}}function Jf(a,o,h,m,y){return Fr(o),h=Wa(a,o,h,m,void 0,y),m=fl(),a!==null&&!Rn?(dl(a,o,y),ws(a,o,y)):(Pt&&m&&Pe(o),o.flags|=1,Pn(a,o,h,y),o.child)}function pv(a,o,h,m,y,E){return Fr(o),o.updateQueue=null,h=zc(o,m,h,y),Bc(a),m=fl(),a!==null&&!Rn?(dl(a,o,E),ws(a,o,E)):(Pt&&m&&Pe(o),o.flags|=1,Pn(a,o,h,E),o.child)}function mv(a,o,h,m,y){if(Fr(o),o.stateNode===null){var E=eo,L=h.contextType;typeof L=="object"&&L!==null&&(E=Vn(L)),E=new h(m,E),o.memoizedState=E.state!==null&&E.state!==void 0?E.state:null,E.updater=tp,o.stateNode=E,E._reactInternals=o,E=o.stateNode,E.props=m,E.state=o.memoizedState,E.refs={},ke(o),L=h.contextType,E.context=typeof L=="object"&&L!==null?Vn(L):eo,E.state=o.memoizedState,L=h.getDerivedStateFromProps,typeof L=="function"&&(jf(o,h,L,m),E.state=o.memoizedState),typeof h.getDerivedStateFromProps=="function"||typeof E.getSnapshotBeforeUpdate=="function"||typeof E.UNSAFE_componentWillMount!="function"&&typeof E.componentWillMount!="function"||(L=E.state,typeof E.componentWillMount=="function"&&E.componentWillMount(),typeof E.UNSAFE_componentWillMount=="function"&&E.UNSAFE_componentWillMount(),L!==E.state&&tp.enqueueReplaceState(E,E.state,null),st(o,m,E,y),Ae(),E.state=o.memoizedState),typeof E.componentDidMount=="function"&&(o.flags|=4194308),m=!0}else if(a===null){E=o.stateNode;var H=o.memoizedProps,K=zr(h,H);E.props=K;var ce=E.context,be=h.contextType;L=eo,typeof be=="object"&&be!==null&&(L=Vn(be));var Ie=h.getDerivedStateFromProps;be=typeof Ie=="function"||typeof E.getSnapshotBeforeUpdate=="function",H=o.pendingProps!==H,be||typeof E.UNSAFE_componentWillReceiveProps!="function"&&typeof E.componentWillReceiveProps!="function"||(H||ce!==L)&&rv(o,E,m,L),cr=!1;var ze=o.memoizedState;E.state=ze,st(o,m,E,y),Ae(),ce=o.memoizedState,H||ze!==ce||cr?(typeof Ie=="function"&&(jf(o,h,Ie,m),ce=o.memoizedState),(K=cr||sv(o,h,K,m,ze,ce,L))?(be||typeof E.UNSAFE_componentWillMount!="function"&&typeof E.componentWillMount!="function"||(typeof E.componentWillMount=="function"&&E.componentWillMount(),typeof E.UNSAFE_componentWillMount=="function"&&E.UNSAFE_componentWillMount()),typeof E.componentDidMount=="function"&&(o.flags|=4194308)):(typeof E.componentDidMount=="function"&&(o.flags|=4194308),o.memoizedProps=m,o.memoizedState=ce),E.props=m,E.state=ce,E.context=L,m=K):(typeof E.componentDidMount=="function"&&(o.flags|=4194308),m=!1)}else{E=o.stateNode,Ke(a,o),L=o.memoizedProps,be=zr(h,L),E.props=be,Ie=o.pendingProps,ze=E.context,ce=h.contextType,K=eo,typeof ce=="object"&&ce!==null&&(K=Vn(ce)),H=h.getDerivedStateFromProps,(ce=typeof H=="function"||typeof E.getSnapshotBeforeUpdate=="function")||typeof E.UNSAFE_componentWillReceiveProps!="function"&&typeof E.componentWillReceiveProps!="function"||(L!==Ie||ze!==K)&&rv(o,E,m,K),cr=!1,ze=o.memoizedState,E.state=ze,st(o,m,E,y),Ae();var gt=o.memoizedState;L!==Ie||ze!==gt||cr||a!==null&&a.dependencies!==null&&kc(a.dependencies)?(typeof H=="function"&&(jf(o,h,H,m),gt=o.memoizedState),(be=cr||sv(o,h,be,m,ze,gt,K)||a!==null&&a.dependencies!==null&&kc(a.dependencies))?(ce||typeof E.UNSAFE_componentWillUpdate!="function"&&typeof E.componentWillUpdate!="function"||(typeof E.componentWillUpdate=="function"&&E.componentWillUpdate(m,gt,K),typeof E.UNSAFE_componentWillUpdate=="function"&&E.UNSAFE_componentWillUpdate(m,gt,K)),typeof E.componentDidUpdate=="function"&&(o.flags|=4),typeof E.getSnapshotBeforeUpdate=="function"&&(o.flags|=1024)):(typeof E.componentDidUpdate!="function"||L===a.memoizedProps&&ze===a.memoizedState||(o.flags|=4),typeof E.getSnapshotBeforeUpdate!="function"||L===a.memoizedProps&&ze===a.memoizedState||(o.flags|=1024),o.memoizedProps=m,o.memoizedState=gt),E.props=m,E.state=gt,E.context=K,m=be):(typeof E.componentDidUpdate!="function"||L===a.memoizedProps&&ze===a.memoizedState||(o.flags|=4),typeof E.getSnapshotBeforeUpdate!="function"||L===a.memoizedProps&&ze===a.memoizedState||(o.flags|=1024),m=!1)}return E=m,gl(a,o),m=(o.flags&128)!==0,E||m?(E=o.stateNode,h=m&&typeof h.getDerivedStateFromError!="function"?null:E.render(),o.flags|=1,a!==null&&m?(o.child=Yr(o,a.child,null,y),o.child=Yr(o,null,h,y)):Pn(a,o,h,y),o.memoizedState=E.state,a=o.child):a=ws(a,o,y),a}function gv(a,o,h,m){return yt(),o.flags|=256,Pn(a,o,h,m),o.child}function Qf(a){return{baseLanes:a,cachePool:Mv()}}function $f(a,o,h){return a=a!==null?a.childLanes&~h:0,o&&(a|=Xi),a}function vv(a,o,h){var m=o.pendingProps,y=!1,E=(o.flags&128)!==0,L;if((L=E)||(L=a!==null&&a.memoizedState===null?!1:(Mn.current&2)!==0),L&&(y=!0,o.flags&=-129),L=(o.flags&32)!==0,o.flags&=-33,a===null){if(Pt){if(y?Bi(o):$i(),Pt){var H=Xn,K;(K=H)&&(H=$E(H,ys),H!==null?(o.memoizedState={dehydrated:H,treeContext:qr!==null?{id:Us,overflow:Ps}:null,retryLane:536870912},K=t(18,null,null,0),K.stateNode=H,K.return=o,o.child=K,ti=o,Xn=null,K=!0):K=!1),K||Ge(o)}if(H=o.memoizedState,H!==null&&(H=H.dehydrated,H!==null))return Gd(H)?o.lanes=16:o.lanes=536870912,null;ci(o)}return H=m.children,m=m.fallback,y?($i(),y=o.mode,H=td({mode:"hidden",children:H},y),m=kr(m,y,h,null),H.return=o,m.return=o,H.sibling=m,o.child=H,y=o.child,y.memoizedState=Qf(h),y.childLanes=$f(a,L,h),o.memoizedState=np,m):(Bi(o),ed(o,H))}if(K=a.memoizedState,K!==null&&(H=K.dehydrated,H!==null)){if(E)o.flags&256?(Bi(o),o.flags&=-257,o=nd(a,o,h)):o.memoizedState!==null?($i(),o.child=a.child,o.flags|=128,o=null):($i(),y=m.fallback,H=o.mode,m=td({mode:"visible",children:m.children},H),y=kr(y,H,h,null),y.flags|=2,m.return=o,y.return=o,m.sibling=y,o.child=m,Yr(o,a.child,null,h),m=o.child,m.memoizedState=Qf(h),m.childLanes=$f(a,L,h),o.memoizedState=np,o=y);else if(Bi(o),Gd(H))L=WE(H).digest,m=Error(i(419)),m.stack="",m.digest=L,lt({value:m,source:null,stack:null}),o=nd(a,o,h);else if(Rn||vl(a,o,h,!1),L=(h&a.childLanes)!==0,Rn||L){if(L=en,L!==null){if(m=h&-h,(m&42)!==0)m=1;else switch(m){case 2:m=1;break;case 8:m=4;break;case 32:m=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:m=64;break;case 268435456:m=134217728;break;default:m=0}if(m=(m&(L.suspendedLanes|h))!==0?0:m,m!==0&&m!==K.retryLane)throw K.retryLane=m,Ee(a,m),ei(L,a,m),q0}Vd(H)||bd(),o=nd(a,o,h)}else Vd(H)?(o.flags|=128,o.child=a.child,o=KM.bind(null,a),qE(H,o),o=null):(a=K.treeContext,zi&&(Xn=ZE(H),ti=o,Pt=!0,ns=null,ys=!1,a!==null&&(Hi[Vi++]=Us,Hi[Vi++]=Ps,Hi[Vi++]=qr,Us=a.id,Ps=a.overflow,qr=o)),o=ed(o,m.children),o.flags|=4096);return o}return y?($i(),y=m.fallback,H=o.mode,K=a.child,E=K.sibling,m=sr(K,{mode:"hidden",children:m.children}),m.subtreeFlags=K.subtreeFlags&31457280,E!==null?y=sr(E,y):(y=kr(y,H,h,null),y.flags|=2),y.return=o,m.return=o,m.sibling=y,o.child=m,m=y,y=o.child,H=a.child.memoizedState,H===null?H=Qf(h):(K=H.cachePool,K!==null?(E=Ls?un._currentValue:un._currentValue2,K=K.parent!==E?{parent:E,pool:E}:K):K=Mv(),H={baseLanes:H.baseLanes|h,cachePool:K}),y.memoizedState=H,y.childLanes=$f(a,L,h),o.memoizedState=np,m):(Bi(o),h=a.child,a=h.sibling,h=sr(h,{mode:"visible",children:m.children}),h.return=o,h.sibling=null,a!==null&&(L=o.deletions,L===null?(o.deletions=[a],o.flags|=16):L.push(a)),o.child=h,o.memoizedState=null,h)}function ed(a,o){return o=td({mode:"visible",children:o},a.mode),o.return=a,a.child=o}function td(a,o){return o0(a,o,0,null)}function nd(a,o,h){return Yr(o,a.child,null,h),a=ed(o,o.pendingProps.children),a.flags|=2,o.memoizedState=null,a}function _v(a,o,h){a.lanes|=o;var m=a.alternate;m!==null&&(m.lanes|=o),rd(a.return,o,h)}function id(a,o,h,m,y){var E=a.memoizedState;E===null?a.memoizedState={isBackwards:o,rendering:null,renderingStartTime:0,last:m,tail:h,tailMode:y}:(E.isBackwards=o,E.rendering=null,E.renderingStartTime=0,E.last=m,E.tail=h,E.tailMode=y)}function yv(a,o,h){var m=o.pendingProps,y=m.revealOrder,E=m.tail;if(Pn(a,o,m.children,h),m=Mn.current,(m&2)!==0)m=m&1|2,o.flags|=128;else{if(a!==null&&(a.flags&128)!==0)e:for(a=o.child;a!==null;){if(a.tag===13)a.memoizedState!==null&&_v(a,h,o);else if(a.tag===19)_v(a,h,o);else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break e;for(;a.sibling===null;){if(a.return===null||a.return===o)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}m&=1}switch(b(Mn,m),y){case"forwards":for(h=o.child,y=null;h!==null;)a=h.alternate,a!==null&&Br(a)===null&&(y=h),h=h.sibling;h=y,h===null?(y=o.child,o.child=null):(y=h.sibling,h.sibling=null),id(o,!1,y,h,E);break;case"backwards":for(h=null,y=o.child,o.child=null;y!==null;){if(a=y.alternate,a!==null&&Br(a)===null){o.child=y;break}a=y.sibling,y.sibling=h,h=y,y=a}id(o,!0,h,null,E);break;case"together":id(o,!1,null,null,void 0);break;default:o.memoizedState=null}return o.child}function ws(a,o,h){if(a!==null&&(o.dependencies=a.dependencies),fr|=o.lanes,(h&o.childLanes)===0)if(a!==null){if(vl(a,o,h,!1),(h&o.childLanes)===0)return null}else return null;if(a!==null&&o.child!==a.child)throw Error(i(153));if(o.child!==null){for(a=o.child,h=sr(a,a.pendingProps),o.child=h,h.return=o;a.sibling!==null;)a=a.sibling,h=h.sibling=sr(a,a.pendingProps),h.return=o;h.sibling=null}return o.child}function sd(a,o){return(a.lanes&o)!==0?!0:(a=a.dependencies,!!(a!==null&&kc(a)))}function BM(a,o,h){switch(o.tag){case 3:te(o,o.stateNode.containerInfo),er(o,un,a.memoizedState.cache),yt();break;case 27:case 5:We(o);break;case 4:te(o,o.stateNode.containerInfo);break;case 10:er(o,o.type,o.memoizedProps.value);break;case 13:var m=o.memoizedState;if(m!==null)return m.dehydrated!==null?(Bi(o),o.flags|=128,null):(h&o.child.childLanes)!==0?vv(a,o,h):(Bi(o),a=ws(a,o,h),a!==null?a.sibling:null);Bi(o);break;case 19:var y=(a.flags&128)!==0;if(m=(h&o.childLanes)!==0,m||(vl(a,o,h,!1),m=(h&o.childLanes)!==0),y){if(m)return yv(a,o,h);o.flags|=128}if(y=o.memoizedState,y!==null&&(y.rendering=null,y.tail=null,y.lastEffect=null),b(Mn,Mn.current),m)break;return null;case 22:case 23:return o.lanes=0,fv(a,o,h);case 24:er(o,un,a.memoizedState.cache)}return ws(a,o,h)}function xv(a,o,h){if(a!==null)if(a.memoizedProps!==o.pendingProps)Rn=!0;else{if(!sd(a,h)&&(o.flags&128)===0)return Rn=!1,BM(a,o,h);Rn=(a.flags&131072)!==0}else Rn=!1,Pt&&(o.flags&1048576)!==0&&ye(o,su,o.index);switch(o.lanes=0,o.tag){case 16:e:{a=o.pendingProps;var m=o.elementType,y=m._init;if(m=y(m._payload),o.type=m,typeof m=="function")Rd(m)?(a=zr(m,a),o.tag=1,o=mv(null,o,m,a,h)):(o.tag=0,o=Jf(null,o,m,a,h));else{if(m!=null){if(y=m.$$typeof,y===Ud){o.tag=11,o=cv(null,o,m,a,h);break e}else if(y===Od){o.tag=14,o=uv(null,o,m,a,h);break e}}throw o=l(m)||m,Error(i(306,o,""))}}return o;case 0:return Jf(a,o,o.type,o.pendingProps,h);case 1:return m=o.type,y=zr(m,o.pendingProps),mv(a,o,m,y,h);case 3:e:{if(te(o,o.stateNode.containerInfo),a===null)throw Error(i(387));var E=o.pendingProps;y=o.memoizedState,m=y.element,Ke(a,o),st(o,E,null,h);var L=o.memoizedState;if(E=L.cache,er(o,un,E),E!==y.cache&&ad(o,[un],h,!0),Ae(),E=L.element,zi&&y.isDehydrated)if(y={element:E,isDehydrated:!1,cache:L.cache},o.updateQueue.baseState=y,o.memoizedState=y,o.flags&256){o=gv(a,o,E,h);break e}else if(E!==m){m=le(Error(i(424)),o),lt(m),o=gv(a,o,E,h);break e}else for(zi&&(Xn=jE(o.stateNode.containerInfo),ti=o,Pt=!0,ns=null,ys=!0),h=X0(o,null,E,h),o.child=h;h;)h.flags=h.flags&-3|4096,h=h.sibling;else{if(yt(),E===m){o=ws(a,o,h);break e}Pn(a,o,E,h)}o=o.child}return o;case 26:if(Fi)return gl(a,o),a===null?(h=P0(o.type,null,o.pendingProps,null))?o.memoizedState=h:Pt||(o.stateNode=hb(o.type,o.pendingProps,lr.current,o)):o.memoizedState=P0(o.type,a.memoizedProps,o.pendingProps,a.memoizedState),null;case 27:if(kn)return We(o),a===null&&kn&&Pt&&(m=o.stateNode=H0(o.type,o.pendingProps,lr.current,In.current,!1),ti=o,ys=!0,Xn=N0(m)),m=o.pendingProps.children,a!==null||Pt?Pn(a,o,m,h):o.child=Yr(o,null,m,h),gl(a,o),o.child;case 5:return a===null&&Pt&&(lb(o.type,o.pendingProps,In.current),(y=m=Xn)&&(m=JE(m,o.type,o.pendingProps,ys),m!==null?(o.stateNode=m,ti=o,Xn=N0(m),ys=!1,y=!0):y=!1),y||Ge(o)),We(o),y=o.type,E=o.pendingProps,L=a!==null?a.memoizedProps:null,m=E.children,$c(y,E)?m=null:L!==null&&$c(y,L)&&(o.flags|=32),o.memoizedState!==null&&(y=Wa(a,o,kf,null,null,h),Ls?Wr._currentValue=y:Wr._currentValue2=y),gl(a,o),Pn(a,o,m,h),o.child;case 6:return a===null&&Pt&&(cb(o.pendingProps,In.current),(a=h=Xn)&&(h=QE(h,o.pendingProps,ys),h!==null?(o.stateNode=h,ti=o,Xn=null,a=!0):a=!1),a||Ge(o)),null;case 13:return vv(a,o,h);case 4:return te(o,o.stateNode.containerInfo),m=o.pendingProps,a===null?o.child=Yr(o,null,m,h):Pn(a,o,m,h),o.child;case 11:return cv(a,o,o.type,o.pendingProps,h);case 7:return Pn(a,o,o.pendingProps,h),o.child;case 8:return Pn(a,o,o.pendingProps.children,h),o.child;case 12:return Pn(a,o,o.pendingProps.children,h),o.child;case 10:return m=o.pendingProps,er(o,o.type,m.value),Pn(a,o,m.children,h),o.child;case 9:return y=o.type._context,m=o.pendingProps.children,Fr(o),y=Vn(y),m=m(y),o.flags|=1,Pn(a,o,m,h),o.child;case 14:return uv(a,o,o.type,o.pendingProps,h);case 15:return hv(a,o,o.type,o.pendingProps,h);case 19:return yv(a,o,h);case 22:return fv(a,o,h);case 24:return Fr(o),m=Vn(un),a===null?(y=ld(),y===null&&(y=en,E=od(),y.pooledCache=E,E.refCount++,E!==null&&(y.pooledCacheLanes|=h),y=E),o.memoizedState={parent:m,cache:y},ke(o),er(o,un,y)):((a.lanes&h)!==0&&(Ke(a,o),st(o,null,null,h),Ae()),y=a.memoizedState,E=o.memoizedState,y.parent!==m?(y={parent:m,cache:m},o.memoizedState=y,o.lanes===0&&(o.memoizedState=o.updateQueue.baseState=y),er(o,un,m)):(m=E.cache,er(o,un,m),m!==y.cache&&ad(o,[un],h,!0))),Pn(a,o,o.pendingProps.children,h),o.child;case 29:throw o.pendingProps}throw Error(i(156,o.tag))}function er(a,o,h){Ls?(b(fu,o._currentValue),o._currentValue=h):(b(fu,o._currentValue2),o._currentValue2=h)}function Cs(a){var o=fu.current;Ls?a._currentValue=o:a._currentValue2=o,_(fu)}function rd(a,o,h){for(;a!==null;){var m=a.alternate;if((a.childLanes&o)!==o?(a.childLanes|=o,m!==null&&(m.childLanes|=o)):m!==null&&(m.childLanes&o)!==o&&(m.childLanes|=o),a===h)break;a=a.return}}function ad(a,o,h,m){var y=a.child;for(y!==null&&(y.return=a);y!==null;){var E=y.dependencies;if(E!==null){var L=y.child;E=E.firstContext;e:for(;E!==null;){var H=E;E=y;for(var K=0;K<o.length;K++)if(H.context===o[K]){E.lanes|=h,H=E.alternate,H!==null&&(H.lanes|=h),rd(E.return,h,a),m||(L=null);break e}E=H.next}}else if(y.tag===18){if(L=y.return,L===null)throw Error(i(341));L.lanes|=h,E=L.alternate,E!==null&&(E.lanes|=h),rd(L,h,a),L=null}else L=y.child;if(L!==null)L.return=y;else for(L=y;L!==null;){if(L===a){L=null;break}if(y=L.sibling,y!==null){y.return=L.return,L=y;break}L=L.return}y=L}}function vl(a,o,h,m){a=null;for(var y=o,E=!1;y!==null;){if(!E){if((y.flags&524288)!==0)E=!0;else if((y.flags&262144)!==0)break}if(y.tag===10){var L=y.alternate;if(L===null)throw Error(i(387));if(L=L.memoizedProps,L!==null){var H=y.type;Ei(y.pendingProps.value,L.value)||(a!==null?a.push(H):a=[H])}}else if(y===ru.current){if(L=y.alternate,L===null)throw Error(i(387));L.memoizedState.memoizedState!==y.memoizedState.memoizedState&&(a!==null?a.push(Wr):a=[Wr])}y=y.return}a!==null&&ad(o,a,h,m),o.flags|=262144}function kc(a){for(a=a.firstContext;a!==null;){var o=a.context;if(!Ei(Ls?o._currentValue:o._currentValue2,a.memoizedValue))return!0;a=a.next}return!1}function Fr(a){Jr=a,Is=null,a=a.dependencies,a!==null&&(a.firstContext=null)}function Vn(a){return Sv(Jr,a)}function Xc(a,o){return Jr===null&&Fr(a),Sv(a,o)}function Sv(a,o){var h=Ls?o._currentValue:o._currentValue2;if(o={context:o,memoizedValue:h,next:null},Is===null){if(a===null)throw Error(i(308));Is=o,a.dependencies={lanes:0,firstContext:o},a.flags|=524288}else Is=Is.next=o;return h}function od(){return{controller:new wb,data:new Map,refCount:0}}function _l(a){a.refCount--,a.refCount===0&&Cb(Db,function(){a.controller.abort()})}function ld(){var a=Qr.current;return a!==null?a:en.pooledCache}function Wc(a,o){o===null?b(Qr,Qr.current):b(Qr,o.pool)}function Mv(){var a=ld();return a===null?null:{parent:Ls?un._currentValue:un._currentValue2,pool:a}}function gi(a){a.flags|=4}function Ev(a,o){if(a!==null&&a.child===o.child)return!1;if((o.flags&16)!==0)return!0;for(a=o.child;a!==null;){if((a.flags&13878)!==0||(a.subtreeFlags&13878)!==0)return!0;a=a.sibling}return!1}function cd(a,o,h,m){if(Gn)for(h=o.child;h!==null;){if(h.tag===5||h.tag===6)Fd(a,h.stateNode);else if(!(h.tag===4||kn&&h.tag===27)&&h.child!==null){h.child.return=h,h=h.child;continue}if(h===o)break;for(;h.sibling===null;){if(h.return===null||h.return===o)return;h=h.return}h.sibling.return=h.return,h=h.sibling}else if(or)for(var y=o.child;y!==null;){if(y.tag===5){var E=y.stateNode;h&&m&&(E=w0(E,y.type,y.memoizedProps)),Fd(a,E)}else if(y.tag===6)E=y.stateNode,h&&m&&(E=C0(E,y.memoizedProps)),Fd(a,E);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)E=y.child,E!==null&&(E.return=y),cd(a,y,!0,!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===o)break;for(;y.sibling===null;){if(y.return===null||y.return===o)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function bv(a,o,h,m){if(or)for(var y=o.child;y!==null;){if(y.tag===5){var E=y.stateNode;h&&m&&(E=w0(E,y.type,y.memoizedProps)),A0(a,E)}else if(y.tag===6)E=y.stateNode,h&&m&&(E=C0(E,y.memoizedProps)),A0(a,E);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)E=y.child,E!==null&&(E.return=y),bv(a,y,!(y.memoizedProps!==null&&y.memoizedProps.mode==="manual"),!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===o)break;for(;y.sibling===null;){if(y.return===null||y.return===o)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function Tv(a,o){if(or&&Ev(a,o)){a=o.stateNode;var h=a.containerInfo,m=T0();bv(m,o,!1,!1),a.pendingChildren=m,gi(o),XE(h,m)}}function ud(a,o,h,m){if(Gn)a.memoizedProps!==m&&gi(o);else if(or){var y=a.stateNode,E=a.memoizedProps;if((a=Ev(a,o))||E!==m){var L=In.current;E=kE(y,h,E,m,!a,null),E===y?o.stateNode=y:(y0(E,h,m,L)&&gi(o),o.stateNode=E,a?cd(E,o,!1,!1):gi(o))}else o.stateNode=y}}function hd(a,o,h){if(vE(o,h)){if(a.flags|=16777216,!M0(o,h))if(Zv())a.flags|=8192;else throw lo=lu,$d}else a.flags&=-16777217}function Av(a,o){if(db(o)){if(a.flags|=16777216,!F0(o))if(Zv())a.flags|=8192;else throw lo=lu,$d}else a.flags&=-16777217}function qc(a,o){o!==null&&(a.flags|=4),a.flags&16384&&(o=a.tag!==22?w():536870912,a.lanes|=o,go|=o)}function yl(a,o){if(!Pt)switch(a.tailMode){case"hidden":o=a.tail;for(var h=null;o!==null;)o.alternate!==null&&(h=o),o=o.sibling;h===null?a.tail=null:h.sibling=null;break;case"collapsed":h=a.tail;for(var m=null;h!==null;)h.alternate!==null&&(m=h),h=h.sibling;m===null?o||a.tail===null?a.tail=null:a.tail.sibling=null:m.sibling=null}}function ln(a){var o=a.alternate!==null&&a.alternate.child===a.child,h=0,m=0;if(o)for(var y=a.child;y!==null;)h|=y.lanes|y.childLanes,m|=y.subtreeFlags&31457280,m|=y.flags&31457280,y.return=a,y=y.sibling;else for(y=a.child;y!==null;)h|=y.lanes|y.childLanes,m|=y.subtreeFlags,m|=y.flags,y.return=a,y=y.sibling;return a.subtreeFlags|=m,a.childLanes=h,o}function zM(a,o,h){var m=o.pendingProps;switch(Je(o),o.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return ln(o),null;case 1:return ln(o),null;case 3:return h=o.stateNode,m=null,a!==null&&(m=a.memoizedState.cache),o.memoizedState.cache!==m&&(o.flags|=2048),Cs(un),xe(),h.pendingContext&&(h.context=h.pendingContext,h.pendingContext=null),(a===null||a.child===null)&&(zt(o)?gi(o):a===null||a.memoizedState.isDehydrated&&(o.flags&256)===0||(o.flags|=1024,ns!==null&&(Md(ns),ns=null))),Tv(a,o),ln(o),null;case 26:if(Fi){h=o.type;var y=o.memoizedState;return a===null?(gi(o),y!==null?(ln(o),Av(o,y)):(ln(o),hd(o,h,m))):y?y!==a.memoizedState?(gi(o),ln(o),Av(o,y)):(ln(o),o.flags&=-16777217):(Gn?a.memoizedProps!==m&&gi(o):ud(a,o,h,m),ln(o),hd(o,h,m)),null}case 27:if(kn){if(De(o),h=lr.current,y=o.type,a!==null&&o.stateNode!=null)Gn?a.memoizedProps!==m&&gi(o):ud(a,o,y,m);else{if(!m){if(o.stateNode===null)throw Error(i(166));return ln(o),null}a=In.current,zt(o)?ft(o,a):(a=H0(y,m,h,a,!0),o.stateNode=a,gi(o))}return ln(o),null}case 5:if(De(o),h=o.type,a!==null&&o.stateNode!=null)ud(a,o,h,m);else{if(!m){if(o.stateNode===null)throw Error(i(166));return ln(o),null}a=In.current,zt(o)?ft(o,a):(y=uE(h,m,lr.current,a,o),cd(y,o,!1,!1),o.stateNode=y,y0(y,h,m,a)&&gi(o))}return ln(o),hd(o,o.type,o.pendingProps),null;case 6:if(a&&o.stateNode!=null)h=a.memoizedProps,Gn?h!==m&&gi(o):or&&(h!==m?(o.stateNode=x0(m,lr.current,In.current,o),gi(o)):o.stateNode=a.stateNode);else{if(typeof m!="string"&&o.stateNode===null)throw Error(i(166));if(a=lr.current,h=In.current,zt(o)){if(!zi)throw Error(i(176));if(a=o.stateNode,h=o.memoizedProps,m=null,y=ti,y!==null)switch(y.tag){case 27:case 5:m=y.memoizedProps}tb(a,h,o,m)||Ge(o)}else o.stateNode=x0(m,a,h,o)}return ln(o),null;case 13:if(m=o.memoizedState,a===null||a.memoizedState!==null&&a.memoizedState.dehydrated!==null){if(y=zt(o),m!==null&&m.dehydrated!==null){if(a===null){if(!y)throw Error(i(318));if(!zi)throw Error(i(344));if(y=o.memoizedState,y=y!==null?y.dehydrated:null,!y)throw Error(i(317));nb(y,o)}else yt(),(o.flags&128)===0&&(o.memoizedState=null),o.flags|=4;ln(o),y=!1}else ns!==null&&(Md(ns),ns=null),y=!0;if(!y)return o.flags&256?(ci(o),o):(ci(o),null)}if(ci(o),(o.flags&128)!==0)return o.lanes=h,o;if(h=m!==null,a=a!==null&&a.memoizedState!==null,h){m=o.child,y=null,m.alternate!==null&&m.alternate.memoizedState!==null&&m.alternate.memoizedState.cachePool!==null&&(y=m.alternate.memoizedState.cachePool.pool);var E=null;m.memoizedState!==null&&m.memoizedState.cachePool!==null&&(E=m.memoizedState.cachePool.pool),E!==y&&(m.flags|=2048)}return h!==a&&h&&(o.child.flags|=8192),qc(o,o.updateQueue),ln(o),null;case 4:return xe(),Tv(a,o),a===null&&dE(o.stateNode.containerInfo),ln(o),null;case 10:return Cs(o.type),ln(o),null;case 19:if(_(Mn),y=o.memoizedState,y===null)return ln(o),null;if(m=(o.flags&128)!==0,E=y.rendering,E===null)if(m)yl(y,!1);else{if(fn!==0||a!==null&&(a.flags&128)!==0)for(a=o.child;a!==null;){if(E=Br(a),E!==null){for(o.flags|=128,yl(y,!1),a=E.updateQueue,o.updateQueue=a,qc(o,a),o.subtreeFlags=0,a=h,h=o.child;h!==null;)a0(h,a),h=h.sibling;return b(Mn,Mn.current&1|2),o.child}a=a.sibling}y.tail!==null&&ts()>Pl&&(o.flags|=128,m=!0,yl(y,!1),o.lanes=4194304)}else{if(!m)if(a=Br(E),a!==null){if(o.flags|=128,m=!0,a=a.updateQueue,o.updateQueue=a,qc(o,a),yl(y,!0),y.tail===null&&y.tailMode==="hidden"&&!E.alternate&&!Pt)return ln(o),null}else 2*ts()-y.renderingStartTime>Pl&&h!==536870912&&(o.flags|=128,m=!0,yl(y,!1),o.lanes=4194304);y.isBackwards?(E.sibling=o.child,o.child=E):(a=y.last,a!==null?a.sibling=E:o.child=E,y.last=E)}return y.tail!==null?(o=y.tail,y.rendering=o,y.tail=o.sibling,y.renderingStartTime=ts(),o.sibling=null,a=Mn.current,b(Mn,m?a&1|2:a&1),o):(ln(o),null);case 22:case 23:return ci(o),Qi(),m=o.memoizedState!==null,a!==null?a.memoizedState!==null!==m&&(o.flags|=8192):m&&(o.flags|=8192),m?(h&536870912)!==0&&(o.flags&128)===0&&(ln(o),o.subtreeFlags&6&&(o.flags|=8192)):ln(o),h=o.updateQueue,h!==null&&qc(o,h.retryQueue),h=null,a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(h=a.memoizedState.cachePool.pool),m=null,o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(m=o.memoizedState.cachePool.pool),m!==h&&(o.flags|=2048),a!==null&&_(Qr),null;case 24:return h=null,a!==null&&(h=a.memoizedState.cache),o.memoizedState.cache!==h&&(o.flags|=2048),Cs(un),ln(o),null;case 25:return null}throw Error(i(156,o.tag))}function FM(a,o){switch(Je(o),o.tag){case 1:return a=o.flags,a&65536?(o.flags=a&-65537|128,o):null;case 3:return Cs(un),xe(),a=o.flags,(a&65536)!==0&&(a&128)===0?(o.flags=a&-65537|128,o):null;case 26:case 27:case 5:return De(o),null;case 13:if(ci(o),a=o.memoizedState,a!==null&&a.dehydrated!==null){if(o.alternate===null)throw Error(i(340));yt()}return a=o.flags,a&65536?(o.flags=a&-65537|128,o):null;case 19:return _(Mn),null;case 4:return xe(),null;case 10:return Cs(o.type),null;case 22:case 23:return ci(o),Qi(),a!==null&&_(Qr),a=o.flags,a&65536?(o.flags=a&-65537|128,o):null;case 24:return Cs(un),null;case 25:return null;default:return null}}function Rv(a,o){switch(Je(o),o.tag){case 3:Cs(un),xe();break;case 26:case 27:case 5:De(o);break;case 4:xe();break;case 13:ci(o);break;case 19:_(Mn);break;case 10:Cs(o.type);break;case 22:case 23:ci(o),Qi(),a!==null&&_(Qr);break;case 24:Cs(un)}}function xl(a,o){try{var h=o.updateQueue,m=h!==null?h.lastEffect:null;if(m!==null){var y=m.next;h=y;do{if((h.tag&a)===a){m=void 0;var E=h.create,L=h.inst;m=E(),L.destroy=m}h=h.next}while(h!==y)}}catch(H){Wt(o,o.return,H)}}function tr(a,o,h){try{var m=o.updateQueue,y=m!==null?m.lastEffect:null;if(y!==null){var E=y.next;m=E;do{if((m.tag&a)===a){var L=m.inst,H=L.destroy;if(H!==void 0){L.destroy=void 0,y=o;var K=h;try{H()}catch(ce){Wt(y,K,ce)}}}m=m.next}while(m!==E)}}catch(ce){Wt(o,o.return,ce)}}function wv(a){var o=a.updateQueue;if(o!==null){var h=a.stateNode;try{Le(o,h)}catch(m){Wt(a,a.return,m)}}}function Cv(a,o,h){h.props=zr(a.type,a.memoizedProps),h.state=a.memoizedState;try{h.componentWillUnmount()}catch(m){Wt(a,o,m)}}function Hr(a,o){try{var h=a.ref;if(h!==null){var m=a.stateNode;switch(a.tag){case 26:case 27:case 5:var y=El(m);break;default:y=m}typeof h=="function"?a.refCleanup=h(y):h.current=y}}catch(E){Wt(a,o,E)}}function vi(a,o){var h=a.ref,m=a.refCleanup;if(h!==null)if(typeof m=="function")try{m()}catch(y){Wt(a,o,y)}finally{a.refCleanup=null,a=a.alternate,a!=null&&(a.refCleanup=null)}else if(typeof h=="function")try{h(null)}catch(y){Wt(a,o,y)}else h.current=null}function Dv(a){var o=a.type,h=a.memoizedProps,m=a.stateNode;try{LE(m,o,h,a)}catch(y){Wt(a,a.return,y)}}function Nv(a,o,h){try{UE(a.stateNode,a.type,h,o,a)}catch(m){Wt(a,a.return,m)}}function Lv(a){return a.tag===5||a.tag===3||(Fi?a.tag===26:!1)||(kn?a.tag===27:!1)||a.tag===4}function fd(a){e:for(;;){for(;a.sibling===null;){if(a.return===null||Lv(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;a.tag!==5&&a.tag!==6&&(!kn||a.tag!==27)&&a.tag!==18;){if(a.flags&2||a.child===null||a.tag===4)continue e;a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}function dd(a,o,h){var m=a.tag;if(m===5||m===6)a=a.stateNode,o?IE(h,a,o):DE(h,a);else if(!(m===4||kn&&m===27)&&(a=a.child,a!==null))for(dd(a,o,h),a=a.sibling;a!==null;)dd(a,o,h),a=a.sibling}function Yc(a,o,h){var m=a.tag;if(m===5||m===6)a=a.stateNode,o?PE(h,a,o):CE(h,a);else if(!(m===4||kn&&m===27)&&(a=a.child,a!==null))for(Yc(a,o,h),a=a.sibling;a!==null;)Yc(a,o,h),a=a.sibling}function Uv(a,o,h){a=a.containerInfo;try{R0(a,h)}catch(m){Wt(o,o.return,m)}}function HM(a,o){for(lE(a.containerInfo),wn=o;wn!==null;)if(a=wn,o=a.child,(a.subtreeFlags&1028)!==0&&o!==null)o.return=a,wn=o;else for(;wn!==null;){a=wn;var h=a.alternate;switch(o=a.flags,a.tag){case 0:break;case 11:case 15:break;case 1:if((o&1024)!==0&&h!==null){o=void 0;var m=a,y=h.memoizedProps;h=h.memoizedState;var E=m.stateNode;try{var L=zr(m.type,y,m.elementType===m.type);o=E.getSnapshotBeforeUpdate(L,h),E.__reactInternalSnapshotBeforeUpdate=o}catch(H){Wt(m,m.return,H)}}break;case 3:(o&1024)!==0&&Gn&&GE(a.stateNode.containerInfo);break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((o&1024)!==0)throw Error(i(163))}if(o=a.sibling,o!==null){o.return=a.return,wn=o;break}wn=a.return}return L=j0,j0=!1,L}function Pv(a,o,h){var m=h.flags;switch(h.tag){case 0:case 11:case 15:Ds(a,h),m&4&&xl(5,h);break;case 1:if(Ds(a,h),m&4)if(a=h.stateNode,o===null)try{a.componentDidMount()}catch(H){Wt(h,h.return,H)}else{var y=zr(h.type,o.memoizedProps);o=o.memoizedState;try{a.componentDidUpdate(y,o,a.__reactInternalSnapshotBeforeUpdate)}catch(H){Wt(h,h.return,H)}}m&64&&wv(h),m&512&&Hr(h,h.return);break;case 3:if(Ds(a,h),m&64&&(m=h.updateQueue,m!==null)){if(a=null,h.child!==null)switch(h.child.tag){case 27:case 5:a=El(h.child.stateNode);break;case 1:a=h.child.stateNode}try{Le(m,a)}catch(H){Wt(h,h.return,H)}}break;case 26:if(Fi){Ds(a,h),m&512&&Hr(h,h.return);break}case 27:case 5:Ds(a,h),o===null&&m&4&&Dv(h),m&512&&Hr(h,h.return);break;case 12:Ds(a,h);break;case 13:Ds(a,h),m&4&&Ov(a,h);break;case 22:if(y=h.memoizedState!==null||Os,!y){o=o!==null&&o.memoizedState!==null||hn;var E=Os,L=hn;Os=y,(hn=o)&&!L?nr(a,h,(h.subtreeFlags&8772)!==0):Ds(a,h),Os=E,hn=L}m&512&&(h.memoizedProps.mode==="manual"?Hr(h,h.return):vi(h,h.return));break;default:Ds(a,h)}}function Iv(a){var o=a.alternate;o!==null&&(a.alternate=null,Iv(o)),a.child=null,a.deletions=null,a.sibling=null,a.tag===5&&(o=a.stateNode,o!==null&&gE(o)),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function es(a,o,h){for(h=h.child;h!==null;)pd(a,o,h),h=h.sibling}function pd(a,o,h){if(Mi&&typeof Mi.onCommitFiberUnmount=="function")try{Mi.onCommitFiberUnmount(Al,h)}catch{}switch(h.tag){case 26:if(Fi){hn||vi(h,o),es(a,o,h),h.memoizedState?O0(h.memoizedState):h.stateNode&&z0(h.stateNode);break}case 27:if(kn){hn||vi(h,o);var m=_n,y=bi;_n=h.stateNode,es(a,o,h),vb(h.stateNode),_n=m,bi=y;break}case 5:hn||vi(h,o);case 6:if(Gn){if(m=_n,y=bi,_n=null,es(a,o,h),_n=m,bi=y,_n!==null)if(bi)try{BE(_n,h.stateNode)}catch(E){Wt(h,o,E)}else try{OE(_n,h.stateNode)}catch(E){Wt(h,o,E)}}else es(a,o,h);break;case 18:Gn&&_n!==null&&(bi?ob(_n,h.stateNode):ab(_n,h.stateNode));break;case 4:Gn?(m=_n,y=bi,_n=h.stateNode.containerInfo,bi=!0,es(a,o,h),_n=m,bi=y):(or&&Uv(h.stateNode,h,T0()),es(a,o,h));break;case 0:case 11:case 14:case 15:hn||tr(2,h,o),hn||tr(4,h,o),es(a,o,h);break;case 1:hn||(vi(h,o),m=h.stateNode,typeof m.componentWillUnmount=="function"&&Cv(h,o,m)),es(a,o,h);break;case 21:es(a,o,h);break;case 22:hn||vi(h,o),hn=(m=hn)||h.memoizedState!==null,es(a,o,h),hn=m;break;default:es(a,o,h)}}function Ov(a,o){if(zi&&o.memoizedState===null&&(a=o.alternate,a!==null&&(a=a.memoizedState,a!==null&&(a=a.dehydrated,a!==null))))try{rb(a)}catch(h){Wt(o,o.return,h)}}function VM(a){switch(a.tag){case 13:case 19:var o=a.stateNode;return o===null&&(o=a.stateNode=new K0),o;case 22:return a=a.stateNode,o=a._retryCache,o===null&&(o=a._retryCache=new K0),o;default:throw Error(i(435,a.tag))}}function md(a,o){var h=VM(a);o.forEach(function(m){var y=jM.bind(null,a,m);h.has(m)||(h.add(m),m.then(y,y))})}function ui(a,o){var h=o.deletions;if(h!==null)for(var m=0;m<h.length;m++){var y=h[m],E=a,L=o;if(Gn){var H=L;e:for(;H!==null;){switch(H.tag){case 27:case 5:_n=H.stateNode,bi=!1;break e;case 3:_n=H.stateNode.containerInfo,bi=!0;break e;case 4:_n=H.stateNode.containerInfo,bi=!0;break e}H=H.return}if(_n===null)throw Error(i(160));pd(E,L,y),_n=null,bi=!1}else pd(E,L,y);E=y.alternate,E!==null&&(E.return=null),y.return=null}if(o.subtreeFlags&13878)for(o=o.child;o!==null;)Bv(o,a),o=o.sibling}function Bv(a,o){var h=a.alternate,m=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ui(o,a),_i(a),m&4&&(tr(3,a,a.return),xl(3,a),tr(5,a,a.return));break;case 1:ui(o,a),_i(a),m&512&&(hn||h===null||vi(h,h.return)),m&64&&Os&&(a=a.updateQueue,a!==null&&(m=a.callbacks,m!==null&&(h=a.shared.hiddenCallbacks,a.shared.hiddenCallbacks=h===null?m:h.concat(m))));break;case 26:if(Fi){var y=is;ui(o,a),_i(a),m&512&&(hn||h===null||vi(h,h.return)),m&4&&(m=h!==null?h.memoizedState:null,o=a.memoizedState,h===null?o===null?a.stateNode===null?a.stateNode=ub(y,a.type,a.memoizedProps,a):B0(y,a.type,a.stateNode):a.stateNode=I0(y,o,a.memoizedProps):m!==o?(m===null?h.stateNode!==null&&z0(h.stateNode):O0(m),o===null?B0(y,a.type,a.stateNode):I0(y,o,a.memoizedProps)):o===null&&a.stateNode!==null&&Nv(a,a.memoizedProps,h.memoizedProps));break}case 27:if(kn&&m&4&&a.alternate===null){y=a.stateNode;var E=a.memoizedProps;try{mb(y),gb(a.type,E,y,a)}catch(be){Wt(a,a.return,be)}}case 5:if(ui(o,a),_i(a),m&512&&(hn||h===null||vi(h,h.return)),Gn){if(a.flags&32){o=a.stateNode;try{b0(o)}catch(be){Wt(a,a.return,be)}}m&4&&a.stateNode!=null&&(o=a.memoizedProps,Nv(a,o,h!==null?h.memoizedProps:o)),m&1024&&(ip=!0)}break;case 6:if(ui(o,a),_i(a),m&4&&Gn){if(a.stateNode===null)throw Error(i(162));m=a.memoizedProps,h=h!==null?h.memoizedProps:m,o=a.stateNode;try{NE(o,h,m)}catch(be){Wt(a,a.return,be)}}break;case 3:if(Fi?(fb(),y=is,is=kd(o.containerInfo),ui(o,a),is=y):ui(o,a),_i(a),m&4){if(Gn&&zi&&h!==null&&h.memoizedState.isDehydrated)try{sb(o.containerInfo)}catch(be){Wt(a,a.return,be)}if(or){m=o.containerInfo,h=o.pendingChildren;try{R0(m,h)}catch(be){Wt(a,a.return,be)}}}ip&&(ip=!1,zv(a));break;case 4:Fi?(h=is,is=kd(a.stateNode.containerInfo),ui(o,a),_i(a),is=h):(ui(o,a),_i(a)),m&4&&or&&Uv(a.stateNode,a,a.stateNode.pendingChildren);break;case 12:ui(o,a),_i(a);break;case 13:ui(o,a),_i(a),a.child.flags&8192&&a.memoizedState!==null!=(h!==null&&h.memoizedState!==null)&&(op=ts()),m&4&&(m=a.updateQueue,m!==null&&(a.updateQueue=null,md(a,m)));break;case 22:m&512&&(hn||h===null||vi(h,h.return)),y=a.memoizedState!==null;var L=h!==null&&h.memoizedState!==null,H=Os,K=hn;if(Os=H||y,hn=K||L,ui(o,a),hn=K,Os=H,_i(a),o=a.stateNode,o._current=a,o._visibility&=-3,o._visibility|=o._pendingVisibility&2,m&8192&&(o._visibility=y?o._visibility&-2:o._visibility|1,y&&(o=Os||hn,h===null||L||o||qa(a)),Gn&&(a.memoizedProps===null||a.memoizedProps.mode!=="manual"))){e:if(h=null,Gn)for(o=a;;){if(o.tag===5||Fi&&o.tag===26||kn&&o.tag===27){if(h===null){L=h=o;try{E=L.stateNode,y?zE(E):HE(L.stateNode,L.memoizedProps)}catch(be){Wt(L,L.return,be)}}}else if(o.tag===6){if(h===null){L=o;try{var ce=L.stateNode;y?FE(ce):VE(ce,L.memoizedProps)}catch(be){Wt(L,L.return,be)}}}else if((o.tag!==22&&o.tag!==23||o.memoizedState===null||o===a)&&o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break e;for(;o.sibling===null;){if(o.return===null||o.return===a)break e;h===o&&(h=null),o=o.return}h===o&&(h=null),o.sibling.return=o.return,o=o.sibling}}m&4&&(m=a.updateQueue,m!==null&&(h=m.retryQueue,h!==null&&(m.retryQueue=null,md(a,h))));break;case 19:ui(o,a),_i(a),m&4&&(m=a.updateQueue,m!==null&&(a.updateQueue=null,md(a,m)));break;case 21:break;default:ui(o,a),_i(a)}}function _i(a){var o=a.flags;if(o&2){try{if(Gn&&(!kn||a.tag!==27)){e:{for(var h=a.return;h!==null;){if(Lv(h)){var m=h;break e}h=h.return}throw Error(i(160))}switch(m.tag){case 27:if(kn){var y=m.stateNode,E=fd(a);Yc(a,E,y);break}case 5:var L=m.stateNode;m.flags&32&&(b0(L),m.flags&=-33);var H=fd(a);Yc(a,H,L);break;case 3:case 4:var K=m.stateNode.containerInfo,ce=fd(a);dd(a,ce,K);break;default:throw Error(i(161))}}}catch(be){Wt(a,a.return,be)}a.flags&=-3}o&4096&&(a.flags&=-4097)}function zv(a){if(a.subtreeFlags&1024)for(a=a.child;a!==null;){var o=a;zv(o),o.tag===5&&o.flags&1024&&xE(o.stateNode),a=a.sibling}}function Ds(a,o){if(o.subtreeFlags&8772)for(o=o.child;o!==null;)Pv(a,o.alternate,o),o=o.sibling}function qa(a){for(a=a.child;a!==null;){var o=a;switch(o.tag){case 0:case 11:case 14:case 15:tr(4,o,o.return),qa(o);break;case 1:vi(o,o.return);var h=o.stateNode;typeof h.componentWillUnmount=="function"&&Cv(o,o.return,h),qa(o);break;case 26:case 27:case 5:vi(o,o.return),qa(o);break;case 22:vi(o,o.return),o.memoizedState===null&&qa(o);break;default:qa(o)}a=a.sibling}}function nr(a,o,h){for(h=h&&(o.subtreeFlags&8772)!==0,o=o.child;o!==null;){var m=o.alternate,y=a,E=o,L=E.flags;switch(E.tag){case 0:case 11:case 15:nr(y,E,h),xl(4,E);break;case 1:if(nr(y,E,h),m=E,y=m.stateNode,typeof y.componentDidMount=="function")try{y.componentDidMount()}catch(ce){Wt(m,m.return,ce)}if(m=E,y=m.updateQueue,y!==null){var H=m.stateNode;try{var K=y.shared.hiddenCallbacks;if(K!==null)for(y.shared.hiddenCallbacks=null,y=0;y<K.length;y++)G(K[y],H)}catch(ce){Wt(m,m.return,ce)}}h&&L&64&&wv(E),Hr(E,E.return);break;case 26:case 27:case 5:nr(y,E,h),h&&m===null&&L&4&&Dv(E),Hr(E,E.return);break;case 12:nr(y,E,h);break;case 13:nr(y,E,h),h&&L&4&&Ov(y,E);break;case 22:E.memoizedState===null&&nr(y,E,h),Hr(E,E.return);break;default:nr(y,E,h)}o=o.sibling}}function gd(a,o){var h=null;a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(h=a.memoizedState.cachePool.pool),a=null,o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(a=o.memoizedState.cachePool.pool),a!==h&&(a!=null&&a.refCount++,h!=null&&_l(h))}function vd(a,o){a=null,o.alternate!==null&&(a=o.alternate.memoizedState.cache),o=o.memoizedState.cache,o!==a&&(o.refCount++,a!=null&&_l(a))}function ir(a,o,h,m){if(o.subtreeFlags&10256)for(o=o.child;o!==null;)Fv(a,o,h,m),o=o.sibling}function Fv(a,o,h,m){var y=o.flags;switch(o.tag){case 0:case 11:case 15:ir(a,o,h,m),y&2048&&xl(9,o);break;case 3:ir(a,o,h,m),y&2048&&(a=null,o.alternate!==null&&(a=o.alternate.memoizedState.cache),o=o.memoizedState.cache,o!==a&&(o.refCount++,a!=null&&_l(a)));break;case 12:if(y&2048){ir(a,o,h,m),a=o.stateNode;try{var E=o.memoizedProps,L=E.id,H=E.onPostCommit;typeof H=="function"&&H(L,o.alternate===null?"mount":"update",a.passiveEffectDuration,-0)}catch(K){Wt(o,o.return,K)}}else ir(a,o,h,m);break;case 23:break;case 22:E=o.stateNode,o.memoizedState!==null?E._visibility&4?ir(a,o,h,m):Sl(a,o):E._visibility&4?ir(a,o,h,m):(E._visibility|=4,Ya(a,o,h,m,(o.subtreeFlags&10256)!==0)),y&2048&&gd(o.alternate,o);break;case 24:ir(a,o,h,m),y&2048&&vd(o.alternate,o);break;default:ir(a,o,h,m)}}function Ya(a,o,h,m,y){for(y=y&&(o.subtreeFlags&10256)!==0,o=o.child;o!==null;){var E=a,L=o,H=h,K=m,ce=L.flags;switch(L.tag){case 0:case 11:case 15:Ya(E,L,H,K,y),xl(8,L);break;case 23:break;case 22:var be=L.stateNode;L.memoizedState!==null?be._visibility&4?Ya(E,L,H,K,y):Sl(E,L):(be._visibility|=4,Ya(E,L,H,K,y)),y&&ce&2048&&gd(L.alternate,L);break;case 24:Ya(E,L,H,K,y),y&&ce&2048&&vd(L.alternate,L);break;default:Ya(E,L,H,K,y)}o=o.sibling}}function Sl(a,o){if(o.subtreeFlags&10256)for(o=o.child;o!==null;){var h=a,m=o,y=m.flags;switch(m.tag){case 22:Sl(h,m),y&2048&&gd(m.alternate,m);break;case 24:Sl(h,m),y&2048&&vd(m.alternate,m);break;default:Sl(h,m)}o=o.sibling}}function Vr(a){if(a.subtreeFlags&po)for(a=a.child;a!==null;)Hv(a),a=a.sibling}function Hv(a){switch(a.tag){case 26:Vr(a),a.flags&po&&(a.memoizedState!==null?pb(is,a.memoizedState,a.memoizedProps):E0(a.type,a.memoizedProps));break;case 5:Vr(a),a.flags&po&&E0(a.type,a.memoizedProps);break;case 3:case 4:if(Fi){var o=is;is=kd(a.stateNode.containerInfo),Vr(a),is=o}else Vr(a);break;case 22:a.memoizedState===null&&(o=a.alternate,o!==null&&o.memoizedState!==null?(o=po,po=16777216,Vr(a),po=o):Vr(a));break;default:Vr(a)}}function Vv(a){var o=a.alternate;if(o!==null&&(a=o.child,a!==null)){o.child=null;do o=a.sibling,a.sibling=null,a=o;while(a!==null)}}function Ml(a){var o=a.deletions;if((a.flags&16)!==0){if(o!==null)for(var h=0;h<o.length;h++){var m=o[h];wn=m,kv(m,a)}Vv(a)}if(a.subtreeFlags&10256)for(a=a.child;a!==null;)Gv(a),a=a.sibling}function Gv(a){switch(a.tag){case 0:case 11:case 15:Ml(a),a.flags&2048&&tr(9,a,a.return);break;case 3:Ml(a);break;case 12:Ml(a);break;case 22:var o=a.stateNode;a.memoizedState!==null&&o._visibility&4&&(a.return===null||a.return.tag!==13)?(o._visibility&=-5,Kc(a)):Ml(a);break;default:Ml(a)}}function Kc(a){var o=a.deletions;if((a.flags&16)!==0){if(o!==null)for(var h=0;h<o.length;h++){var m=o[h];wn=m,kv(m,a)}Vv(a)}for(a=a.child;a!==null;){switch(o=a,o.tag){case 0:case 11:case 15:tr(8,o,o.return),Kc(o);break;case 22:h=o.stateNode,h._visibility&4&&(h._visibility&=-5,Kc(o));break;default:Kc(o)}a=a.sibling}}function kv(a,o){for(;wn!==null;){var h=wn;switch(h.tag){case 0:case 11:case 15:tr(8,h,o);break;case 23:case 22:if(h.memoizedState!==null&&h.memoizedState.cachePool!==null){var m=h.memoizedState.cachePool.pool;m!=null&&m.refCount++}break;case 24:_l(h.memoizedState.cache)}if(m=h.child,m!==null)m.return=h,wn=m;else e:for(h=a;wn!==null;){m=wn;var y=m.sibling,E=m.return;if(Iv(m),m===h){wn=null;break e}if(y!==null){y.return=E,wn=y;break e}wn=E}}}function _d(a){var o=S0(a);if(o!=null){if(typeof o.memoizedProps["data-testname"]!="string")throw Error(i(364));return o}if(a=EE(a),a===null)throw Error(i(362));return a.stateNode.current}function yd(a,o){var h=a.tag;switch(o.$$typeof){case du:if(a.type===o.value)return!0;break;case pu:e:{for(o=o.value,a=[a,0],h=0;h<a.length;){var m=a[h++],y=m.tag,E=a[h++],L=o[E];if(y!==5&&y!==26&&y!==27||!Tl(m)){for(;L!=null&&yd(m,L);)E++,L=o[E];if(E===o.length){o=!0;break e}else for(m=m.child;m!==null;)a.push(m,E),m=m.sibling}}o=!1}return o;case mu:if((h===5||h===26||h===27)&&AE(a.stateNode,o.value))return!0;break;case vu:if((h===5||h===6||h===26||h===27)&&(a=TE(a),a!==null&&0<=a.indexOf(o.value)))return!0;break;case gu:if((h===5||h===26||h===27)&&(a=a.memoizedProps["data-testname"],typeof a=="string"&&a.toLowerCase()===o.value.toLowerCase()))return!0;break;default:throw Error(i(365))}return!1}function xd(a){switch(a.$$typeof){case du:return"<"+(l(a.value)||"Unknown")+">";case pu:return":has("+(xd(a)||"")+")";case mu:return'[role="'+a.value+'"]';case vu:return'"'+a.value+'"';case gu:return'[data-testname="'+a.value+'"]';default:throw Error(i(365))}}function Xv(a,o){var h=[];a=[a,0];for(var m=0;m<a.length;){var y=a[m++],E=y.tag,L=a[m++],H=o[L];if(E!==5&&E!==26&&E!==27||!Tl(y)){for(;H!=null&&yd(y,H);)L++,H=o[L];if(L===o.length)h.push(y);else for(y=y.child;y!==null;)a.push(y,L),y=y.sibling}}return h}function Sd(a,o){if(!bl)throw Error(i(363));a=_d(a),a=Xv(a,o),o=[],a=Array.from(a);for(var h=0;h<a.length;){var m=a[h++],y=m.tag;if(y===5||y===26||y===27)Tl(m)||o.push(m.stateNode);else for(m=m.child;m!==null;)a.push(m),m=m.sibling}return o}function yi(){if((Kt&2)!==0&&Dt!==0)return Dt&-Dt;if(ht.T!==null){var a=ao;return a!==0?a:de()}return pE()}function Wv(){Xi===0&&(Xi=(Dt&536870912)===0||Pt?I():536870912);var a=ki.current;return a!==null&&(a.flags|=32),Xi}function ei(a,o,h){(a===en&&tn===2||a.cancelPendingCommit!==null)&&(Ka(a,0),Ns(a,Dt,Xi,!1)),F(a,h),((Kt&2)===0||a!==en)&&(a===en&&((Kt&2)===0&&($r|=h),fn===4&&Ns(a,Dt,Xi,!1)),pe(a))}function qv(a,o,h){if((Kt&6)!==0)throw Error(i(327));var m=!h&&(o&60)===0&&(o&a.expiredLanes)===0||D(a,o),y=m?XM(a,o):Td(a,o,!0),E=m;do{if(y===0){mo&&!m&&Ns(a,o,0,!1);break}else if(y===6)Ns(a,o,0,!Bs);else{if(h=a.current.alternate,E&&!GM(h)){y=Td(a,o,!1),E=!1;continue}if(y===2){if(E=o,a.errorRecoveryDisabledLanes&E)var L=0;else L=a.pendingLanes&-536870913,L=L!==0?L:L&536870912?536870912:0;if(L!==0){o=L;e:{var H=a;y=Ul;var K=zi&&H.current.memoizedState.isDehydrated;if(K&&(Ka(H,L).flags|=256),L=Td(H,L,!1),L!==2){if(sp&&!K){H.errorRecoveryDisabledLanes|=E,$r|=E,y=4;break e}E=Ms,Ms=y,E!==null&&Md(E)}y=L}if(E=!1,y!==2)continue}}if(y===1){Ka(a,0),Ns(a,o,0,!0);break}e:{switch(m=a,y){case 0:case 1:throw Error(i(345));case 4:if((o&4194176)===o){Ns(m,o,Xi,!Bs);break e}break;case 2:Ms=null;break;case 3:case 5:break;default:throw Error(i(329))}if(m.finishedWork=h,m.finishedLanes=o,(o&62914560)===o&&(E=op+300-ts(),10<E)){if(Ns(m,o,Xi,!Bs),U(m,0)!==0)break e;m.timeoutHandle=hE(Yv.bind(null,m,h,Ms,_u,ap,o,Xi,$r,go,Bs,2,-0,0),E);break e}Yv(m,h,Ms,_u,ap,o,Xi,$r,go,Bs,0,-0,0)}}break}while(!0);pe(a)}function Md(a){Ms===null?Ms=a:Ms.push.apply(Ms,a)}function Yv(a,o,h,m,y,E,L,H,K,ce,be,Ie,ze){var gt=o.subtreeFlags;if((gt&8192||(gt&16785408)===16785408)&&(_E(),Hv(o),o=yE(),o!==null)){a.cancelPendingCommit=o(n0.bind(null,a,h,m,y,L,H,K,1,Ie,ze)),Ns(a,E,L,!ce);return}n0(a,h,m,y,L,H,K,be,Ie,ze)}function GM(a){for(var o=a;;){var h=o.tag;if((h===0||h===11||h===15)&&o.flags&16384&&(h=o.updateQueue,h!==null&&(h=h.stores,h!==null)))for(var m=0;m<h.length;m++){var y=h[m],E=y.getSnapshot;y=y.value;try{if(!Ei(E(),y))return!1}catch{return!1}}if(h=o.child,o.subtreeFlags&16384&&h!==null)h.return=o,o=h;else{if(o===a)break;for(;o.sibling===null;){if(o.return===null||o.return===a)return!0;o=o.return}o.sibling.return=o.return,o=o.sibling}}return!0}function Ns(a,o,h,m){o&=~rp,o&=~$r,a.suspendedLanes|=o,a.pingedLanes&=~o,m&&(a.warmLanes|=o),m=a.expirationTimes;for(var y=o;0<y;){var E=31-Si(y),L=1<<E;m[E]=-1,y&=~L}h!==0&&k(a,h,o)}function Kv(){return(Kt&6)===0?(Oe(0),!1):!0}function Ed(){if(Et!==null){if(tn===0)var a=Et.return;else a=Et,Is=Jr=null,pl(a),co=null,Dl=0,a=Et;for(;a!==null;)Rv(a.alternate,a),a=a.return;Et=null}}function Ka(a,o){a.finishedWork=null,a.finishedLanes=0;var h=a.timeoutHandle;h!==Hd&&(a.timeoutHandle=Hd,fE(h)),h=a.cancelPendingCommit,h!==null&&(a.cancelPendingCommit=null,h()),Ed(),en=a,Et=h=sr(a.current,null),Dt=o,tn=0,Ti=null,Bs=!1,mo=D(a,o),sp=!1,go=Xi=rp=$r=fr=fn=0,Ms=Ul=null,ap=!1,(o&8)!==0&&(o|=o&32);var m=a.entangledLanes;if(m!==0)for(a=a.entanglements,m&=o;0<m;){var y=31-Si(m),E=1<<y;o|=a[y],m&=~E}return zs=o,O(),h}function jv(a,o){St=null,ht.H=Ss,o===Cl?(o=qe(),tn=3):o===$d?(o=qe(),tn=4):tn=o===q0?8:o!==null&&typeof o=="object"&&typeof o.then=="function"?6:1,Ti=o,Et===null&&(fn=1,Gc(a,le(o,a.current)))}function Zv(){var a=ki.current;return a===null?!0:(Dt&4194176)===Dt?xs===null:(Dt&62914560)===Dt||(Dt&536870912)!==0?a===xs:!1}function Jv(){var a=ht.H;return ht.H=Ss,a===null?Ss:a}function Qv(){var a=ht.A;return ht.A=Nb,a}function bd(){fn=4,Bs||(Dt&4194176)!==Dt&&ki.current!==null||(mo=!0),(fr&134217727)===0&&($r&134217727)===0||en===null||Ns(en,Dt,Xi,!1)}function Td(a,o,h){var m=Kt;Kt|=2;var y=Jv(),E=Qv();(en!==a||Dt!==o)&&(_u=null,Ka(a,o)),o=!1;var L=fn;e:do try{if(tn!==0&&Et!==null){var H=Et,K=Ti;switch(tn){case 8:Ed(),L=6;break e;case 3:case 2:case 6:ki.current===null&&(o=!0);var ce=tn;if(tn=0,Ti=null,ja(a,H,K,ce),h&&mo){L=0;break e}break;default:ce=tn,tn=0,Ti=null,ja(a,H,K,ce)}}kM(),L=fn;break}catch(be){jv(a,be)}while(!0);return o&&a.shellSuspendCounter++,Is=Jr=null,Kt=m,ht.H=y,ht.A=E,Et===null&&(en=null,Dt=0,O()),L}function kM(){for(;Et!==null;)$v(Et)}function XM(a,o){var h=Kt;Kt|=2;var m=Jv(),y=Qv();en!==a||Dt!==o?(_u=null,Pl=ts()+500,Ka(a,o)):mo=D(a,o);e:do try{if(tn!==0&&Et!==null){o=Et;var E=Ti;t:switch(tn){case 1:tn=0,Ti=null,ja(a,o,E,1);break;case 2:if(Ve(E)){tn=0,Ti=null,e0(o);break}o=function(){tn===2&&en===a&&(tn=7),pe(a)},E.then(o,o);break e;case 3:tn=7;break e;case 4:tn=5;break e;case 7:Ve(E)?(tn=0,Ti=null,e0(o)):(tn=0,Ti=null,ja(a,o,E,7));break;case 5:var L=null;switch(Et.tag){case 26:L=Et.memoizedState;case 5:case 27:var H=Et,K=H.type,ce=H.pendingProps;if(L?F0(L):M0(K,ce)){tn=0,Ti=null;var be=H.sibling;if(be!==null)Et=be;else{var Ie=H.return;Ie!==null?(Et=Ie,jc(Ie)):Et=null}break t}}tn=0,Ti=null,ja(a,o,E,5);break;case 6:tn=0,Ti=null,ja(a,o,E,6);break;case 8:Ed(),fn=6;break e;default:throw Error(i(462))}}WM();break}catch(ze){jv(a,ze)}while(!0);return Is=Jr=null,ht.H=m,ht.A=y,Kt=h,Et!==null?0:(en=null,Dt=0,O(),fn)}function WM(){for(;Et!==null&&!xb();)$v(Et)}function $v(a){var o=xv(a.alternate,a,zs);a.memoizedProps=a.pendingProps,o===null?jc(a):Et=o}function e0(a){var o=a,h=o.alternate;switch(o.tag){case 15:case 0:o=pv(h,o,o.pendingProps,o.type,void 0,Dt);break;case 11:o=pv(h,o,o.pendingProps,o.type.render,o.ref,Dt);break;case 5:pl(o);default:Rv(h,o),o=Et=a0(o,zs),o=xv(h,o,zs)}a.memoizedProps=a.pendingProps,o===null?jc(a):Et=o}function ja(a,o,h,m){Is=Jr=null,pl(o),co=null,Dl=0;var y=o.return;try{if(OM(a,y,o,h,Dt)){fn=1,Gc(a,le(h,a.current)),Et=null;return}}catch(E){if(y!==null)throw Et=y,E;fn=1,Gc(a,le(h,a.current)),Et=null;return}o.flags&32768?(Pt||m===1?a=!0:mo||(Dt&536870912)!==0?a=!1:(Bs=a=!0,(m===2||m===3||m===6)&&(m=ki.current,m!==null&&m.tag===13&&(m.flags|=16384))),t0(o,a)):jc(o)}function jc(a){var o=a;do{if((o.flags&32768)!==0){t0(o,Bs);return}a=o.return;var h=zM(o.alternate,o,zs);if(h!==null){Et=h;return}if(o=o.sibling,o!==null){Et=o;return}Et=o=a}while(o!==null);fn===0&&(fn=5)}function t0(a,o){do{var h=FM(a.alternate,a);if(h!==null){h.flags&=32767,Et=h;return}if(h=a.return,h!==null&&(h.flags|=32768,h.subtreeFlags=0,h.deletions=null),!o&&(a=a.sibling,a!==null)){Et=a;return}Et=a=h}while(a!==null);fn=6,Et=null}function n0(a,o,h,m,y,E,L,H,K,ce){var be=ht.T,Ie=Xr();try{hi(2),ht.T=null,qM(a,o,h,m,Ie,y,E,L,H,K,ce)}finally{ht.T=be,hi(Ie)}}function qM(a,o,h,m,y,E,L,H){do Gr();while(ea!==null);if((Kt&6)!==0)throw Error(i(327));var K=a.finishedWork;if(m=a.finishedLanes,K===null)return null;if(a.finishedWork=null,a.finishedLanes=0,K===a.current)throw Error(i(177));a.callbackNode=null,a.callbackPriority=0,a.cancelPendingCommit=null;var ce=K.lanes|K.childLanes;if(ce|=Kd,j(a,m,ce,E,L,H),a===en&&(Et=en=null,Dt=0),(K.subtreeFlags&10256)===0&&(K.flags&10256)===0||yu||(yu=!0,lp=ce,cp=h,ZM(qd,function(){return Gr(),null})),h=(K.flags&15990)!==0,(K.subtreeFlags&15990)!==0||h?(h=ht.T,ht.T=null,E=Xr(),hi(2),L=Kt,Kt|=4,HM(a,K),Bv(K,a),cE(a.containerInfo),a.current=K,Pv(a,K.alternate,K),Sb(),Kt=L,hi(E),ht.T=h):a.current=K,yu?(yu=!1,ea=a,Il=m):i0(a,ce),ce=a.pendingLanes,ce===0&&(dr=null),V(K.stateNode),pe(a),o!==null)for(y=a.onRecoverableError,K=0;K<o.length;K++)ce=o[K],y(ce.value,{componentStack:ce.stack});return(Il&3)!==0&&Gr(),ce=a.pendingLanes,(m&4194218)!==0&&(ce&42)!==0?a===up?Ol++:(Ol=0,up=a):Ol=0,Oe(0),null}function i0(a,o){(a.pooledCacheLanes&=o)===0&&(o=a.pooledCache,o!=null&&(a.pooledCache=null,_l(o)))}function Gr(){if(ea!==null){var a=ea,o=lp;lp=0;var h=se(Il),m=32>h?32:h;h=ht.T;var y=Xr();try{if(hi(m),ht.T=null,ea===null)var E=!1;else{m=cp,cp=null;var L=ea,H=Il;if(ea=null,Il=0,(Kt&6)!==0)throw Error(i(331));var K=Kt;if(Kt|=4,Gv(L.current),Fv(L,L.current,H,m),Kt=K,Oe(0,!1),Mi&&typeof Mi.onPostCommitFiberRoot=="function")try{Mi.onPostCommitFiberRoot(Al,L)}catch{}E=!0}return E}finally{hi(y),ht.T=h,i0(a,o)}}return!1}function s0(a,o,h){o=le(h,o),o=Zf(a.stateNode,o,2),a=Ue(a,o,2),a!==null&&(F(a,2),pe(a))}function Wt(a,o,h){if(a.tag===3)s0(a,a,h);else for(;o!==null;){if(o.tag===3){s0(o,a,h);break}else if(o.tag===1){var m=o.stateNode;if(typeof o.type.getDerivedStateFromError=="function"||typeof m.componentDidCatch=="function"&&(dr===null||!dr.has(m))){a=le(h,a),h=ov(2),m=Ue(o,h,2),m!==null&&(lv(h,m,o,a),F(m,2),pe(m));break}}o=o.return}}function Ad(a,o,h){var m=a.pingCache;if(m===null){m=a.pingCache=new Lb;var y=new Set;m.set(o,y)}else y=m.get(o),y===void 0&&(y=new Set,m.set(o,y));y.has(h)||(sp=!0,y.add(h),a=YM.bind(null,a,o,h),o.then(a,a))}function YM(a,o,h){var m=a.pingCache;m!==null&&m.delete(o),a.pingedLanes|=a.suspendedLanes&h,a.warmLanes&=~h,en===a&&(Dt&h)===h&&(fn===4||fn===3&&(Dt&62914560)===Dt&&300>ts()-op?(Kt&2)===0&&Ka(a,0):rp|=h,go===Dt&&(go=0)),pe(a)}function r0(a,o){o===0&&(o=w()),a=Ee(a,o),a!==null&&(F(a,o),pe(a))}function KM(a){var o=a.memoizedState,h=0;o!==null&&(h=o.retryLane),r0(a,h)}function jM(a,o){var h=0;switch(a.tag){case 13:var m=a.stateNode,y=a.memoizedState;y!==null&&(h=y.retryLane);break;case 19:m=a.stateNode;break;case 22:m=a.stateNode._retryCache;break;default:throw Error(i(314))}m!==null&&m.delete(o),r0(a,h)}function ZM(a,o){return nu(a,o)}function JM(a,o,h,m){this.tag=a,this.key=h,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=o,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=m,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Rd(a){return a=a.prototype,!(!a||!a.isReactComponent)}function sr(a,o){var h=a.alternate;return h===null?(h=t(a.tag,o,a.key,a.mode),h.elementType=a.elementType,h.type=a.type,h.stateNode=a.stateNode,h.alternate=a,a.alternate=h):(h.pendingProps=o,h.type=a.type,h.flags=0,h.subtreeFlags=0,h.deletions=null),h.flags=a.flags&31457280,h.childLanes=a.childLanes,h.lanes=a.lanes,h.child=a.child,h.memoizedProps=a.memoizedProps,h.memoizedState=a.memoizedState,h.updateQueue=a.updateQueue,o=a.dependencies,h.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext},h.sibling=a.sibling,h.index=a.index,h.ref=a.ref,h.refCleanup=a.refCleanup,h}function a0(a,o){a.flags&=31457282;var h=a.alternate;return h===null?(a.childLanes=0,a.lanes=o,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=h.childLanes,a.lanes=h.lanes,a.child=h.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=h.memoizedProps,a.memoizedState=h.memoizedState,a.updateQueue=h.updateQueue,a.type=h.type,o=h.dependencies,a.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext}),a}function Zc(a,o,h,m,y,E){var L=0;if(m=a,typeof a=="function")Rd(a)&&(L=1);else if(typeof a=="string")L=Fi&&kn?U0(a,h,In.current)?26:V0(a)?27:5:Fi?U0(a,h,In.current)?26:5:kn&&V0(a)?27:5;else e:switch(a){case Ja:return kr(h.children,y,E,o);case d0:L=8,y|=24;break;case Ld:return a=t(12,h,o,y|2),a.elementType=Ld,a.lanes=E,a;case Pd:return a=t(13,h,o,y),a.elementType=Pd,a.lanes=E,a;case Id:return a=t(19,h,o,y),a.elementType=Id,a.lanes=E,a;case m0:return o0(h,y,E,o);default:if(typeof a=="object"&&a!==null)switch(a.$$typeof){case tE:case rr:L=10;break e;case p0:L=9;break e;case Ud:L=11;break e;case Od:L=14;break e;case ar:L=16,m=null;break e}L=29,h=Error(i(130,a===null?"null":typeof a,"")),m=null}return o=t(L,h,o,y),o.elementType=a,o.type=m,o.lanes=E,o}function kr(a,o,h,m){return a=t(7,a,m,o),a.lanes=h,a}function o0(a,o,h,m){a=t(22,a,m,o),a.elementType=m0,a.lanes=h;var y={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var E=y._current;if(E===null)throw Error(i(456));if((y._pendingVisibility&2)===0){var L=Ee(E,2);L!==null&&(y._pendingVisibility|=2,ei(L,E,2))}},attach:function(){var E=y._current;if(E===null)throw Error(i(456));if((y._pendingVisibility&2)!==0){var L=Ee(E,2);L!==null&&(y._pendingVisibility&=-3,ei(L,E,2))}}};return a.stateNode=y,a}function wd(a,o,h){return a=t(6,a,null,o),a.lanes=h,a}function Cd(a,o,h){return o=t(4,a.children!==null?a.children:[],a.key,o),o.lanes=h,o.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},o}function QM(a,o,h,m,y,E,L,H){this.tag=1,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=Hd,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=R(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=R(0),this.hiddenUpdates=R(null),this.identifierPrefix=m,this.onUncaughtError=y,this.onCaughtError=E,this.onRecoverableError=L,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=H,this.incompleteTransitions=new Map}function l0(a,o,h,m,y,E,L,H,K,ce,be,Ie){return a=new QM(a,o,h,L,H,K,ce,Ie),o=1,E===!0&&(o|=24),E=t(3,null,null,o),a.current=E,E.stateNode=a,o=od(),o.refCount++,a.pooledCache=o,o.refCount++,E.memoizedState={element:m,isDehydrated:h,cache:o},ke(E),a}function c0(a){return a?(a=eo,a):eo}function u0(a){var o=a._reactInternals;if(o===void 0)throw typeof a.render=="function"?Error(i(188)):(a=Object.keys(a).join(","),Error(i(268,a)));return a=v(o),a=a!==null?x(a):null,a===null?null:El(a.stateNode)}function h0(a,o,h,m,y,E){y=c0(y),m.context===null?m.context=y:m.pendingContext=y,m=fe(o),m.payload={element:h},E=E===void 0?null:E,E!==null&&(m.callback=E),h=Ue(a,m,o),h!==null&&(ei(h,a,o),et(h,a,o))}function f0(a,o){if(a=a.memoizedState,a!==null&&a.dehydrated!==null){var h=a.retryLane;a.retryLane=h!==0&&h<o?h:o}}function Dd(a,o){f0(a,o),(a=a.alternate)&&f0(a,o)}var Mt={},$M=Ym(),xi=rM(),Nd=Object.assign,eE=Symbol.for("react.element"),Jc=Symbol.for("react.transitional.element"),Za=Symbol.for("react.portal"),Ja=Symbol.for("react.fragment"),d0=Symbol.for("react.strict_mode"),Ld=Symbol.for("react.profiler"),tE=Symbol.for("react.provider"),p0=Symbol.for("react.consumer"),rr=Symbol.for("react.context"),Ud=Symbol.for("react.forward_ref"),Pd=Symbol.for("react.suspense"),Id=Symbol.for("react.suspense_list"),Od=Symbol.for("react.memo"),ar=Symbol.for("react.lazy"),m0=Symbol.for("react.offscreen"),nE=Symbol.for("react.memo_cache_sentinel"),g0=Symbol.iterator,iE=Symbol.for("react.client.reference"),ht=$M.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,Bd,v0,zd=!1,Qc=Array.isArray,sE=e.rendererVersion,rE=e.rendererPackageName,_0=e.extraDevToolsConfig,El=e.getPublicInstance,aE=e.getRootHostContext,oE=e.getChildHostContext,lE=e.prepareForCommit,cE=e.resetAfterCommit,uE=e.createInstance,Fd=e.appendInitialChild,y0=e.finalizeInitialChildren,$c=e.shouldSetTextContent,x0=e.createTextInstance,hE=e.scheduleTimeout,fE=e.cancelTimeout,Hd=e.noTimeout,Ls=e.isPrimaryRenderer;e.warnsIfNotActing;var Gn=e.supportsMutation,or=e.supportsPersistence,zi=e.supportsHydration,S0=e.getInstanceFromNode;e.beforeActiveInstanceBlur,e.afterActiveInstanceBlur;var dE=e.preparePortalMount;e.prepareScopeUpdate,e.getInstanceFromScope;var hi=e.setCurrentUpdatePriority,Xr=e.getCurrentUpdatePriority,pE=e.resolveUpdatePriority;e.resolveEventType,e.resolveEventTimeStamp;var mE=e.shouldAttemptEagerTransition,gE=e.detachDeletedInstance;e.requestPostPaintCallback;var vE=e.maySuspendCommit,M0=e.preloadInstance,_E=e.startSuspendingCommit,E0=e.suspendInstance,yE=e.waitForCommitToBeReady,Qa=e.NotPendingTransition,Wr=e.HostTransitionContext,xE=e.resetFormInstance;e.bindToConsole;var SE=e.supportsMicrotasks,ME=e.scheduleMicrotask,bl=e.supportsTestSelectors,EE=e.findFiberRoot,bE=e.getBoundingRect,TE=e.getTextContent,Tl=e.isHiddenSubtree,AE=e.matchAccessibilityRole,RE=e.setFocusIfFocusable,wE=e.setupIntersectionObserver,CE=e.appendChild,DE=e.appendChildToContainer,NE=e.commitTextUpdate,LE=e.commitMount,UE=e.commitUpdate,PE=e.insertBefore,IE=e.insertInContainerBefore,OE=e.removeChild,BE=e.removeChildFromContainer,b0=e.resetTextContent,zE=e.hideInstance,FE=e.hideTextInstance,HE=e.unhideInstance,VE=e.unhideTextInstance,GE=e.clearContainer,kE=e.cloneInstance,T0=e.createContainerChildSet,A0=e.appendChildToContainerChildSet,XE=e.finalizeContainerChildren,R0=e.replaceContainerChildren,w0=e.cloneHiddenInstance,C0=e.cloneHiddenTextInstance,Vd=e.isSuspenseInstancePending,Gd=e.isSuspenseInstanceFallback,WE=e.getSuspenseInstanceFallbackErrorDetails,qE=e.registerSuspenseInstanceRetry,YE=e.canHydrateFormStateMarker,KE=e.isFormStateMarkerMatching,D0=e.getNextHydratableSibling,N0=e.getFirstHydratableChild,jE=e.getFirstHydratableChildWithinContainer,ZE=e.getFirstHydratableChildWithinSuspenseInstance,JE=e.canHydrateInstance,QE=e.canHydrateTextInstance,$E=e.canHydrateSuspenseInstance,eb=e.hydrateInstance,tb=e.hydrateTextInstance,nb=e.hydrateSuspenseInstance,ib=e.getNextHydratableInstanceAfterSuspenseInstance,sb=e.commitHydratedContainer,rb=e.commitHydratedSuspenseInstance,ab=e.clearSuspenseBoundary,ob=e.clearSuspenseBoundaryFromContainer,L0=e.shouldDeleteUnhydratedTailInstances;e.diffHydratedPropsForDevWarnings,e.diffHydratedTextForDevWarnings,e.describeHydratableInstanceForDevWarnings;var lb=e.validateHydratableInstance,cb=e.validateHydratableTextInstance,Fi=e.supportsResources,U0=e.isHostHoistableType,kd=e.getHoistableRoot,P0=e.getResource,I0=e.acquireResource,O0=e.releaseResource,ub=e.hydrateHoistable,B0=e.mountHoistable,z0=e.unmountHoistable,hb=e.createHoistableInstance,fb=e.prepareToCommitHoistables,db=e.mayResourceSuspendCommit,F0=e.preloadResource,pb=e.suspendResource,kn=e.supportsSingletons,H0=e.resolveSingletonInstance,mb=e.clearSingleton,gb=e.acquireSingletonInstance,vb=e.releaseSingletonInstance,V0=e.isHostSingletonType,Xd=[],$a=-1,eo={},Si=Math.clz32?Math.clz32:T,_b=Math.log,yb=Math.LN2,eu=128,tu=4194304,nu=xi.unstable_scheduleCallback,Wd=xi.unstable_cancelCallback,xb=xi.unstable_shouldYield,Sb=xi.unstable_requestPaint,ts=xi.unstable_now,G0=xi.unstable_ImmediatePriority,Mb=xi.unstable_UserBlockingPriority,qd=xi.unstable_NormalPriority,Eb=xi.unstable_IdlePriority,bb=xi.log,Tb=xi.unstable_setDisableYieldValue,Al=null,Mi=null,Ei=typeof Object.is=="function"?Object.is:W,k0=new WeakMap,to=[],no=0,iu=null,su=0,Hi=[],Vi=0,qr=null,Us=1,Ps="",In=S(null),Rl=S(null),lr=S(null),ru=S(null),ti=null,Xn=null,Pt=!1,ns=null,ys=!1,Yd=Error(i(519)),Gi=[],io=0,Kd=0,au=null,so=null,jd=!1,ou=!1,Zd=!1,ro=0,wl=null,Jd=0,ao=0,oo=null,cr=!1,Qd=!1,Ab=Object.prototype.hasOwnProperty,Cl=Error(i(460)),$d=Error(i(474)),lu={then:function(){}},lo=null,co=null,Dl=0,Yr=Oi(!0),X0=Oi(!1),uo=S(null),cu=S(0),ki=S(null),xs=null,Mn=S(0),ur=0,St=null,Yt=null,vn=null,uu=!1,ho=!1,Kr=!1,hu=0,Nl=0,fo=null,Rb=0,ep=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}},Ss={readContext:Vn,use:ne,useCallback:Qt,useContext:Qt,useEffect:Qt,useImperativeHandle:Qt,useLayoutEffect:Qt,useInsertionEffect:Qt,useMemo:Qt,useReducer:Qt,useRef:Qt,useState:Qt,useDebugValue:Qt,useDeferredValue:Qt,useTransition:Qt,useSyncExternalStore:Qt,useId:Qt};Ss.useCacheRefresh=Qt,Ss.useMemoCache=Qt,Ss.useHostTransitionStatus=Qt,Ss.useFormState=Qt,Ss.useActionState=Qt,Ss.useOptimistic=Qt;var jr={readContext:Vn,use:ne,useCallback:function(a,o){return N().memoizedState=[a,o===void 0?null:o],a},useContext:Vn,useEffect:kg,useImperativeHandle:function(a,o,h){h=h!=null?h.concat([a]):null,Fc(4194308,4,qg.bind(null,o,a),h)},useLayoutEffect:function(a,o){return Fc(4194308,4,a,o)},useInsertionEffect:function(a,o){Fc(4,2,a,o)},useMemo:function(a,o){var h=N();o=o===void 0?null:o;var m=a();if(Kr){$(!0);try{a()}finally{$(!1)}}return h.memoizedState=[m,o],m},useReducer:function(a,o,h){var m=N();if(h!==void 0){var y=h(o);if(Kr){$(!0);try{h(o)}finally{$(!1)}}}else y=o;return m.memoizedState=m.baseState=y,a={pending:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:y},m.queue=a,a=a.dispatch=IM.bind(null,St,a),[m.memoizedState,a]},useRef:function(a){var o=N();return a={current:a},o.memoizedState=a},useState:function(a){a=Xt(a);var o=a.queue,h=tv.bind(null,St,o);return o.dispatch=h,[a.memoizedState,h]},useDebugValue:Wf,useDeferredValue:function(a,o){var h=N();return qf(h,a,o)},useTransition:function(){var a=Xt(!1);return a=Jg.bind(null,St,a.queue,!0,!1),N().memoizedState=a,[!1,a]},useSyncExternalStore:function(a,o,h){var m=St,y=N();if(Pt){if(h===void 0)throw Error(i(407));h=h()}else{if(h=o(),en===null)throw Error(i(349));(Dt&60)!==0||ot(m,o,h)}y.memoizedState=h;var E={value:h,getSnapshot:o};return y.queue=E,kg(xt.bind(null,m,E,a),[a]),m.flags|=2048,vs(9,Ze.bind(null,m,E,h,o),{destroy:void 0},null),h},useId:function(){var a=N(),o=en.identifierPrefix;if(Pt){var h=Ps,m=Us;h=(m&~(1<<32-Si(m)-1)).toString(32)+h,o=":"+o+"R"+h,h=hu++,0<h&&(o+="H"+h.toString(32)),o+=":"}else h=Rb++,o=":"+o+"r"+h.toString(32)+":";return a.memoizedState=o},useCacheRefresh:function(){return N().memoizedState=PM.bind(null,St)}};jr.useMemoCache=q,jr.useHostTransitionStatus=Yf,jr.useFormState=Zt,jr.useActionState=Zt,jr.useOptimistic=function(a){var o=N();o.memoizedState=o.baseState=a;var h={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return o.queue=h,o=Kf.bind(null,St,!0,h),h.dispatch=o,[a,o]};var hr={readContext:Vn,use:ne,useCallback:Kg,useContext:Vn,useEffect:Xf,useImperativeHandle:Yg,useInsertionEffect:Xg,useLayoutEffect:Wg,useMemo:jg,useReducer:Ce,useRef:_s,useState:function(){return Ce(_e)},useDebugValue:Wf,useDeferredValue:function(a,o){var h=X();return Zg(h,Yt.memoizedState,a,o)},useTransition:function(){var a=Ce(_e)[0],o=X().memoizedState;return[typeof a=="boolean"?a:ee(a),o]},useSyncExternalStore:rt,useId:$g};hr.useCacheRefresh=ev,hr.useMemoCache=q,hr.useHostTransitionStatus=Yf,hr.useFormState=Qn,hr.useActionState=Qn,hr.useOptimistic=function(a,o){var h=X();return Gt(h,Yt,a,o)};var Zr={readContext:Vn,use:ne,useCallback:Kg,useContext:Vn,useEffect:Xf,useImperativeHandle:Yg,useInsertionEffect:Xg,useLayoutEffect:Wg,useMemo:jg,useReducer:Fe,useRef:_s,useState:function(){return Fe(_e)},useDebugValue:Wf,useDeferredValue:function(a,o){var h=X();return Yt===null?qf(h,a,o):Zg(h,Yt.memoizedState,a,o)},useTransition:function(){var a=Fe(_e)[0],o=X().memoizedState;return[typeof a=="boolean"?a:ee(a),o]},useSyncExternalStore:rt,useId:$g};Zr.useCacheRefresh=ev,Zr.useMemoCache=q,Zr.useHostTransitionStatus=Yf,Zr.useFormState=Un,Zr.useActionState=Un,Zr.useOptimistic=function(a,o){var h=X();return Yt!==null?Gt(h,Yt,a,o):(h.baseState=a,[a,h.queue.dispatch])};var tp={isMounted:function(a){return(a=a._reactInternals)?p(a)===a:!1},enqueueSetState:function(a,o,h){a=a._reactInternals;var m=yi(),y=fe(m);y.payload=o,h!=null&&(y.callback=h),o=Ue(a,y,m),o!==null&&(ei(o,a,m),et(o,a,m))},enqueueReplaceState:function(a,o,h){a=a._reactInternals;var m=yi(),y=fe(m);y.tag=1,y.payload=o,h!=null&&(y.callback=h),o=Ue(a,y,m),o!==null&&(ei(o,a,m),et(o,a,m))},enqueueForceUpdate:function(a,o){a=a._reactInternals;var h=yi(),m=fe(h);m.tag=2,o!=null&&(m.callback=o),o=Ue(a,m,h),o!==null&&(ei(o,a,h),et(o,a,h))}},W0=typeof reportError=="function"?reportError:function(a){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var o=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof a=="object"&&a!==null&&typeof a.message=="string"?String(a.message):String(a),error:a});if(!window.dispatchEvent(o))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",a);return}console.error(a)},q0=Error(i(461)),Rn=!1,np={dehydrated:null,treeContext:null,retryLane:0},fu=S(null),Jr=null,Is=null,wb=typeof AbortController<"u"?AbortController:function(){var a=[],o=this.signal={aborted:!1,addEventListener:function(h,m){a.push(m)}};this.abort=function(){o.aborted=!0,a.forEach(function(h){return h()})}},Cb=xi.unstable_scheduleCallback,Db=xi.unstable_NormalPriority,un={$$typeof:rr,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0},Y0=ht.S;ht.S=function(a,o){typeof o=="object"&&o!==null&&typeof o.then=="function"&&ae(a,o),Y0!==null&&Y0(a,o)};var Qr=S(null),Os=!1,hn=!1,ip=!1,K0=typeof WeakSet=="function"?WeakSet:Set,wn=null,j0=!1,_n=null,bi=!1,is=null,po=8192,Nb={getCacheForType:function(a){var o=Vn(un),h=o.data.get(a);return h===void 0&&(h=a(),o.data.set(a,h)),h}},du=0,pu=1,mu=2,gu=3,vu=4;if(typeof Symbol=="function"&&Symbol.for){var Ll=Symbol.for;du=Ll("selector.component"),pu=Ll("selector.has_pseudo_class"),mu=Ll("selector.role"),gu=Ll("selector.test_id"),vu=Ll("selector.text")}var Lb=typeof WeakMap=="function"?WeakMap:Map,Kt=0,en=null,Et=null,Dt=0,tn=0,Ti=null,Bs=!1,mo=!1,sp=!1,zs=0,fn=0,fr=0,$r=0,rp=0,Xi=0,go=0,Ul=null,Ms=null,ap=!1,op=0,Pl=1/0,_u=null,dr=null,yu=!1,ea=null,Il=0,lp=0,cp=null,Ol=0,up=null;return Mt.attemptContinuousHydration=function(a){if(a.tag===13){var o=Ee(a,67108864);o!==null&&ei(o,a,67108864),Dd(a,67108864)}},Mt.attemptHydrationAtCurrentPriority=function(a){if(a.tag===13){var o=yi(),h=Ee(a,o);h!==null&&ei(h,a,o),Dd(a,o)}},Mt.attemptSynchronousHydration=function(a){switch(a.tag){case 3:if(a=a.stateNode,a.current.memoizedState.isDehydrated){var o=A(a.pendingLanes);if(o!==0){for(a.pendingLanes|=2,a.entangledLanes|=2;o;){var h=1<<31-Si(o);a.entanglements[1]|=h,o&=~h}pe(a),(Kt&6)===0&&(Pl=ts()+500,Oe(0))}}break;case 13:o=Ee(a,2),o!==null&&ei(o,a,2),Kv(),Dd(a,2)}},Mt.batchedUpdates=function(a,o){return a(o)},Mt.createComponentSelector=function(a){return{$$typeof:du,value:a}},Mt.createContainer=function(a,o,h,m,y,E,L,H,K,ce){return l0(a,o,!1,null,h,m,E,L,H,K,ce,null)},Mt.createHasPseudoClassSelector=function(a){return{$$typeof:pu,value:a}},Mt.createHydrationContainer=function(a,o,h,m,y,E,L,H,K,ce,be,Ie,ze){return a=l0(h,m,!0,a,y,E,H,K,ce,be,Ie,ze),a.context=c0(null),h=a.current,m=yi(),y=fe(m),y.callback=o??null,Ue(h,y,m),a.current.lanes=m,F(a,m),pe(a),a},Mt.createPortal=function(a,o,h){var m=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Za,key:m==null?null:""+m,children:a,containerInfo:o,implementation:h}},Mt.createRoleSelector=function(a){return{$$typeof:mu,value:a}},Mt.createTestNameSelector=function(a){return{$$typeof:gu,value:a}},Mt.createTextSelector=function(a){return{$$typeof:vu,value:a}},Mt.defaultOnCaughtError=function(a){console.error(a)},Mt.defaultOnRecoverableError=function(a){W0(a)},Mt.defaultOnUncaughtError=function(a){W0(a)},Mt.deferredUpdates=function(a){var o=ht.T,h=Xr();try{return hi(32),ht.T=null,a()}finally{hi(h),ht.T=o}},Mt.discreteUpdates=function(a,o,h,m,y){var E=ht.T,L=Xr();try{return hi(2),ht.T=null,a(o,h,m,y)}finally{hi(L),ht.T=E,Kt===0&&(Pl=ts()+500)}},Mt.findAllNodes=Sd,Mt.findBoundingRects=function(a,o){if(!bl)throw Error(i(363));o=Sd(a,o),a=[];for(var h=0;h<o.length;h++)a.push(bE(o[h]));for(o=a.length-1;0<o;o--){h=a[o];for(var m=h.x,y=m+h.width,E=h.y,L=E+h.height,H=o-1;0<=H;H--)if(o!==H){var K=a[H],ce=K.x,be=ce+K.width,Ie=K.y,ze=Ie+K.height;if(m>=ce&&E>=Ie&&y<=be&&L<=ze){a.splice(o,1);break}else if(m!==ce||h.width!==K.width||ze<E||Ie>L){if(!(E!==Ie||h.height!==K.height||be<m||ce>y)){ce>m&&(K.width+=ce-m,K.x=m),be<y&&(K.width=y-ce),a.splice(o,1);break}}else{Ie>E&&(K.height+=Ie-E,K.y=E),ze<L&&(K.height=L-Ie),a.splice(o,1);break}}}return a},Mt.findHostInstance=u0,Mt.findHostInstanceWithNoPortals=function(a){return a=v(a),a=a!==null?M(a):null,a===null?null:El(a.stateNode)},Mt.findHostInstanceWithWarning=function(a){return u0(a)},Mt.flushPassiveEffects=Gr,Mt.flushSyncFromReconciler=function(a){var o=Kt;Kt|=1;var h=ht.T,m=Xr();try{if(hi(2),ht.T=null,a)return a()}finally{hi(m),ht.T=h,Kt=o,(Kt&6)===0&&Oe(0)}},Mt.flushSyncWork=Kv,Mt.focusWithin=function(a,o){if(!bl)throw Error(i(363));for(a=_d(a),o=Xv(a,o),o=Array.from(o),a=0;a<o.length;){var h=o[a++],m=h.tag;if(!Tl(h)){if((m===5||m===26||m===27)&&RE(h.stateNode))return!0;for(h=h.child;h!==null;)o.push(h),h=h.sibling}}return!1},Mt.getFindAllNodesFailureDescription=function(a,o){if(!bl)throw Error(i(363));var h=0,m=[];a=[_d(a),0];for(var y=0;y<a.length;){var E=a[y++],L=E.tag,H=a[y++],K=o[H];if((L!==5&&L!==26&&L!==27||!Tl(E))&&(yd(E,K)&&(m.push(xd(K)),H++,H>h&&(h=H)),H<o.length))for(E=E.child;E!==null;)a.push(E,H),E=E.sibling}if(h<o.length){for(a=[];h<o.length;h++)a.push(xd(o[h]));return`findAllNodes was able to match part of the selector:
  `+(m.join(" > ")+`

No matching component was found for:
  `)+a.join(" > ")}return null},Mt.getPublicRootInstance=function(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 27:case 5:return El(a.child.stateNode);default:return a.child.stateNode}},Mt.injectIntoDevTools=function(){var a={bundleType:0,version:sE,rendererPackageName:rE,currentDispatcherRef:ht,findFiberByHostInstance:S0,reconcilerVersion:"19.0.0"};if(_0!==null&&(a.rendererConfig=_0),typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")a=!1;else{var o=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(o.isDisabled||!o.supportsFiber)a=!0;else{try{Al=o.inject(a),Mi=o}catch{}a=!!o.checkDCE}}return a},Mt.isAlreadyRendering=function(){return!1},Mt.observeVisibleRects=function(a,o,h,m){if(!bl)throw Error(i(363));a=Sd(a,o);var y=wE(a,h,m).disconnect;return{disconnect:function(){y()}}},Mt.shouldError=function(){return null},Mt.shouldSuspend=function(){return!1},Mt.startHostTransition=function(a,o,h,m){if(a.tag!==5)throw Error(i(476));var y=Qg(a).queue;Jg(a,y,o,Qa,h===null?n:function(){var E=Qg(a).next.queue;return ml(a,E,{},yi()),h(m)})},Mt.updateContainer=function(a,o,h,m){var y=o.current,E=yi();return h0(y,E,a,o,h,m),E},Mt.updateContainerSync=function(a,o,h,m){return o.tag===0&&Gr(),h0(o.current,2,a,o,h,m),2},Mt},s.exports.default=s.exports,Object.defineProperty(s.exports,"__esModule",{value:!0})}(am)),am.exports}var By;function u3(){return By||(By=1,rm.exports=c3()),rm.exports}var h3=u3();const f3=lx(h3);var zy=rM();const d3=s=>typeof s=="object"&&typeof s.then=="function",ba=[];function aM(s,e,t=(n,i)=>n===i){if(s===e)return!0;if(!s||!e)return!1;const n=s.length;if(e.length!==n)return!1;for(let i=0;i<n;i++)if(!t(s[i],e[i]))return!1;return!0}function oM(s,e=null,t=!1,n={}){e===null&&(e=[s]);for(const r of ba)if(aM(e,r.keys,r.equal)){if(t)return;if(Object.prototype.hasOwnProperty.call(r,"error"))throw r.error;if(Object.prototype.hasOwnProperty.call(r,"response"))return n.lifespan&&n.lifespan>0&&(r.timeout&&clearTimeout(r.timeout),r.timeout=setTimeout(r.remove,n.lifespan)),r.response;if(!t)throw r.promise}const i={keys:e,equal:n.equal,remove:()=>{const r=ba.indexOf(i);r!==-1&&ba.splice(r,1)},promise:(d3(s)?s:s(...e)).then(r=>{i.response=r,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(r=>i.error=r)};if(ba.push(i),!t)throw i.promise}const p3=(s,e,t)=>oM(s,e,!1,t),m3=(s,e,t)=>void oM(s,e,!0,t),g3=s=>{if(s===void 0||s.length===0)ba.splice(0,ba.length);else{const e=ba.find(t=>aM(s,t.keys,t.equal));e&&e.remove()}};function Bg(s,e,t){if(!s)return;if(t(s)===!0)return s;let n=e?s.return:s.child;for(;n;){const i=Bg(n,e,t);if(i)return i;n=e?null:n.sibling}}function lM(s){try{return Object.defineProperties(s,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return s}}const zg=lM(He.createContext(null));class cM extends He.Component{render(){return He.createElement(zg.Provider,{value:this._reactInternals},this.props.children)}}function uM(){const s=He.useContext(zg);if(s===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=He.useId();return He.useMemo(()=>{for(const t of[s,s==null?void 0:s.alternate]){if(!t)continue;const n=Bg(t,!1,i=>{let r=i.memoizedState;for(;r;){if(r.memoizedState===e)return!0;r=r.next}});if(n)return n}},[s,e])}const v3=Symbol.for("react.context"),_3=s=>s!==null&&typeof s=="object"&&"$$typeof"in s&&s.$$typeof===v3;function y3(){const s=uM(),[e]=He.useState(()=>new Map);e.clear();let t=s;for(;t;){const n=t.type;_3(n)&&n!==zg&&!e.has(n)&&e.set(n,He.use(lM(n))),t=t.return}return e}function x3(){const s=y3();return He.useMemo(()=>Array.from(s.keys()).reduce((e,t)=>n=>He.createElement(e,null,He.createElement(t.Provider,{...n,value:s.get(t)})),e=>He.createElement(cM,{...e})),[s])}function hM(s){let e=s.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const fM=s=>s&&s.isOrthographicCamera,S3=s=>s&&s.hasOwnProperty("current"),M3=s=>s!=null&&(typeof s=="string"||typeof s=="number"||s.isColor),Oc=((s,e)=>typeof window<"u"&&(((s=window.document)==null?void 0:s.createElement)||((e=window.navigator)==null?void 0:e.product)==="ReactNative"))()?He.useLayoutEffect:He.useEffect;function dM(s){const e=He.useRef(s);return Oc(()=>void(e.current=s),[s]),e}function E3(){const s=uM(),e=x3();return He.useMemo(()=>({children:t})=>{const i=!!Bg(s,!0,r=>r.type===He.StrictMode)?He.StrictMode:He.Fragment;return Jt.jsx(i,{children:Jt.jsx(e,{children:t})})},[s,e])}function b3({set:s}){return Oc(()=>(s(new Promise(()=>null)),()=>s(!1)),[s]),null}const T3=(s=>(s=class extends He.Component{constructor(...t){super(...t),this.state={error:!1}}componentDidCatch(t){this.props.set(t)}render(){return this.state.error?null:this.props.children}},s.getDerivedStateFromError=()=>({error:!0}),s))();function pM(s){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(s)?Math.min(Math.max(s[0],t),s[1]):s}function Oo(s){var e;return(e=s.__r3f)==null?void 0:e.root.getState()}const on={obj:s=>s===Object(s)&&!on.arr(s)&&typeof s!="function",fun:s=>typeof s=="function",str:s=>typeof s=="string",num:s=>typeof s=="number",boo:s=>typeof s=="boolean",und:s=>s===void 0,nul:s=>s===null,arr:s=>Array.isArray(s),equ(s,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof s!=typeof e||!!s!=!!e)return!1;if(on.str(s)||on.num(s)||on.boo(s))return s===e;const r=on.obj(s);if(r&&n==="reference")return s===e;const l=on.arr(s);if(l&&t==="reference")return s===e;if((l||r)&&s===e)return!0;let c;for(c in s)if(!(c in e))return!1;if(r&&t==="shallow"&&n==="shallow"){for(c in i?e:s)if(!on.equ(s[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:s)if(s[c]!==e[c])return!1;if(on.und(c)){if(l&&s.length===0&&e.length===0||r&&Object.keys(s).length===0&&Object.keys(e).length===0)return!0;if(s!==e)return!1}return!0}};function A3(s){const e={nodes:{},materials:{},meshes:{}};return s&&s.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material),t.isMesh&&!e.meshes[t.name]&&(e.meshes[t.name]=t)}),e}function R3(s){s.type!=="Scene"&&(s.dispose==null||s.dispose());for(const e in s){const t=s[e];(t==null?void 0:t.type)!=="Scene"&&(t==null||t.dispose==null||t.dispose())}}const mM=["children","key","ref"];function w3(s){const e={};for(const t in s)mM.includes(t)||(e[t]=s[t]);return e}function rf(s,e,t,n){const i=s;let r=i==null?void 0:i.__r3f;return r||(r={root:e,type:t,parent:null,children:[],props:w3(n),object:i,eventCount:0,handlers:{},isHidden:!1},i&&(i.__r3f=r)),r}function Ec(s,e){let t=s[e];if(!e.includes("-"))return{root:s,key:e,target:t};t=s;for(const i of e.split("-")){var n;e=i,s=t,t=(n=t)==null?void 0:n[e]}return{root:s,key:e,target:t}}const Fy=/-\d+$/;function af(s,e){if(on.str(e.props.attach)){if(Fy.test(e.props.attach)){const i=e.props.attach.replace(Fy,""),{root:r,key:l}=Ec(s.object,i);Array.isArray(r[l])||(r[l]=[])}const{root:t,key:n}=Ec(s.object,e.props.attach);e.previousAttach=t[n],t[n]=e.object}else on.fun(e.props.attach)&&(e.previousAttach=e.props.attach(s.object,e.object))}function of(s,e){if(on.str(e.props.attach)){const{root:t,key:n}=Ec(s.object,e.props.attach),i=e.previousAttach;i===void 0?delete t[n]:t[n]=i}else e.previousAttach==null||e.previousAttach(s.object,e.object);delete e.previousAttach}const Om=[...mM,"args","dispose","attach","object","onUpdate","dispose"],Hy=new Map;function C3(s){let e=Hy.get(s.constructor);try{e||(e=new s.constructor,Hy.set(s.constructor,e))}catch{}return e}function D3(s,e){const t={};for(const n in e)if(!Om.includes(n)&&!on.equ(e[n],s.props[n])){t[n]=e[n];for(const i in e)i.startsWith(`${n}-`)&&(t[i]=e[i])}for(const n in s.props){if(Om.includes(n)||e.hasOwnProperty(n))continue;const{root:i,key:r}=Ec(s.object,n);if(i.constructor&&i.constructor.length===0){const l=C3(i);on.und(l)||(t[r]=l[r])}else t[r]=0}return t}const N3=["map","emissiveMap","sheenColorMap","specularColorMap","envMap"],L3=/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/;function Ar(s,e){var t;const n=s.__r3f,i=n&&hM(n).getState(),r=n==null?void 0:n.eventCount;for(const c in e){let u=e[c];if(Om.includes(c))continue;if(n&&L3.test(c)){typeof u=="function"?n.handlers[c]=u:delete n.handlers[c],n.eventCount=Object.keys(n.handlers).length;continue}if(u===void 0)continue;let{root:f,key:d,target:p}=Ec(s,c);if(p instanceof Jo&&u instanceof Jo)p.mask=u.mask;else if(p instanceof Re&&M3(u))p.set(u);else if(p!==null&&typeof p=="object"&&typeof p.set=="function"&&typeof p.copy=="function"&&u!=null&&u.constructor&&p.constructor===u.constructor)p.copy(u);else if(p!==null&&typeof p=="object"&&typeof p.set=="function"&&Array.isArray(u))typeof p.fromArray=="function"?p.fromArray(u):p.set(...u);else if(p!==null&&typeof p=="object"&&typeof p.set=="function"&&typeof u=="number")typeof p.setScalar=="function"?p.setScalar(u):p.set(u);else{var l;f[d]=u,i&&!i.linear&&N3.includes(d)&&(l=f[d])!=null&&l.isTexture&&f[d].format===jn&&f[d].type===Bn&&(f[d].colorSpace=kt)}}if(n!=null&&n.parent&&i!=null&&i.internal&&(t=n.object)!=null&&t.isObject3D&&r!==n.eventCount){const c=n.object,u=i.internal.interaction.indexOf(c);u>-1&&i.internal.interaction.splice(u,1),n.eventCount&&c.raycast!==null&&i.internal.interaction.push(c)}return n&&n.props.attach===void 0&&(n.object.isBufferGeometry?n.props.attach="geometry":n.object.isMaterial&&(n.props.attach="material")),n&&cl(n),s}function cl(s){var e;if(!s.parent)return;s.props.onUpdate==null||s.props.onUpdate(s.object);const t=(e=s.root)==null||e.getState==null?void 0:e.getState();t&&t.internal.frames===0&&t.invalidate()}function U3(s,e){s.manual||(fM(s)?(s.left=e.width/-2,s.right=e.width/2,s.top=e.height/2,s.bottom=e.height/-2):s.aspect=e.width/e.height,s.updateProjectionMatrix())}const si=s=>s==null?void 0:s.isObject3D;function hh(s){return(s.eventObject||s.object).uuid+"/"+s.index+s.instanceId}function gM(s,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(s.delete(n),i.target.releasePointerCapture(n)))}function P3(s,e){const{internal:t}=s.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{gM(t.capturedMap,e,n,i)})}function I3(s){function e(u){const{internal:f}=s.getState(),d=u.offsetX-f.initialClick[0],p=u.offsetY-f.initialClick[1];return Math.round(Math.sqrt(d*d+p*p))}function t(u){return u.filter(f=>["Move","Over","Enter","Out","Leave"].some(d=>{var p;return(p=f.__r3f)==null?void 0:p.handlers["onPointer"+d]}))}function n(u,f){const d=s.getState(),p=new Set,g=[],v=f?f(d.internal.interaction):d.internal.interaction;for(let _=0;_<v.length;_++){const b=Oo(v[_]);b&&(b.raycaster.camera=void 0)}d.previousRoot||d.events.compute==null||d.events.compute(u,d);function x(_){const b=Oo(_);if(!b||!b.events.enabled||b.raycaster.camera===null)return[];if(b.raycaster.camera===void 0){var T;b.events.compute==null||b.events.compute(u,b,(T=b.previousRoot)==null?void 0:T.getState()),b.raycaster.camera===void 0&&(b.raycaster.camera=null)}return b.raycaster.camera?b.raycaster.intersectObject(_,!0):[]}let M=v.flatMap(x).sort((_,b)=>{const T=Oo(_.object),A=Oo(b.object);return!T||!A?_.distance-b.distance:A.events.priority-T.events.priority||_.distance-b.distance}).filter(_=>{const b=hh(_);return p.has(b)?!1:(p.add(b),!0)});d.events.filter&&(M=d.events.filter(M,d));for(const _ of M){let b=_.object;for(;b;){var S;(S=b.__r3f)!=null&&S.eventCount&&g.push({..._,eventObject:b}),b=b.parent}}if("pointerId"in u&&d.internal.capturedMap.has(u.pointerId))for(let _ of d.internal.capturedMap.get(u.pointerId).values())p.has(hh(_.intersection))||g.push(_.intersection);return g}function i(u,f,d,p){if(u.length){const g={stopped:!1};for(const v of u){let x=Oo(v.object);if(x||v.object.traverseAncestors(M=>{const S=Oo(M);if(S)return x=S,!1}),x){const{raycaster:M,pointer:S,camera:_,internal:b}=x,T=new B(S.x,S.y,0).unproject(_),A=w=>{var R,F;return(R=(F=b.capturedMap.get(w))==null?void 0:F.has(v.eventObject))!=null?R:!1},U=w=>{const R={intersection:v,target:f.target};b.capturedMap.has(w)?b.capturedMap.get(w).set(v.eventObject,R):b.capturedMap.set(w,new Map([[v.eventObject,R]])),f.target.setPointerCapture(w)},D=w=>{const R=b.capturedMap.get(w);R&&gM(b.capturedMap,v.eventObject,R,w)};let P={};for(let w in f){let R=f[w];typeof R!="function"&&(P[w]=R)}let I={...v,...P,pointer:S,intersections:u,stopped:g.stopped,delta:d,unprojectedPoint:T,ray:M.ray,camera:_,stopPropagation(){const w="pointerId"in f&&b.capturedMap.get(f.pointerId);if((!w||w.has(v.eventObject))&&(I.stopped=g.stopped=!0,b.hovered.size&&Array.from(b.hovered.values()).find(R=>R.eventObject===v.eventObject))){const R=u.slice(0,u.indexOf(v));r([...R,v])}},target:{hasPointerCapture:A,setPointerCapture:U,releasePointerCapture:D},currentTarget:{hasPointerCapture:A,setPointerCapture:U,releasePointerCapture:D},nativeEvent:f};if(p(I),g.stopped===!0)break}}}return u}function r(u){const{internal:f}=s.getState();for(const d of f.hovered.values())if(!u.length||!u.find(p=>p.object===d.object&&p.index===d.index&&p.instanceId===d.instanceId)){const g=d.eventObject.__r3f;if(f.hovered.delete(hh(d)),g!=null&&g.eventCount){const v=g.handlers,x={...d,intersections:u};v.onPointerOut==null||v.onPointerOut(x),v.onPointerLeave==null||v.onPointerLeave(x)}}}function l(u,f){for(let d=0;d<f.length;d++){const p=f[d].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>r([]);case"onLostPointerCapture":return f=>{const{internal:d}=s.getState();"pointerId"in f&&d.capturedMap.has(f.pointerId)&&requestAnimationFrame(()=>{d.capturedMap.has(f.pointerId)&&(d.capturedMap.delete(f.pointerId),r([]))})}}return function(d){const{onPointerMissed:p,internal:g}=s.getState();g.lastEvent.current=d;const v=u==="onPointerMove",x=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",S=n(d,v?t:void 0),_=x?e(d):0;u==="onPointerDown"&&(g.initialClick=[d.offsetX,d.offsetY],g.initialHits=S.map(T=>T.eventObject)),x&&!S.length&&_<=2&&(l(d,g.interaction),p&&p(d)),v&&r(S);function b(T){const A=T.eventObject,U=A.__r3f;if(!(U!=null&&U.eventCount))return;const D=U.handlers;if(v){if(D.onPointerOver||D.onPointerEnter||D.onPointerOut||D.onPointerLeave){const P=hh(T),I=g.hovered.get(P);I?I.stopped&&T.stopPropagation():(g.hovered.set(P,T),D.onPointerOver==null||D.onPointerOver(T),D.onPointerEnter==null||D.onPointerEnter(T))}D.onPointerMove==null||D.onPointerMove(T)}else{const P=D[u];P?(!x||g.initialHits.includes(A))&&(l(d,g.interaction.filter(I=>!g.initialHits.includes(I))),P(T)):x&&g.initialHits.includes(A)&&l(d,g.interaction.filter(I=>!g.initialHits.includes(I)))}}i(S,d,_,b)}}return{handlePointer:c}}const Vy=s=>!!(s!=null&&s.render),vM=He.createContext(null),O3=(s,e)=>{const t=o3((c,u)=>{const f=new B,d=new B,p=new B;function g(_=u().camera,b=d,T=u().size){const{width:A,height:U,top:D,left:P}=T,I=A/U;b.isVector3?p.copy(b):p.set(...b);const w=_.getWorldPosition(f).distanceTo(p);if(fM(_))return{width:A/_.zoom,height:U/_.zoom,top:D,left:P,factor:1,distance:w,aspect:I};{const R=_.fov*Math.PI/180,F=2*Math.tan(R/2)*w,j=F*(A/U);return{width:j,height:F,top:D,left:P,factor:A/j,distance:w,aspect:I}}}let v;const x=_=>c(b=>({performance:{...b.performance,current:_}})),M=new oe;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},scene:null,xr:null,invalidate:(_=1)=>s(u(),_),advance:(_,b)=>e(_,b,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new Lg,pointer:M,mouse:M,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=u();v&&clearTimeout(v),_.performance.current!==_.performance.min&&x(_.performance.min),v=setTimeout(()=>x(u().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:g},setEvents:_=>c(b=>({...b,events:{...b.events,..._}})),setSize:(_,b,T=0,A=0)=>{const U=u().camera,D={width:_,height:b,top:T,left:A};c(P=>({size:D,viewport:{...P.viewport,...g(U,d,D)}}))},setDpr:_=>c(b=>{const T=pM(_);return{viewport:{...b.viewport,dpr:T,initialDpr:b.viewport.initialDpr||T}}}),setFrameloop:(_="always")=>{const b=u().clock;b.stop(),b.elapsedTime=0,_!=="never"&&(b.start(),b.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,lastEvent:He.createRef(),active:!1,frames:0,priority:0,subscribe:(_,b,T)=>{const A=u().internal;return A.priority=A.priority+(b>0?1:0),A.subscribers.push({ref:_,priority:b,store:T}),A.subscribers=A.subscribers.sort((U,D)=>U.priority-D.priority),()=>{const U=u().internal;U!=null&&U.subscribers&&(U.priority=U.priority-(b>0?1:0),U.subscribers=U.subscribers.filter(D=>D.ref!==_))}}}}}),n=t.getState();let i=n.size,r=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:f,gl:d,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||f.dpr!==r){i=u,r=f.dpr,U3(c,u),f.dpr>0&&d.setPixelRatio(f.dpr);const g=typeof HTMLCanvasElement<"u"&&d.domElement instanceof HTMLCanvasElement;d.setSize(u.width,u.height,g)}c!==l&&(l=c,p(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>s(c)),t};function _M(){const s=He.useContext(vM);if(!s)throw new Error("R3F: Hooks can only be used within the Canvas component!");return s}function wa(s=t=>t,e){return _M()(s,e)}function Fg(s,e=0){const t=_M(),n=t.getState().internal.subscribe,i=dM(s);return Oc(()=>n(i,e,t),[e,n,t]),null}const Gy=new WeakMap,B3=s=>{var e;return typeof s=="function"&&(s==null||(e=s.prototype)==null?void 0:e.constructor)===s};function yM(s,e){return function(t,...n){let i;return B3(t)?(i=Gy.get(t),i||(i=new t,Gy.set(t,i))):i=t,s&&s(i),Promise.all(n.map(r=>new Promise((l,c)=>i.load(r,u=>{si(u==null?void 0:u.scene)&&Object.assign(u,A3(u.scene)),l(u)},e,u=>c(new Error(`Could not load ${r}: ${u==null?void 0:u.message}`))))))}}function Hg(s,e,t,n){const i=Array.isArray(e)?e:[e],r=p3(yM(t,n),[s,...i],{equal:on.equ});return Array.isArray(e)?r:r[0]}Hg.preload=function(s,e,t){const n=Array.isArray(e)?e:[e];return m3(yM(t),[s,...n])};Hg.clear=function(s,e){const t=Array.isArray(e)?e:[e];return g3([s,...t])};function z3(s){const e=f3(s);return e.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:He.version}),e}const xM=0,tl={},F3=/^three(?=[A-Z])/,Gf=s=>`${s[0].toUpperCase()}${s.slice(1)}`;let H3=0;const V3=s=>typeof s=="function";function SM(s){if(V3(s)){const e=`${H3++}`;return tl[e]=s,e}else Object.assign(tl,s)}function MM(s,e){const t=Gf(s),n=tl[t];if(s!=="primitive"&&!n)throw new Error(`R3F: ${t} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(s==="primitive"&&!e.object)throw new Error("R3F: Primitives without 'object' are invalid!");if(e.args!==void 0&&!Array.isArray(e.args))throw new Error("R3F: The args prop must be an array!")}function G3(s,e,t){var n;return s=Gf(s)in tl?s:s.replace(F3,""),MM(s,e),s==="primitive"&&(n=e.object)!=null&&n.__r3f&&delete e.object.__r3f,rf(e.object,t,s,e)}function k3(s){if(!s.isHidden){var e;s.props.attach&&(e=s.parent)!=null&&e.object?of(s.parent,s):si(s.object)&&(s.object.visible=!1),s.isHidden=!0,cl(s)}}function EM(s){if(s.isHidden){var e;s.props.attach&&(e=s.parent)!=null&&e.object?af(s.parent,s):si(s.object)&&s.props.visible!==!1&&(s.object.visible=!0),s.isHidden=!1,cl(s)}}function Vg(s,e,t){const n=e.root.getState();if(!(!s.parent&&s.object!==n.scene)){if(!e.object){var i,r;const l=tl[Gf(e.type)];e.object=(i=e.props.object)!=null?i:new l(...(r=e.props.args)!=null?r:[]),e.object.__r3f=e}if(Ar(e.object,e.props),e.props.attach)af(s,e);else if(si(e.object)&&si(s.object)){const l=s.object.children.indexOf(t==null?void 0:t.object);if(t&&l!==-1){const c=s.object.children.indexOf(e.object);if(c!==-1){s.object.children.splice(c,1);const u=c<l?l-1:l;s.object.children.splice(u,0,e.object)}else e.object.parent=s.object,s.object.children.splice(l,0,e.object),e.object.dispatchEvent({type:"added"}),s.object.dispatchEvent({type:"childadded",child:e.object})}else s.object.add(e.object)}for(const l of e.children)Vg(e,l);cl(e)}}function cm(s,e){e&&(e.parent=s,s.children.push(e),Vg(s,e))}function ky(s,e,t){if(!e||!t)return;e.parent=s;const n=s.children.indexOf(t);n!==-1?s.children.splice(n,0,e):s.children.push(e),Vg(s,e,t)}function bM(s){if(typeof s.dispose=="function"){const e=()=>{try{s.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT<"u"?e():zy.unstable_scheduleCallback(zy.unstable_IdlePriority,e)}}function Bm(s,e,t){if(!e)return;e.parent=null;const n=s.children.indexOf(e);n!==-1&&s.children.splice(n,1),e.props.attach?of(s,e):si(e.object)&&si(s.object)&&(s.object.remove(e.object),P3(hM(e),e.object));const i=e.props.dispose!==null&&t!==!1;for(let r=e.children.length-1;r>=0;r--){const l=e.children[r];Bm(e,l,i)}e.children.length=0,delete e.object.__r3f,i&&e.type!=="primitive"&&e.object.type!=="Scene"&&bM(e.object),t===void 0&&cl(e)}function X3(s,e){for(const t of[s,s.alternate])if(t!==null)if(typeof t.ref=="function"){t.refCleanup==null||t.refCleanup();const n=t.ref(e);typeof n=="function"&&(t.refCleanup=n)}else t.ref&&(t.ref.current=e)}const vh=[];function W3(){for(const[t]of vh){const n=t.parent;if(n){t.props.attach?of(n,t):si(t.object)&&si(n.object)&&n.object.remove(t.object);for(const i of t.children)i.props.attach?of(t,i):si(i.object)&&si(t.object)&&t.object.remove(i.object)}t.isHidden&&EM(t),t.object.__r3f&&delete t.object.__r3f,t.type!=="primitive"&&bM(t.object)}for(const[t,n,i]of vh){t.props=n;const r=t.parent;if(r){var s,e;const l=tl[Gf(t.type)];t.object=(s=t.props.object)!=null?s:new l(...(e=t.props.args)!=null?e:[]),t.object.__r3f=t,X3(i,t.object),Ar(t.object,t.props),t.props.attach?af(r,t):si(t.object)&&si(r.object)&&r.object.add(t.object);for(const c of t.children)c.props.attach?af(t,c):si(c.object)&&si(t.object)&&t.object.add(c.object);cl(t)}}vh.length=0}const um=()=>{},Xy={};let fh=xM;const q3=0,Y3=4,zm=z3({isPrimaryRenderer:!1,warnsIfNotActing:!1,supportsMutation:!0,supportsPersistence:!1,supportsHydration:!1,createInstance:G3,removeChild:Bm,appendChild:cm,appendInitialChild:cm,insertBefore:ky,appendChildToContainer(s,e){const t=s.getState().scene.__r3f;!e||!t||cm(t,e)},removeChildFromContainer(s,e){const t=s.getState().scene.__r3f;!e||!t||Bm(t,e)},insertInContainerBefore(s,e,t){const n=s.getState().scene.__r3f;!e||!t||!n||ky(n,e,t)},getRootHostContext:()=>Xy,getChildHostContext:()=>Xy,commitUpdate(s,e,t,n,i){var r,l,c;MM(e,n);let u=!1;if((s.type==="primitive"&&t.object!==n.object||((r=n.args)==null?void 0:r.length)!==((l=t.args)==null?void 0:l.length)||(c=n.args)!=null&&c.some((d,p)=>{var g;return d!==((g=t.args)==null?void 0:g[p])}))&&(u=!0),u)vh.push([s,{...n},i]);else{const d=D3(s,n);Object.keys(d).length&&(Object.assign(s.props,d),Ar(s.object,d))}(i.sibling===null||(i.flags&Y3)===q3)&&W3()},finalizeInitialChildren:()=>!1,commitMount(){},getPublicInstance:s=>s==null?void 0:s.object,prepareForCommit:()=>null,preparePortalMount:s=>rf(s.getState().scene,s,"",{}),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance:k3,unhideInstance:EM,createTextInstance:um,hideTextInstance:um,unhideTextInstance:um,scheduleTimeout:typeof setTimeout=="function"?setTimeout:void 0,cancelTimeout:typeof clearTimeout=="function"?clearTimeout:void 0,noTimeout:-1,getInstanceFromNode:()=>null,beforeActiveInstanceBlur(){},afterActiveInstanceBlur(){},detachDeletedInstance(){},prepareScopeUpdate(){},getInstanceFromScope:()=>null,shouldAttemptEagerTransition:()=>!1,trackSchedulerEvent:()=>{},resolveEventType:()=>null,resolveEventTimeStamp:()=>-1.1,requestPostPaintCallback(){},maySuspendCommit:()=>!1,preloadInstance:()=>!0,startSuspendingCommit(){},suspendInstance(){},waitForCommitToBeReady:()=>null,NotPendingTransition:null,HostTransitionContext:He.createContext(null),setCurrentUpdatePriority(s){fh=s},getCurrentUpdatePriority(){return fh},resolveUpdatePriority(){var s;if(fh!==xM)return fh;switch(typeof window<"u"&&((s=window.event)==null?void 0:s.type)){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return gh.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return gh.ContinuousEventPriority;default:return gh.DefaultEventPriority}},resetFormInstance(){}}),za=new Map,Bo={objects:"shallow",strict:!1};function K3(s,e){if(!e&&typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement&&s.parentElement){const{width:t,height:n,top:i,left:r}=s.parentElement.getBoundingClientRect();return{width:t,height:n,top:i,left:r}}else if(!e&&typeof OffscreenCanvas<"u"&&s instanceof OffscreenCanvas)return{width:s.width,height:s.height,top:0,left:0};return{width:0,height:0,top:0,left:0,...e}}function j3(s){const e=za.get(s),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,r=n||O3(Vm,qy),l=t||zm.createContainer(r,gh.ConcurrentRoot,null,!1,null,"",i,i,i,null);e||za.set(s,{fiber:l,store:r});let c,u,f=!1,d=null;return{async configure(p={}){let g;d=new Promise(ye=>g=ye);let{gl:v,size:x,scene:M,events:S,onCreated:_,shadows:b=!1,linear:T=!1,flat:A=!1,legacy:U=!1,orthographic:D=!1,frameloop:P="always",dpr:I=[1,2],performance:w,raycaster:R,camera:F,onPointerMissed:j}=p,k=r.getState(),J=k.gl;if(!k.gl){const ye={canvas:s,powerPreference:"high-performance",antialias:!0,alpha:!0},Pe=typeof v=="function"?await v(ye):v;Vy(Pe)?J=Pe:J=new sM({...ye,...v}),k.set({gl:J})}let se=k.raycaster;se||k.set({raycaster:se=new ZS});const{params:V,...$}=R||{};if(on.equ($,se,Bo)||Ar(se,{...$}),on.equ(V,se.params,Bo)||Ar(se,{params:{...se.params,...V}}),!k.camera||k.camera===u&&!on.equ(u,F,Bo)){u=F;const ye=F==null?void 0:F.isCamera,Pe=ye?F:D?new ol(0,0,0,0,.1,1e3):new xn(75,0,.1,1e3);ye||(Pe.position.z=5,F&&(Ar(Pe,F),Pe.manual||("aspect"in F||"left"in F||"right"in F||"bottom"in F||"top"in F)&&(Pe.manual=!0,Pe.updateProjectionMatrix())),!k.camera&&!(F!=null&&F.rotation)&&Pe.lookAt(0,0,0)),k.set({camera:Pe}),se.camera=Pe}if(!k.scene){let ye;M!=null&&M.isScene?(ye=M,rf(ye,r,"",{})):(ye=new _c,rf(ye,r,"",{}),M&&Ar(ye,M)),k.set({scene:ye})}S&&!k.events.handlers&&k.set({events:S(r)});const W=K3(s,x);if(on.equ(W,k.size,Bo)||k.setSize(W.width,W.height,W.top,W.left),I&&k.viewport.dpr!==pM(I)&&k.setDpr(I),k.frameloop!==P&&k.setFrameloop(P),k.onPointerMissed||k.set({onPointerMissed:j}),w&&!on.equ(w,k.performance,Bo)&&k.set(ye=>({performance:{...ye.performance,...w}})),!k.xr){var le;const ye=(te,xe)=>{const We=r.getState();We.frameloop!=="never"&&qy(te,!0,We,xe)},Pe=()=>{const te=r.getState();te.gl.xr.enabled=te.gl.xr.isPresenting,te.gl.xr.setAnimationLoop(te.gl.xr.isPresenting?ye:null),te.gl.xr.isPresenting||Vm(te)},Je={connect(){const te=r.getState().gl;te.xr.addEventListener("sessionstart",Pe),te.xr.addEventListener("sessionend",Pe)},disconnect(){const te=r.getState().gl;te.xr.removeEventListener("sessionstart",Pe),te.xr.removeEventListener("sessionend",Pe)}};typeof((le=J.xr)==null?void 0:le.addEventListener)=="function"&&Je.connect(),k.set({xr:Je})}if(J.shadowMap){const ye=J.shadowMap.enabled,Pe=J.shadowMap.type;if(J.shadowMap.enabled=!!b,on.boo(b))J.shadowMap.type=ec;else if(on.str(b)){var me;const Je={basic:fx,percentage:cf,soft:ec,variance:os};J.shadowMap.type=(me=Je[b])!=null?me:ec}else on.obj(b)&&Object.assign(J.shadowMap,b);(ye!==J.shadowMap.enabled||Pe!==J.shadowMap.type)&&(J.shadowMap.needsUpdate=!0)}return bt.enabled=!U,f||(J.outputColorSpace=T?bn:kt,J.toneMapping=A?hs:Km),k.legacy!==U&&k.set(()=>({legacy:U})),k.linear!==T&&k.set(()=>({linear:T})),k.flat!==A&&k.set(()=>({flat:A})),v&&!on.fun(v)&&!Vy(v)&&!on.equ(v,J,Bo)&&Ar(J,v),c=_,f=!0,g(),this},render(p){return!f&&!d&&this.configure(),d.then(()=>{zm.updateContainer(Jt.jsx(Z3,{store:r,children:p,onCreated:c,rootElement:s}),l,null,()=>{})}),r},unmount(){TM(s)}}}function Z3({store:s,children:e,onCreated:t,rootElement:n}){return Oc(()=>{const i=s.getState();i.set(r=>({internal:{...r.internal,active:!0}})),t&&t(i),s.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),Jt.jsx(vM.Provider,{value:s,children:e})}function TM(s,e){const t=za.get(s),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),zm.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var r,l,c,u;i.events.disconnect==null||i.events.disconnect(),(r=i.gl)==null||(l=r.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),R3(i.scene),za.delete(s)}catch{}},500)})}}const J3=new Set,Q3=new Set,$3=new Set;function hm(s,e){if(s.size)for(const{callback:t}of s.values())t(e)}function cc(s,e){switch(s){case"before":return hm(J3,e);case"after":return hm(Q3,e);case"tail":return hm($3,e)}}let fm,dm;function Fm(s,e,t){let n=e.clock.getDelta();e.frameloop==="never"&&typeof s=="number"&&(n=s-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=s),fm=e.internal.subscribers;for(let i=0;i<fm.length;i++)dm=fm[i],dm.ref.current(dm.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}let lf=!1,Hm=!1,pm,Wy,zo;function AM(s){Wy=requestAnimationFrame(AM),lf=!0,pm=0,cc("before",s),Hm=!0;for(const t of za.values()){var e;zo=t.store.getState(),zo.internal.active&&(zo.frameloop==="always"||zo.internal.frames>0)&&!((e=zo.gl.xr)!=null&&e.isPresenting)&&(pm+=Fm(s,zo))}if(Hm=!1,cc("after",s),pm===0)return cc("tail",s),lf=!1,cancelAnimationFrame(Wy)}function Vm(s,e=1){var t;if(!s)return za.forEach(n=>Vm(n.store.getState(),e));(t=s.gl.xr)!=null&&t.isPresenting||!s.internal.active||s.frameloop==="never"||(e>1?s.internal.frames=Math.min(60,s.internal.frames+e):Hm?s.internal.frames=2:s.internal.frames=1,lf||(lf=!0,requestAnimationFrame(AM)))}function qy(s,e=!0,t,n){if(e&&cc("before",s),t)Fm(s,t,n);else for(const i of za.values())Fm(s,i.store.getState());e&&cc("after",s)}const mm={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function eN(s){const{handlePointer:e}=I3(s);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(mm).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=s.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{const{set:n,events:i}=s.getState();if(i.disconnect==null||i.disconnect(),n(r=>({events:{...r.events,connected:t}})),i.handlers)for(const r in i.handlers){const l=i.handlers[r],[c,u]=mm[r];t.addEventListener(c,l,{passive:u})}},disconnect:()=>{const{set:t,events:n}=s.getState();if(n.connected){if(n.handlers)for(const i in n.handlers){const r=n.handlers[i],[l]=mm[i];n.connected.removeEventListener(l,r)}t(i=>({events:{...i.events,connected:void 0}}))}}}}function Yy(s,e){let t;return(...n)=>{window.clearTimeout(t),t=window.setTimeout(()=>s(...n),e)}}function tN({debounce:s,scroll:e,polyfill:t,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=t||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[r,l]=He.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=He.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:r,orientationHandler:null}),u=s?typeof s=="number"?s:s.scroll:null,f=s?typeof s=="number"?s:s.resize:null,d=He.useRef(!1);He.useEffect(()=>(d.current=!0,()=>void(d.current=!1)));const[p,g,v]=He.useMemo(()=>{const _=()=>{if(!c.current.element)return;const{left:b,top:T,width:A,height:U,bottom:D,right:P,x:I,y:w}=c.current.element.getBoundingClientRect(),R={left:b,top:T,width:A,height:U,bottom:D,right:P,x:I,y:w};c.current.element instanceof HTMLElement&&n&&(R.height=c.current.element.offsetHeight,R.width=c.current.element.offsetWidth),Object.freeze(R),d.current&&!rN(c.current.lastBounds,R)&&l(c.current.lastBounds=R)};return[_,f?Yy(_,f):_,u?Yy(_,u):_]},[l,n,u,f]);function x(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(_=>_.removeEventListener("scroll",v,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function M(){c.current.element&&(c.current.resizeObserver=new i(v),c.current.resizeObserver.observe(c.current.element),e&&c.current.scrollContainers&&c.current.scrollContainers.forEach(_=>_.addEventListener("scroll",v,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{v()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const S=_=>{!_||_===c.current.element||(x(),c.current.element=_,c.current.scrollContainers=RM(_),M())};return iN(v,!!e),nN(g),He.useEffect(()=>{x(),M()},[e,v,g]),He.useEffect(()=>x,[]),[S,r,p]}function nN(s){He.useEffect(()=>{const e=s;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[s])}function iN(s,e){He.useEffect(()=>{if(e){const t=s;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[s,e])}function RM(s){const e=[];if(!s||s===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(s);return[t,n,i].some(r=>r==="auto"||r==="scroll")&&e.push(s),[...e,...RM(s.parentElement)]}const sN=["x","y","top","bottom","left","right","width","height"],rN=(s,e)=>sN.every(t=>s[t]===e[t]);function aN({ref:s,children:e,fallback:t,resize:n,style:i,gl:r,events:l=eN,eventSource:c,eventPrefix:u,shadows:f,linear:d,flat:p,legacy:g,orthographic:v,frameloop:x,dpr:M,performance:S,raycaster:_,camera:b,scene:T,onPointerMissed:A,onCreated:U,...D}){He.useMemo(()=>SM(KD),[]);const P=E3(),[I,w]=tN({scroll:!0,debounce:{scroll:50,resize:0},...n}),R=He.useRef(null),F=He.useRef(null);He.useImperativeHandle(s,()=>R.current);const j=dM(A),[k,J]=He.useState(!1),[se,V]=He.useState(!1);if(k)throw k;if(se)throw se;const $=He.useRef(null);Oc(()=>{const le=R.current;if(w.width>0&&w.height>0&&le){$.current||($.current=j3(le));async function me(){await $.current.configure({gl:r,scene:T,events:l,shadows:f,linear:d,flat:p,legacy:g,orthographic:v,frameloop:x,dpr:M,performance:S,raycaster:_,camera:b,size:w,onPointerMissed:(...ye)=>j.current==null?void 0:j.current(...ye),onCreated:ye=>{ye.events.connect==null||ye.events.connect(c?S3(c)?c.current:c:F.current),u&&ye.setEvents({compute:(Pe,Je)=>{const te=Pe[u+"X"],xe=Pe[u+"Y"];Je.pointer.set(te/Je.size.width*2-1,-(xe/Je.size.height)*2+1),Je.raycaster.setFromCamera(Je.pointer,Je.camera)}}),U==null||U(ye)}}),$.current.render(Jt.jsx(P,{children:Jt.jsx(T3,{set:V,children:Jt.jsx(He.Suspense,{fallback:Jt.jsx(b3,{set:J}),children:e??null})})}))}me()}}),He.useEffect(()=>{const le=R.current;if(le)return()=>TM(le)},[]);const W=c?"none":"auto";return Jt.jsx("div",{ref:F,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:W,...i},...D,children:Jt.jsx("div",{ref:I,style:{width:"100%",height:"100%"},children:Jt.jsx("canvas",{ref:R,style:{display:"block"},children:t})})})}function oN(s){return Jt.jsx(cM,{children:Jt.jsx(aN,{...s})})}function Gm(){return Gm=Object.assign?Object.assign.bind():function(s){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(s[n]=t[n])}return s},Gm.apply(null,arguments)}function lN(s,e,t){const n=wa(v=>v.size),i=wa(v=>v.viewport),r=typeof s=="number"?s:n.width*i.dpr,l=n.height*i.dpr,c=(typeof s=="number"?t:s)||{},{samples:u=0,depth:f,...d}=c,p=f??c.depthBuffer,g=He.useMemo(()=>{const v=new Sn(r,l,{minFilter:jt,magFilter:jt,type:Lr,...d});return p&&(v.depthTexture=new Dc(r,l,Kn)),v.samples=u,v},[]);return He.useLayoutEffect(()=>{g.setSize(r,l),u&&(g.samples=u)},[u,g,r,l]),He.useEffect(()=>()=>g.dispose(),[]),g}const cN=s=>typeof s=="function",uN=He.forwardRef(({envMap:s,resolution:e=256,frames:t=1/0,children:n,makeDefault:i,...r},l)=>{const c=wa(({set:S})=>S),u=wa(({camera:S})=>S),f=wa(({size:S})=>S),d=He.useRef(null);He.useImperativeHandle(l,()=>d.current,[]);const p=He.useRef(null),g=lN(e);He.useLayoutEffect(()=>{r.manual||d.current.updateProjectionMatrix()},[f,r]),He.useLayoutEffect(()=>{d.current.updateProjectionMatrix()}),He.useLayoutEffect(()=>{if(i){const S=u;return c(()=>({camera:d.current})),()=>c(()=>({camera:S}))}},[d,i,c]);let v=0,x=null;const M=cN(n);return Fg(S=>{M&&(t===1/0||v<t)&&(p.current.visible=!1,S.gl.setRenderTarget(g),x=S.scene.background,s&&(S.scene.background=s),S.gl.render(S.scene,d.current),S.scene.background=x,S.gl.setRenderTarget(null),p.current.visible=!0,v++)}),He.createElement(He.Fragment,null,He.createElement("orthographicCamera",Gm({left:f.width/-2,right:f.width/2,top:f.height/2,bottom:f.height/-2,ref:d},r),!M&&n),He.createElement("group",{ref:p},M&&n(g.texture)))});function Ky(s,e){if(e===kx)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),s;if(e===$h||e===ig){let t=s.getIndex();if(t===null){const l=[],c=s.getAttribute("position");if(c!==void 0){for(let u=0;u<c.count;u++)l.push(u);s.setIndex(l),t=s.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),s}const n=t.count-2,i=[];if(e===$h)for(let l=1;l<=n;l++)i.push(t.getX(0)),i.push(t.getX(l)),i.push(t.getX(l+1));else for(let l=0;l<n;l++)l%2===0?(i.push(t.getX(l)),i.push(t.getX(l+1)),i.push(t.getX(l+2))):(i.push(t.getX(l+2)),i.push(t.getX(l+1)),i.push(t.getX(l)));i.length/3!==n&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const r=s.clone();return r.setIndex(i),r.clearGroups(),r}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),s}class hN extends oi{constructor(e){super(e),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(t){return new gN(t)}),this.register(function(t){return new vN(t)}),this.register(function(t){return new AN(t)}),this.register(function(t){return new RN(t)}),this.register(function(t){return new wN(t)}),this.register(function(t){return new yN(t)}),this.register(function(t){return new xN(t)}),this.register(function(t){return new SN(t)}),this.register(function(t){return new MN(t)}),this.register(function(t){return new mN(t)}),this.register(function(t){return new EN(t)}),this.register(function(t){return new _N(t)}),this.register(function(t){return new TN(t)}),this.register(function(t){return new bN(t)}),this.register(function(t){return new dN(t)}),this.register(function(t){return new CN(t)}),this.register(function(t){return new DN(t)})}load(e,t,n,i){const r=this;let l;if(this.resourcePath!=="")l=this.resourcePath;else if(this.path!==""){const f=wr.extractUrlBase(e);l=wr.resolveURL(f,this.path)}else l=wr.extractUrlBase(e);this.manager.itemStart(e);const c=function(f){i?i(f):console.error(f),r.manager.itemError(e),r.manager.itemEnd(e)},u=new ds(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(this.withCredentials),u.load(e,function(f){try{r.parse(f,l,function(d){t(d),r.manager.itemEnd(e)},c)}catch(d){c(d)}},n,c)}setDRACOLoader(e){return this.dracoLoader=e,this}setKTX2Loader(e){return this.ktx2Loader=e,this}setMeshoptDecoder(e){return this.meshoptDecoder=e,this}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,n,i){let r;const l={},c={},u=new TextDecoder;if(typeof e=="string")r=JSON.parse(e);else if(e instanceof ArrayBuffer)if(u.decode(new Uint8Array(e,0,4))===wM){try{l[Tt.KHR_BINARY_GLTF]=new NN(e)}catch(p){i&&i(p);return}r=JSON.parse(l[Tt.KHR_BINARY_GLTF].content)}else r=JSON.parse(u.decode(e));else r=e;if(r.asset===void 0||r.asset.version[0]<2){i&&i(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}const f=new XN(r,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});f.fileLoader.setRequestHeader(this.requestHeader);for(let d=0;d<this.pluginCallbacks.length;d++){const p=this.pluginCallbacks[d](f);p.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),c[p.name]=p,l[p.name]=!0}if(r.extensionsUsed)for(let d=0;d<r.extensionsUsed.length;++d){const p=r.extensionsUsed[d],g=r.extensionsRequired||[];switch(p){case Tt.KHR_MATERIALS_UNLIT:l[p]=new pN;break;case Tt.KHR_DRACO_MESH_COMPRESSION:l[p]=new LN(r,this.dracoLoader);break;case Tt.KHR_TEXTURE_TRANSFORM:l[p]=new UN;break;case Tt.KHR_MESH_QUANTIZATION:l[p]=new PN;break;default:g.indexOf(p)>=0&&c[p]===void 0&&console.warn('THREE.GLTFLoader: Unknown extension "'+p+'".')}}f.setExtensions(l),f.setPlugins(c),f.parse(n,i)}parseAsync(e,t){const n=this;return new Promise(function(i,r){n.parse(e,t,i,r)})}}function fN(){let s={};return{get:function(e){return s[e]},add:function(e,t){s[e]=t},remove:function(e){delete s[e]},removeAll:function(){s={}}}}const Tt={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class dN{constructor(e){this.parser=e,this.name=Tt.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const e=this.parser,t=this.parser.json.nodes||[];for(let n=0,i=t.length;n<i;n++){const r=t[n];r.extensions&&r.extensions[this.name]&&r.extensions[this.name].light!==void 0&&e._addNodeRef(this.cache,r.extensions[this.name].light)}}_loadLight(e){const t=this.parser,n="light:"+e;let i=t.cache.get(n);if(i)return i;const r=t.json,u=((r.extensions&&r.extensions[this.name]||{}).lights||[])[e];let f;const d=new Re(16777215);u.color!==void 0&&d.setRGB(u.color[0],u.color[1],u.color[2],bn);const p=u.range!==void 0?u.range:0;switch(u.type){case"directional":f=new Dg(d),f.target.position.set(0,0,-1),f.add(f.target);break;case"point":f=new Cg(d),f.distance=p;break;case"spot":f=new wg(d),f.distance=p,u.spot=u.spot||{},u.spot.innerConeAngle=u.spot.innerConeAngle!==void 0?u.spot.innerConeAngle:0,u.spot.outerConeAngle=u.spot.outerConeAngle!==void 0?u.spot.outerConeAngle:Math.PI/4,f.angle=u.spot.outerConeAngle,f.penumbra=1-u.spot.innerConeAngle/u.spot.outerConeAngle,f.target.position.set(0,0,-1),f.add(f.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+u.type)}return f.position.set(0,0,0),qs(f,u),u.intensity!==void 0&&(f.intensity=u.intensity),f.name=t.createUniqueName(u.name||"light_"+e),i=Promise.resolve(f),t.cache.add(n,i),i}getDependency(e,t){if(e==="light")return this._loadLight(t)}createNodeAttachment(e){const t=this,n=this.parser,r=n.json.nodes[e],c=(r.extensions&&r.extensions[this.name]||{}).light;return c===void 0?null:this._loadLight(c).then(function(u){return n._getNodeRef(t.cache,c,u)})}}class pN{constructor(){this.name=Tt.KHR_MATERIALS_UNLIT}getMaterialType(){return Ni}extendParams(e,t,n){const i=[];e.color=new Re(1,1,1),e.opacity=1;const r=t.pbrMetallicRoughness;if(r){if(Array.isArray(r.baseColorFactor)){const l=r.baseColorFactor;e.color.setRGB(l[0],l[1],l[2],bn),e.opacity=l[3]}r.baseColorTexture!==void 0&&i.push(n.assignTexture(e,"map",r.baseColorTexture,kt))}return Promise.all(i)}}class mN{constructor(e){this.parser=e,this.name=Tt.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=i.extensions[this.name].emissiveStrength;return r!==void 0&&(t.emissiveIntensity=r),Promise.resolve()}}class gN{constructor(e){this.parser=e,this.name=Tt.KHR_MATERIALS_CLEARCOAT}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],l=i.extensions[this.name];if(l.clearcoatFactor!==void 0&&(t.clearcoat=l.clearcoatFactor),l.clearcoatTexture!==void 0&&r.push(n.assignTexture(t,"clearcoatMap",l.clearcoatTexture)),l.clearcoatRoughnessFactor!==void 0&&(t.clearcoatRoughness=l.clearcoatRoughnessFactor),l.clearcoatRoughnessTexture!==void 0&&r.push(n.assignTexture(t,"clearcoatRoughnessMap",l.clearcoatRoughnessTexture)),l.clearcoatNormalTexture!==void 0&&(r.push(n.assignTexture(t,"clearcoatNormalMap",l.clearcoatNormalTexture)),l.clearcoatNormalTexture.scale!==void 0)){const c=l.clearcoatNormalTexture.scale;t.clearcoatNormalScale=new oe(c,c)}return Promise.all(r)}}class vN{constructor(e){this.parser=e,this.name=Tt.KHR_MATERIALS_DISPERSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Zi}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=i.extensions[this.name];return t.dispersion=r.dispersion!==void 0?r.dispersion:0,Promise.resolve()}}class _N{constructor(e){this.parser=e,this.name=Tt.KHR_MATERIALS_IRIDESCENCE}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],l=i.extensions[this.name];return l.iridescenceFactor!==void 0&&(t.iridescence=l.iridescenceFactor),l.iridescenceTexture!==void 0&&r.push(n.assignTexture(t,"iridescenceMap",l.iridescenceTexture)),l.iridescenceIor!==void 0&&(t.iridescenceIOR=l.iridescenceIor),t.iridescenceThicknessRange===void 0&&(t.iridescenceThicknessRange=[100,400]),l.iridescenceThicknessMinimum!==void 0&&(t.iridescenceThicknessRange[0]=l.iridescenceThicknessMinimum),l.iridescenceThicknessMaximum!==void 0&&(t.iridescenceThicknessRange[1]=l.iridescenceThicknessMaximum),l.iridescenceThicknessTexture!==void 0&&r.push(n.assignTexture(t,"iridescenceThicknessMap",l.iridescenceThicknessTexture)),Promise.all(r)}}class yN{constructor(e){this.parser=e,this.name=Tt.KHR_MATERIALS_SHEEN}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[];t.sheenColor=new Re(0,0,0),t.sheenRoughness=0,t.sheen=1;const l=i.extensions[this.name];if(l.sheenColorFactor!==void 0){const c=l.sheenColorFactor;t.sheenColor.setRGB(c[0],c[1],c[2],bn)}return l.sheenRoughnessFactor!==void 0&&(t.sheenRoughness=l.sheenRoughnessFactor),l.sheenColorTexture!==void 0&&r.push(n.assignTexture(t,"sheenColorMap",l.sheenColorTexture,kt)),l.sheenRoughnessTexture!==void 0&&r.push(n.assignTexture(t,"sheenRoughnessMap",l.sheenRoughnessTexture)),Promise.all(r)}}class xN{constructor(e){this.parser=e,this.name=Tt.KHR_MATERIALS_TRANSMISSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],l=i.extensions[this.name];return l.transmissionFactor!==void 0&&(t.transmission=l.transmissionFactor),l.transmissionTexture!==void 0&&r.push(n.assignTexture(t,"transmissionMap",l.transmissionTexture)),Promise.all(r)}}class SN{constructor(e){this.parser=e,this.name=Tt.KHR_MATERIALS_VOLUME}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],l=i.extensions[this.name];t.thickness=l.thicknessFactor!==void 0?l.thicknessFactor:0,l.thicknessTexture!==void 0&&r.push(n.assignTexture(t,"thicknessMap",l.thicknessTexture)),t.attenuationDistance=l.attenuationDistance||1/0;const c=l.attenuationColor||[1,1,1];return t.attenuationColor=new Re().setRGB(c[0],c[1],c[2],bn),Promise.all(r)}}class MN{constructor(e){this.parser=e,this.name=Tt.KHR_MATERIALS_IOR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Zi}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=i.extensions[this.name];return t.ior=r.ior!==void 0?r.ior:1.5,Promise.resolve()}}class EN{constructor(e){this.parser=e,this.name=Tt.KHR_MATERIALS_SPECULAR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],l=i.extensions[this.name];t.specularIntensity=l.specularFactor!==void 0?l.specularFactor:1,l.specularTexture!==void 0&&r.push(n.assignTexture(t,"specularIntensityMap",l.specularTexture));const c=l.specularColorFactor||[1,1,1];return t.specularColor=new Re().setRGB(c[0],c[1],c[2],bn),l.specularColorTexture!==void 0&&r.push(n.assignTexture(t,"specularColorMap",l.specularColorTexture,kt)),Promise.all(r)}}class bN{constructor(e){this.parser=e,this.name=Tt.EXT_MATERIALS_BUMP}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],l=i.extensions[this.name];return t.bumpScale=l.bumpFactor!==void 0?l.bumpFactor:1,l.bumpTexture!==void 0&&r.push(n.assignTexture(t,"bumpMap",l.bumpTexture)),Promise.all(r)}}class TN{constructor(e){this.parser=e,this.name=Tt.KHR_MATERIALS_ANISOTROPY}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],l=i.extensions[this.name];return l.anisotropyStrength!==void 0&&(t.anisotropy=l.anisotropyStrength),l.anisotropyRotation!==void 0&&(t.anisotropyRotation=l.anisotropyRotation),l.anisotropyTexture!==void 0&&r.push(n.assignTexture(t,"anisotropyMap",l.anisotropyTexture)),Promise.all(r)}}class AN{constructor(e){this.parser=e,this.name=Tt.KHR_TEXTURE_BASISU}loadTexture(e){const t=this.parser,n=t.json,i=n.textures[e];if(!i.extensions||!i.extensions[this.name])return null;const r=i.extensions[this.name],l=t.options.ktx2Loader;if(!l){if(n.extensionsRequired&&n.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return t.loadTextureImage(e,r.source,l)}}class RN{constructor(e){this.parser=e,this.name=Tt.EXT_TEXTURE_WEBP}loadTexture(e){const t=this.name,n=this.parser,i=n.json,r=i.textures[e];if(!r.extensions||!r.extensions[t])return null;const l=r.extensions[t],c=i.images[l.source];let u=n.textureLoader;if(c.uri){const f=n.options.manager.getHandler(c.uri);f!==null&&(u=f)}return n.loadTextureImage(e,l.source,u)}}class wN{constructor(e){this.parser=e,this.name=Tt.EXT_TEXTURE_AVIF}loadTexture(e){const t=this.name,n=this.parser,i=n.json,r=i.textures[e];if(!r.extensions||!r.extensions[t])return null;const l=r.extensions[t],c=i.images[l.source];let u=n.textureLoader;if(c.uri){const f=n.options.manager.getHandler(c.uri);f!==null&&(u=f)}return n.loadTextureImage(e,l.source,u)}}class CN{constructor(e){this.name=Tt.EXT_MESHOPT_COMPRESSION,this.parser=e}loadBufferView(e){const t=this.parser.json,n=t.bufferViews[e];if(n.extensions&&n.extensions[this.name]){const i=n.extensions[this.name],r=this.parser.getDependency("buffer",i.buffer),l=this.parser.options.meshoptDecoder;if(!l||!l.supported){if(t.extensionsRequired&&t.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return r.then(function(c){const u=i.byteOffset||0,f=i.byteLength||0,d=i.count,p=i.byteStride,g=new Uint8Array(c,u,f);return l.decodeGltfBufferAsync?l.decodeGltfBufferAsync(d,p,g,i.mode,i.filter).then(function(v){return v.buffer}):l.ready.then(function(){const v=new ArrayBuffer(d*p);return l.decodeGltfBuffer(new Uint8Array(v),d,p,g,i.mode,i.filter),v})})}else return null}}class DN{constructor(e){this.name=Tt.EXT_MESH_GPU_INSTANCING,this.parser=e}createNodeMesh(e){const t=this.parser.json,n=t.nodes[e];if(!n.extensions||!n.extensions[this.name]||n.mesh===void 0)return null;const i=t.meshes[n.mesh];for(const f of i.primitives)if(f.mode!==Ki.TRIANGLES&&f.mode!==Ki.TRIANGLE_STRIP&&f.mode!==Ki.TRIANGLE_FAN&&f.mode!==void 0)return null;const l=n.extensions[this.name].attributes,c=[],u={};for(const f in l)c.push(this.parser.getDependency("accessor",l[f]).then(d=>(u[f]=d,u[f])));return c.length<1?null:(c.push(this.parser.createNodeMesh(e)),Promise.all(c).then(f=>{const d=f.pop(),p=d.isGroup?d.children:[d],g=f[0].count,v=[];for(const x of p){const M=new it,S=new B,_=new Zn,b=new B(1,1,1),T=new hg(x.geometry,x.material,g);for(let A=0;A<g;A++)u.TRANSLATION&&S.fromBufferAttribute(u.TRANSLATION,A),u.ROTATION&&_.fromBufferAttribute(u.ROTATION,A),u.SCALE&&b.fromBufferAttribute(u.SCALE,A),T.setMatrixAt(A,M.compose(S,_,b));for(const A in u)if(A==="_COLOR_0"){const U=u[A];T.instanceColor=new Ua(U.array,U.itemSize,U.normalized)}else A!=="TRANSLATION"&&A!=="ROTATION"&&A!=="SCALE"&&x.geometry.setAttribute(A,u[A]);wt.prototype.copy.call(T,x),this.parser.assignFinalMaterial(T),v.push(T)}return d.isGroup?(d.clear(),d.add(...v),d):v[0]}))}}const wM="glTF",Zl=12,jy={JSON:1313821514,BIN:5130562};class NN{constructor(e){this.name=Tt.KHR_BINARY_GLTF,this.content=null,this.body=null;const t=new DataView(e,0,Zl),n=new TextDecoder;if(this.header={magic:n.decode(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==wM)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const i=this.header.length-Zl,r=new DataView(e,Zl);let l=0;for(;l<i;){const c=r.getUint32(l,!0);l+=4;const u=r.getUint32(l,!0);if(l+=4,u===jy.JSON){const f=new Uint8Array(e,Zl+l,c);this.content=n.decode(f)}else if(u===jy.BIN){const f=Zl+l;this.body=e.slice(f,f+c)}l+=c}if(this.content===null)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class LN{constructor(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=Tt.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}decodePrimitive(e,t){const n=this.json,i=this.dracoLoader,r=e.extensions[this.name].bufferView,l=e.extensions[this.name].attributes,c={},u={},f={};for(const d in l){const p=km[d]||d.toLowerCase();c[p]=l[d]}for(const d in e.attributes){const p=km[d]||d.toLowerCase();if(l[d]!==void 0){const g=n.accessors[e.attributes[d]],v=Xo[g.componentType];f[p]=v.name,u[p]=g.normalized===!0}}return t.getDependency("bufferView",r).then(function(d){return new Promise(function(p,g){i.decodeDracoFile(d,function(v){for(const x in v.attributes){const M=v.attributes[x],S=u[x];S!==void 0&&(M.normalized=S)}p(v)},c,f,bn,g)})})}}class UN{constructor(){this.name=Tt.KHR_TEXTURE_TRANSFORM}extendTexture(e,t){return(t.texCoord===void 0||t.texCoord===e.channel)&&t.offset===void 0&&t.rotation===void 0&&t.scale===void 0||(e=e.clone(),t.texCoord!==void 0&&(e.channel=t.texCoord),t.offset!==void 0&&e.offset.fromArray(t.offset),t.rotation!==void 0&&(e.rotation=t.rotation),t.scale!==void 0&&e.repeat.fromArray(t.scale),e.needsUpdate=!0),e}}class PN{constructor(){this.name=Tt.KHR_MESH_QUANTIZATION}}class CM extends al{constructor(e,t,n,i){super(e,t,n,i)}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i*3+i;for(let l=0;l!==i;l++)t[l]=n[r+l];return t}interpolate_(e,t,n,i){const r=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=c*2,f=c*3,d=i-t,p=(n-t)/d,g=p*p,v=g*p,x=e*f,M=x-f,S=-2*v+3*g,_=v-g,b=1-S,T=_-g+p;for(let A=0;A!==c;A++){const U=l[M+A+c],D=l[M+A+u]*d,P=l[x+A+c],I=l[x+A]*d;r[A]=b*U+T*D+S*P+_*I}return r}}const IN=new Zn;class ON extends CM{interpolate_(e,t,n,i){const r=super.interpolate_(e,t,n,i);return IN.fromArray(r).normalize().toArray(r),r}}const Ki={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},Xo={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},Zy={9728:an,9729:jt,9984:hf,9985:Vo,9986:xa,9987:Di},Jy={33071:Ci,33648:Wo,10497:Dr},gm={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},km={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},Mr={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},BN={CUBICSPLINE:void 0,LINEAR:jo,STEP:Ko},vm={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};function zN(s){return s.DefaultMaterial===void 0&&(s.DefaultMaterial=new Ic({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:fs})),s.DefaultMaterial}function ga(s,e,t){for(const n in t.extensions)s[n]===void 0&&(e.userData.gltfExtensions=e.userData.gltfExtensions||{},e.userData.gltfExtensions[n]=t.extensions[n])}function qs(s,e){e.extras!==void 0&&(typeof e.extras=="object"?Object.assign(s.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function FN(s,e,t){let n=!1,i=!1,r=!1;for(let f=0,d=e.length;f<d;f++){const p=e[f];if(p.POSITION!==void 0&&(n=!0),p.NORMAL!==void 0&&(i=!0),p.COLOR_0!==void 0&&(r=!0),n&&i&&r)break}if(!n&&!i&&!r)return Promise.resolve(s);const l=[],c=[],u=[];for(let f=0,d=e.length;f<d;f++){const p=e[f];if(n){const g=p.POSITION!==void 0?t.getDependency("accessor",p.POSITION):s.attributes.position;l.push(g)}if(i){const g=p.NORMAL!==void 0?t.getDependency("accessor",p.NORMAL):s.attributes.normal;c.push(g)}if(r){const g=p.COLOR_0!==void 0?t.getDependency("accessor",p.COLOR_0):s.attributes.color;u.push(g)}}return Promise.all([Promise.all(l),Promise.all(c),Promise.all(u)]).then(function(f){const d=f[0],p=f[1],g=f[2];return n&&(s.morphAttributes.position=d),i&&(s.morphAttributes.normal=p),r&&(s.morphAttributes.color=g),s.morphTargetsRelative=!0,s})}function HN(s,e){if(s.updateMorphTargets(),e.weights!==void 0)for(let t=0,n=e.weights.length;t<n;t++)s.morphTargetInfluences[t]=e.weights[t];if(e.extras&&Array.isArray(e.extras.targetNames)){const t=e.extras.targetNames;if(s.morphTargetInfluences.length===t.length){s.morphTargetDictionary={};for(let n=0,i=t.length;n<i;n++)s.morphTargetDictionary[t[n]]=n}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function VN(s){let e;const t=s.extensions&&s.extensions[Tt.KHR_DRACO_MESH_COMPRESSION];if(t?e="draco:"+t.bufferView+":"+t.indices+":"+_m(t.attributes):e=s.indices+":"+_m(s.attributes)+":"+s.mode,s.targets!==void 0)for(let n=0,i=s.targets.length;n<i;n++)e+=":"+_m(s.targets[n]);return e}function _m(s){let e="";const t=Object.keys(s).sort();for(let n=0,i=t.length;n<i;n++)e+=t[n]+":"+s[t[n]]+";";return e}function Xm(s){switch(s){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}function GN(s){return s.search(/\.jpe?g($|\?)/i)>0||s.search(/^data\:image\/jpeg/)===0?"image/jpeg":s.search(/\.webp($|\?)/i)>0||s.search(/^data\:image\/webp/)===0?"image/webp":s.search(/\.ktx2($|\?)/i)>0||s.search(/^data\:image\/ktx2/)===0?"image/ktx2":"image/png"}const kN=new it;class XN{constructor(e={},t={}){this.json=e,this.extensions={},this.plugins={},this.options=t,this.cache=new fN,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let n=!1,i=-1,r=!1,l=-1;if(typeof navigator<"u"){const c=navigator.userAgent;n=/^((?!chrome|android).)*safari/i.test(c)===!0;const u=c.match(/Version\/(\d+)/);i=n&&u?parseInt(u[1],10):-1,r=c.indexOf("Firefox")>-1,l=r?c.match(/Firefox\/([0-9]+)\./)[1]:-1}typeof createImageBitmap>"u"||n&&i<17||r&&l<98?this.textureLoader=new BS(this.options.manager):this.textureLoader=new WS(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new ds(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),this.options.crossOrigin==="use-credentials"&&this.fileLoader.setWithCredentials(!0)}setExtensions(e){this.extensions=e}setPlugins(e){this.plugins=e}parse(e,t){const n=this,i=this.json,r=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(l){return l._markDefs&&l._markDefs()}),Promise.all(this._invokeAll(function(l){return l.beforeRoot&&l.beforeRoot()})).then(function(){return Promise.all([n.getDependencies("scene"),n.getDependencies("animation"),n.getDependencies("camera")])}).then(function(l){const c={scene:l[0][i.scene||0],scenes:l[0],animations:l[1],cameras:l[2],asset:i.asset,parser:n,userData:{}};return ga(r,c,i),qs(c,i),Promise.all(n._invokeAll(function(u){return u.afterRoot&&u.afterRoot(c)})).then(function(){for(const u of c.scenes)u.updateMatrixWorld();e(c)})}).catch(t)}_markDefs(){const e=this.json.nodes||[],t=this.json.skins||[],n=this.json.meshes||[];for(let i=0,r=t.length;i<r;i++){const l=t[i].joints;for(let c=0,u=l.length;c<u;c++)e[l[c]].isBone=!0}for(let i=0,r=e.length;i<r;i++){const l=e[i];l.mesh!==void 0&&(this._addNodeRef(this.meshCache,l.mesh),l.skin!==void 0&&(n[l.mesh].isSkinnedMesh=!0)),l.camera!==void 0&&this._addNodeRef(this.cameraCache,l.camera)}}_addNodeRef(e,t){t!==void 0&&(e.refs[t]===void 0&&(e.refs[t]=e.uses[t]=0),e.refs[t]++)}_getNodeRef(e,t,n){if(e.refs[t]<=1)return n;const i=n.clone(),r=(l,c)=>{const u=this.associations.get(l);u!=null&&this.associations.set(c,u);for(const[f,d]of l.children.entries())r(d,c.children[f])};return r(n,i),i.name+="_instance_"+e.uses[t]++,i}_invokeOne(e){const t=Object.values(this.plugins);t.push(this);for(let n=0;n<t.length;n++){const i=e(t[n]);if(i)return i}return null}_invokeAll(e){const t=Object.values(this.plugins);t.unshift(this);const n=[];for(let i=0;i<t.length;i++){const r=e(t[i]);r&&n.push(r)}return n}getDependency(e,t){const n=e+":"+t;let i=this.cache.get(n);if(!i){switch(e){case"scene":i=this.loadScene(t);break;case"node":i=this._invokeOne(function(r){return r.loadNode&&r.loadNode(t)});break;case"mesh":i=this._invokeOne(function(r){return r.loadMesh&&r.loadMesh(t)});break;case"accessor":i=this.loadAccessor(t);break;case"bufferView":i=this._invokeOne(function(r){return r.loadBufferView&&r.loadBufferView(t)});break;case"buffer":i=this.loadBuffer(t);break;case"material":i=this._invokeOne(function(r){return r.loadMaterial&&r.loadMaterial(t)});break;case"texture":i=this._invokeOne(function(r){return r.loadTexture&&r.loadTexture(t)});break;case"skin":i=this.loadSkin(t);break;case"animation":i=this._invokeOne(function(r){return r.loadAnimation&&r.loadAnimation(t)});break;case"camera":i=this.loadCamera(t);break;default:if(i=this._invokeOne(function(r){return r!=this&&r.getDependency&&r.getDependency(e,t)}),!i)throw new Error("Unknown type: "+e);break}this.cache.add(n,i)}return i}getDependencies(e){let t=this.cache.get(e);if(!t){const n=this,i=this.json[e+(e==="mesh"?"es":"s")]||[];t=Promise.all(i.map(function(r,l){return n.getDependency(e,l)})),this.cache.add(e,t)}return t}loadBuffer(e){const t=this.json.buffers[e],n=this.fileLoader;if(t.type&&t.type!=="arraybuffer")throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(t.uri===void 0&&e===0)return Promise.resolve(this.extensions[Tt.KHR_BINARY_GLTF].body);const i=this.options;return new Promise(function(r,l){n.load(wr.resolveURL(t.uri,i.path),r,void 0,function(){l(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})}loadBufferView(e){const t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(n){const i=t.byteLength||0,r=t.byteOffset||0;return n.slice(r,r+i)})}loadAccessor(e){const t=this,n=this.json,i=this.json.accessors[e];if(i.bufferView===void 0&&i.sparse===void 0){const l=gm[i.type],c=Xo[i.componentType],u=i.normalized===!0,f=new c(i.count*l);return Promise.resolve(new Ut(f,l,u))}const r=[];return i.bufferView!==void 0?r.push(this.getDependency("bufferView",i.bufferView)):r.push(null),i.sparse!==void 0&&(r.push(this.getDependency("bufferView",i.sparse.indices.bufferView)),r.push(this.getDependency("bufferView",i.sparse.values.bufferView))),Promise.all(r).then(function(l){const c=l[0],u=gm[i.type],f=Xo[i.componentType],d=f.BYTES_PER_ELEMENT,p=d*u,g=i.byteOffset||0,v=i.bufferView!==void 0?n.bufferViews[i.bufferView].byteStride:void 0,x=i.normalized===!0;let M,S;if(v&&v!==p){const _=Math.floor(g/v),b="InterleavedBuffer:"+i.bufferView+":"+i.componentType+":"+_+":"+i.count;let T=t.cache.get(b);T||(M=new f(c,_*v,i.count*v/d),T=new wc(M,v/d),t.cache.add(b,T)),S=new Nr(T,u,g%v/d,x)}else c===null?M=new f(i.count*u):M=new f(c,g,i.count*u),S=new Ut(M,u,x);if(i.sparse!==void 0){const _=gm.SCALAR,b=Xo[i.sparse.indices.componentType],T=i.sparse.indices.byteOffset||0,A=i.sparse.values.byteOffset||0,U=new b(l[1],T,i.sparse.count*_),D=new f(l[2],A,i.sparse.count*u);c!==null&&(S=new Ut(S.array.slice(),S.itemSize,S.normalized)),S.normalized=!1;for(let P=0,I=U.length;P<I;P++){const w=U[P];if(S.setX(w,D[P*u]),u>=2&&S.setY(w,D[P*u+1]),u>=3&&S.setZ(w,D[P*u+2]),u>=4&&S.setW(w,D[P*u+3]),u>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}S.normalized=x}return S})}loadTexture(e){const t=this.json,n=this.options,r=t.textures[e].source,l=t.images[r];let c=this.textureLoader;if(l.uri){const u=n.manager.getHandler(l.uri);u!==null&&(c=u)}return this.loadTextureImage(e,r,c)}loadTextureImage(e,t,n){const i=this,r=this.json,l=r.textures[e],c=r.images[t],u=(c.uri||c.bufferView)+":"+l.sampler;if(this.textureCache[u])return this.textureCache[u];const f=this.loadImageSource(t,n).then(function(d){d.flipY=!1,d.name=l.name||c.name||"",d.name===""&&typeof c.uri=="string"&&c.uri.startsWith("data:image/")===!1&&(d.name=c.uri);const g=(r.samplers||{})[l.sampler]||{};return d.magFilter=Zy[g.magFilter]||jt,d.minFilter=Zy[g.minFilter]||Di,d.wrapS=Jy[g.wrapS]||Dr,d.wrapT=Jy[g.wrapT]||Dr,d.generateMipmaps=!d.isCompressedTexture&&d.minFilter!==an&&d.minFilter!==jt,i.associations.set(d,{textures:e}),d}).catch(function(){return null});return this.textureCache[u]=f,f}loadImageSource(e,t){const n=this,i=this.json,r=this.options;if(this.sourceCache[e]!==void 0)return this.sourceCache[e].then(p=>p.clone());const l=i.images[e],c=self.URL||self.webkitURL;let u=l.uri||"",f=!1;if(l.bufferView!==void 0)u=n.getDependency("bufferView",l.bufferView).then(function(p){f=!0;const g=new Blob([p],{type:l.mimeType});return u=c.createObjectURL(g),u});else if(l.uri===void 0)throw new Error("THREE.GLTFLoader: Image "+e+" is missing URI and bufferView");const d=Promise.resolve(u).then(function(p){return new Promise(function(g,v){let x=g;t.isImageBitmapLoader===!0&&(x=function(M){const S=new nn(M);S.needsUpdate=!0,g(S)}),t.load(wr.resolveURL(p,r.path),x,void 0,v)})}).then(function(p){return f===!0&&c.revokeObjectURL(u),qs(p,l),p.userData.mimeType=l.mimeType||GN(l.uri),p}).catch(function(p){throw console.error("THREE.GLTFLoader: Couldn't load texture",u),p});return this.sourceCache[e]=d,d}assignTexture(e,t,n,i){const r=this;return this.getDependency("texture",n.index).then(function(l){if(!l)return null;if(n.texCoord!==void 0&&n.texCoord>0&&(l=l.clone(),l.channel=n.texCoord),r.extensions[Tt.KHR_TEXTURE_TRANSFORM]){const c=n.extensions!==void 0?n.extensions[Tt.KHR_TEXTURE_TRANSFORM]:void 0;if(c){const u=r.associations.get(l);l=r.extensions[Tt.KHR_TEXTURE_TRANSFORM].extendTexture(l,c),r.associations.set(l,u)}}return i!==void 0&&(l.colorSpace=i),e[t]=l,l})}assignFinalMaterial(e){const t=e.geometry;let n=e.material;const i=t.attributes.tangent===void 0,r=t.attributes.color!==void 0,l=t.attributes.normal===void 0;if(e.isPoints){const c="PointsMaterial:"+n.uuid;let u=this.cache.get(c);u||(u=new Tf,gn.prototype.copy.call(u,n),u.color.copy(n.color),u.map=n.map,u.sizeAttenuation=!1,this.cache.add(c,u)),n=u}else if(e.isLine){const c="LineBasicMaterial:"+n.uuid;let u=this.cache.get(c);u||(u=new Jn,gn.prototype.copy.call(u,n),u.color.copy(n.color),u.map=n.map,this.cache.add(c,u)),n=u}if(i||r||l){let c="ClonedMaterial:"+n.uuid+":";i&&(c+="derivative-tangents:"),r&&(c+="vertex-colors:"),l&&(c+="flat-shading:");let u=this.cache.get(c);u||(u=n.clone(),r&&(u.vertexColors=!0),l&&(u.flatShading=!0),i&&(u.normalScale&&(u.normalScale.y*=-1),u.clearcoatNormalScale&&(u.clearcoatNormalScale.y*=-1)),this.cache.add(c,u),this.associations.set(u,this.associations.get(n))),n=u}e.material=n}getMaterialType(){return Ic}loadMaterial(e){const t=this,n=this.json,i=this.extensions,r=n.materials[e];let l;const c={},u=r.extensions||{},f=[];if(u[Tt.KHR_MATERIALS_UNLIT]){const p=i[Tt.KHR_MATERIALS_UNLIT];l=p.getMaterialType(),f.push(p.extendParams(c,r,t))}else{const p=r.pbrMetallicRoughness||{};if(c.color=new Re(1,1,1),c.opacity=1,Array.isArray(p.baseColorFactor)){const g=p.baseColorFactor;c.color.setRGB(g[0],g[1],g[2],bn),c.opacity=g[3]}p.baseColorTexture!==void 0&&f.push(t.assignTexture(c,"map",p.baseColorTexture,kt)),c.metalness=p.metallicFactor!==void 0?p.metallicFactor:1,c.roughness=p.roughnessFactor!==void 0?p.roughnessFactor:1,p.metallicRoughnessTexture!==void 0&&(f.push(t.assignTexture(c,"metalnessMap",p.metallicRoughnessTexture)),f.push(t.assignTexture(c,"roughnessMap",p.metallicRoughnessTexture))),l=this._invokeOne(function(g){return g.getMaterialType&&g.getMaterialType(e)}),f.push(Promise.all(this._invokeAll(function(g){return g.extendMaterialParams&&g.extendMaterialParams(e,c)})))}r.doubleSided===!0&&(c.side=ri);const d=r.alphaMode||vm.OPAQUE;if(d===vm.BLEND?(c.transparent=!0,c.depthWrite=!1):(c.transparent=!1,d===vm.MASK&&(c.alphaTest=r.alphaCutoff!==void 0?r.alphaCutoff:.5)),r.normalTexture!==void 0&&l!==Ni&&(f.push(t.assignTexture(c,"normalMap",r.normalTexture)),c.normalScale=new oe(1,1),r.normalTexture.scale!==void 0)){const p=r.normalTexture.scale;c.normalScale.set(p,p)}if(r.occlusionTexture!==void 0&&l!==Ni&&(f.push(t.assignTexture(c,"aoMap",r.occlusionTexture)),r.occlusionTexture.strength!==void 0&&(c.aoMapIntensity=r.occlusionTexture.strength)),r.emissiveFactor!==void 0&&l!==Ni){const p=r.emissiveFactor;c.emissive=new Re().setRGB(p[0],p[1],p[2],bn)}return r.emissiveTexture!==void 0&&l!==Ni&&f.push(t.assignTexture(c,"emissiveMap",r.emissiveTexture,kt)),Promise.all(f).then(function(){const p=new l(c);return r.name&&(p.name=r.name),qs(p,r),t.associations.set(p,{materials:e}),r.extensions&&ga(i,p,r),p})}createUniqueName(e){const t=Nt.sanitizeNodeName(e||"");return t in this.nodeNamesUsed?t+"_"+ ++this.nodeNamesUsed[t]:(this.nodeNamesUsed[t]=0,t)}loadGeometries(e){const t=this,n=this.extensions,i=this.primitiveCache;function r(c){return n[Tt.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(c,t).then(function(u){return Qy(u,c,t)})}const l=[];for(let c=0,u=e.length;c<u;c++){const f=e[c],d=VN(f),p=i[d];if(p)l.push(p.promise);else{let g;f.extensions&&f.extensions[Tt.KHR_DRACO_MESH_COMPRESSION]?g=r(f):g=Qy(new pt,f,t),i[d]={primitive:f,promise:g},l.push(g)}}return Promise.all(l)}loadMesh(e){const t=this,n=this.json,i=this.extensions,r=n.meshes[e],l=r.primitives,c=[];for(let u=0,f=l.length;u<f;u++){const d=l[u].material===void 0?zN(this.cache):this.getDependency("material",l[u].material);c.push(d)}return c.push(t.loadGeometries(l)),Promise.all(c).then(function(u){const f=u.slice(0,u.length-1),d=u[u.length-1],p=[];for(let v=0,x=d.length;v<x;v++){const M=d[v],S=l[v];let _;const b=f[v];if(S.mode===Ki.TRIANGLES||S.mode===Ki.TRIANGLE_STRIP||S.mode===Ki.TRIANGLE_FAN||S.mode===void 0)_=r.isSkinnedMesh===!0?new ug(M,b):new pn(M,b),_.isSkinnedMesh===!0&&_.normalizeSkinWeights(),S.mode===Ki.TRIANGLE_STRIP?_.geometry=Ky(_.geometry,ig):S.mode===Ki.TRIANGLE_FAN&&(_.geometry=Ky(_.geometry,$h));else if(S.mode===Ki.LINES)_=new ps(M,b);else if(S.mode===Ki.LINE_STRIP)_=new Qs(M,b);else if(S.mode===Ki.LINE_LOOP)_=new fg(M,b);else if(S.mode===Ki.POINTS)_=new dg(M,b);else throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+S.mode);Object.keys(_.geometry.morphAttributes).length>0&&HN(_,r),_.name=t.createUniqueName(r.name||"mesh_"+e),qs(_,r),S.extensions&&ga(i,_,S),t.assignFinalMaterial(_),p.push(_)}for(let v=0,x=p.length;v<x;v++)t.associations.set(p[v],{meshes:e,primitives:v});if(p.length===1)return r.extensions&&ga(i,p[0],r),p[0];const g=new Ks;r.extensions&&ga(i,g,r),t.associations.set(g,{meshes:e});for(let v=0,x=p.length;v<x;v++)g.add(p[v]);return g})}loadCamera(e){let t;const n=this.json.cameras[e],i=n[n.type];if(!i){console.warn("THREE.GLTFLoader: Missing camera parameters.");return}return n.type==="perspective"?t=new xn($x.radToDeg(i.yfov),i.aspectRatio||1,i.znear||1,i.zfar||2e6):n.type==="orthographic"&&(t=new ol(-i.xmag,i.xmag,i.ymag,-i.ymag,i.znear,i.zfar)),n.name&&(t.name=this.createUniqueName(n.name)),qs(t,n),Promise.resolve(t)}loadSkin(e){const t=this.json.skins[e],n=[];for(let i=0,r=t.joints.length;i<r;i++)n.push(this._loadNodeShallow(t.joints[i]));return t.inverseBindMatrices!==void 0?n.push(this.getDependency("accessor",t.inverseBindMatrices)):n.push(null),Promise.all(n).then(function(i){const r=i.pop(),l=i,c=[],u=[];for(let f=0,d=l.length;f<d;f++){const p=l[f];if(p){c.push(p);const g=new it;r!==null&&g.fromArray(r.array,f*16),u.push(g)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[f])}return new Cc(c,u)})}loadAnimation(e){const t=this.json,n=this,i=t.animations[e],r=i.name?i.name:"animation_"+e,l=[],c=[],u=[],f=[],d=[];for(let p=0,g=i.channels.length;p<g;p++){const v=i.channels[p],x=i.samplers[v.sampler],M=v.target,S=M.node,_=i.parameters!==void 0?i.parameters[x.input]:x.input,b=i.parameters!==void 0?i.parameters[x.output]:x.output;M.node!==void 0&&(l.push(this.getDependency("node",S)),c.push(this.getDependency("accessor",_)),u.push(this.getDependency("accessor",b)),f.push(x),d.push(M))}return Promise.all([Promise.all(l),Promise.all(c),Promise.all(u),Promise.all(f),Promise.all(d)]).then(function(p){const g=p[0],v=p[1],x=p[2],M=p[3],S=p[4],_=[];for(let b=0,T=g.length;b<T;b++){const A=g[b],U=v[b],D=x[b],P=M[b],I=S[b];if(A===void 0)continue;A.updateMatrix&&A.updateMatrix();const w=n._createAnimationTracks(A,U,D,P,I);if(w)for(let R=0;R<w.length;R++)_.push(w[R])}return new el(r,void 0,_)})}createNodeMesh(e){const t=this.json,n=this,i=t.nodes[e];return i.mesh===void 0?null:n.getDependency("mesh",i.mesh).then(function(r){const l=n._getNodeRef(n.meshCache,i.mesh,r);return i.weights!==void 0&&l.traverse(function(c){if(c.isMesh)for(let u=0,f=i.weights.length;u<f;u++)c.morphTargetInfluences[u]=i.weights[u]}),l})}loadNode(e){const t=this.json,n=this,i=t.nodes[e],r=n._loadNodeShallow(e),l=[],c=i.children||[];for(let f=0,d=c.length;f<d;f++)l.push(n.getDependency("node",c[f]));const u=i.skin===void 0?Promise.resolve(null):n.getDependency("skin",i.skin);return Promise.all([r,Promise.all(l),u]).then(function(f){const d=f[0],p=f[1],g=f[2];g!==null&&d.traverse(function(v){v.isSkinnedMesh&&v.bind(g,kN)});for(let v=0,x=p.length;v<x;v++)d.add(p[v]);return d})}_loadNodeShallow(e){const t=this.json,n=this.extensions,i=this;if(this.nodeCache[e]!==void 0)return this.nodeCache[e];const r=t.nodes[e],l=r.name?i.createUniqueName(r.name):"",c=[],u=i._invokeOne(function(f){return f.createNodeMesh&&f.createNodeMesh(e)});return u&&c.push(u),r.camera!==void 0&&c.push(i.getDependency("camera",r.camera).then(function(f){return i._getNodeRef(i.cameraCache,r.camera,f)})),i._invokeAll(function(f){return f.createNodeAttachment&&f.createNodeAttachment(e)}).forEach(function(f){c.push(f)}),this.nodeCache[e]=Promise.all(c).then(function(f){let d;if(r.isBone===!0?d=new Ef:f.length>1?d=new Ks:f.length===1?d=f[0]:d=new wt,d!==f[0])for(let p=0,g=f.length;p<g;p++)d.add(f[p]);if(r.name&&(d.userData.name=r.name,d.name=l),qs(d,r),r.extensions&&ga(n,d,r),r.matrix!==void 0){const p=new it;p.fromArray(r.matrix),d.applyMatrix4(p)}else r.translation!==void 0&&d.position.fromArray(r.translation),r.rotation!==void 0&&d.quaternion.fromArray(r.rotation),r.scale!==void 0&&d.scale.fromArray(r.scale);if(!i.associations.has(d))i.associations.set(d,{});else if(r.mesh!==void 0&&i.meshCache.refs[r.mesh]>1){const p=i.associations.get(d);i.associations.set(d,{...p})}return i.associations.get(d).nodes=e,d}),this.nodeCache[e]}loadScene(e){const t=this.extensions,n=this.json.scenes[e],i=this,r=new Ks;n.name&&(r.name=i.createUniqueName(n.name)),qs(r,n),n.extensions&&ga(t,r,n);const l=n.nodes||[],c=[];for(let u=0,f=l.length;u<f;u++)c.push(i.getDependency("node",l[u]));return Promise.all(c).then(function(u){for(let d=0,p=u.length;d<p;d++)r.add(u[d]);const f=d=>{const p=new Map;for(const[g,v]of i.associations)(g instanceof gn||g instanceof nn)&&p.set(g,v);return d.traverse(g=>{const v=i.associations.get(g);v!=null&&p.set(g,v)}),p};return i.associations=f(r),r})}_createAnimationTracks(e,t,n,i,r){const l=[],c=e.name?e.name:e.uuid,u=[];Mr[r.path]===Mr.weights?e.traverse(function(g){g.morphTargetInfluences&&u.push(g.name?g.name:g.uuid)}):u.push(c);let f;switch(Mr[r.path]){case Mr.weights:f=Ia;break;case Mr.rotation:f=Oa;break;case Mr.translation:case Mr.scale:f=Ba;break;default:switch(n.itemSize){case 1:f=Ia;break;case 2:case 3:default:f=Ba;break}break}const d=i.interpolation!==void 0?BN[i.interpolation]:jo,p=this._getArrayFromAccessor(n);for(let g=0,v=u.length;g<v;g++){const x=new f(u[g]+"."+Mr[r.path],t.array,p,d);i.interpolation==="CUBICSPLINE"&&this._createCubicSplineTrackInterpolant(x),l.push(x)}return l}_getArrayFromAccessor(e){let t=e.array;if(e.normalized){const n=Xm(t.constructor),i=new Float32Array(t.length);for(let r=0,l=t.length;r<l;r++)i[r]=t[r]*n;t=i}return t}_createCubicSplineTrackInterpolant(e){e.createInterpolant=function(n){const i=this instanceof Oa?ON:CM;return new i(this.times,this.values,this.getValueSize()/3,n)},e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function WN(s,e,t){const n=e.attributes,i=new On;if(n.POSITION!==void 0){const c=t.json.accessors[n.POSITION],u=c.min,f=c.max;if(u!==void 0&&f!==void 0){if(i.set(new B(u[0],u[1],u[2]),new B(f[0],f[1],f[2])),c.normalized){const d=Xm(Xo[c.componentType]);i.min.multiplyScalar(d),i.max.multiplyScalar(d)}}else{console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");return}}else return;const r=e.targets;if(r!==void 0){const c=new B,u=new B;for(let f=0,d=r.length;f<d;f++){const p=r[f];if(p.POSITION!==void 0){const g=t.json.accessors[p.POSITION],v=g.min,x=g.max;if(v!==void 0&&x!==void 0){if(u.setX(Math.max(Math.abs(v[0]),Math.abs(x[0]))),u.setY(Math.max(Math.abs(v[1]),Math.abs(x[1]))),u.setZ(Math.max(Math.abs(v[2]),Math.abs(x[2]))),g.normalized){const M=Xm(Xo[g.componentType]);u.multiplyScalar(M)}c.max(u)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}i.expandByVector(c)}s.boundingBox=i;const l=new Nn;i.getCenter(l.center),l.radius=i.min.distanceTo(i.max)/2,s.boundingSphere=l}function Qy(s,e,t){const n=e.attributes,i=[];function r(l,c){return t.getDependency("accessor",l).then(function(u){s.setAttribute(c,u)})}for(const l in n){const c=km[l]||l.toLowerCase();c in s.attributes||i.push(r(n[l],c))}if(e.indices!==void 0&&!s.index){const l=t.getDependency("accessor",e.indices).then(function(c){s.setIndex(c)});i.push(l)}return bt.workingColorSpace!==bn&&"COLOR_0"in n&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${bt.workingColorSpace}" not supported.`),qs(s,e),WN(s,e,t),Promise.all(i).then(function(){return e.targets!==void 0?FN(s,e.targets,t):s})}/**
 * postprocessing v6.37.6 build Fri Jul 04 2025
 * https://github.com/pmndrs/postprocessing
 * Copyright 2015-2025 Raoul van Rüschen
 * @license Zlib
 */var ym=1/1e3,qN=1e3,YN=class{constructor(){this.startTime=performance.now(),this.previousTime=0,this.currentTime=0,this._delta=0,this._elapsed=0,this._fixedDelta=1e3/60,this.timescale=1,this.useFixedDelta=!1,this._autoReset=!1}get autoReset(){return this._autoReset}set autoReset(s){typeof document<"u"&&document.hidden!==void 0&&(s?document.addEventListener("visibilitychange",this):document.removeEventListener("visibilitychange",this),this._autoReset=s)}get delta(){return this._delta*ym}get fixedDelta(){return this._fixedDelta*ym}set fixedDelta(s){this._fixedDelta=s*qN}get elapsed(){return this._elapsed*ym}update(s){this.useFixedDelta?this._delta=this.fixedDelta:(this.previousTime=this.currentTime,this.currentTime=(s!==void 0?s:performance.now())-this.startTime,this._delta=this.currentTime-this.previousTime),this._delta*=this.timescale,this._elapsed+=this._delta}reset(){this._delta=0,this._elapsed=0,this.currentTime=performance.now()-this.startTime}getDelta(){return this.delta}getElapsed(){return this.elapsed}handleEvent(s){document.hidden||(this.currentTime=performance.now()-this.startTime)}dispose(){this.autoReset=!1}},KN=(()=>{const s=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),e=new Float32Array([0,0,2,0,0,2]),t=new pt;return t.setAttribute("position",new Ut(s,3)),t.setAttribute("uv",new Ut(e,2)),t})(),Ii=class Wm{static get fullscreenGeometry(){return KN}constructor(e="Pass",t=new _c,n=new Ac){this.name=e,this.renderer=null,this.scene=t,this.camera=n,this.screen=null,this.rtt=!0,this.needsSwap=!0,this.needsDepthTexture=!1,this.enabled=!0}get renderToScreen(){return!this.rtt}set renderToScreen(e){if(this.rtt===e){const t=this.fullscreenMaterial;t!==null&&(t.needsUpdate=!0),this.rtt=!e}}set mainScene(e){}set mainCamera(e){}setRenderer(e){this.renderer=e}isEnabled(){return this.enabled}setEnabled(e){this.enabled=e}get fullscreenMaterial(){return this.screen!==null?this.screen.material:null}set fullscreenMaterial(e){let t=this.screen;t!==null?t.material=e:(t=new pn(Wm.fullscreenGeometry,e),t.frustumCulled=!1,this.scene===null&&(this.scene=new _c),this.scene.add(t),this.screen=t)}getFullscreenMaterial(){return this.fullscreenMaterial}setFullscreenMaterial(e){this.fullscreenMaterial=e}getDepthTexture(){return null}setDepthTexture(e,t=Ur){}render(e,t,n,i,r){throw new Error("Render method not implemented!")}setSize(e,t){}initialize(e,t,n){}dispose(){for(const e of Object.keys(this)){const t=this[e];(t instanceof Sn||t instanceof gn||t instanceof nn||t instanceof Wm)&&this[e].dispose()}this.fullscreenMaterial!==null&&this.fullscreenMaterial.dispose()}},jN=class extends Ii{constructor(){super("ClearMaskPass",null,null),this.needsSwap=!1}render(s,e,t,n,i){const r=s.state.buffers.stencil;r.setLocked(!1),r.setTest(!1)}},ZN=`#include <common>
#include <dithering_pars_fragment>
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
uniform float opacity;varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=opacity*texel;
#include <colorspace_fragment>
#include <dithering_fragment>
}`,Gg="varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}",JN=class extends zn{constructor(){super({name:"CopyMaterial",uniforms:{inputBuffer:new Vt(null),opacity:new Vt(1)},blending:mi,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:ZN,vertexShader:Gg})}set inputBuffer(s){this.uniforms.inputBuffer.value=s}setInputBuffer(s){this.uniforms.inputBuffer.value=s}getOpacity(s){return this.uniforms.opacity.value}setOpacity(s){this.uniforms.opacity.value=s}},DM=class extends Ii{constructor(s,e=!0){super("CopyPass"),this.fullscreenMaterial=new JN,this.needsSwap=!1,this.renderTarget=s,s===void 0&&(this.renderTarget=new Sn(1,1,{minFilter:jt,magFilter:jt,stencilBuffer:!1,depthBuffer:!1}),this.renderTarget.texture.name="CopyPass.Target"),this.autoResize=e}get resize(){return this.autoResize}set resize(s){this.autoResize=s}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}setAutoResizeEnabled(s){this.autoResize=s}render(s,e,t,n,i){this.fullscreenMaterial.inputBuffer=e.texture,s.setRenderTarget(this.renderToScreen?null:this.renderTarget),s.render(this.scene,this.camera)}setSize(s,e){this.autoResize&&this.renderTarget.setSize(s,e)}initialize(s,e,t){t!==void 0&&(this.renderTarget.texture.type=t,t!==Bn?this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1":s!==null&&s.outputColorSpace===kt&&(this.renderTarget.texture.colorSpace=kt))}},$y=new Re,NM=class extends Ii{constructor(s=!0,e=!0,t=!1){super("ClearPass",null,null),this.needsSwap=!1,this.color=s,this.depth=e,this.stencil=t,this.overrideClearColor=null,this.overrideClearAlpha=-1}setClearFlags(s,e,t){this.color=s,this.depth=e,this.stencil=t}getOverrideClearColor(){return this.overrideClearColor}setOverrideClearColor(s){this.overrideClearColor=s}getOverrideClearAlpha(){return this.overrideClearAlpha}setOverrideClearAlpha(s){this.overrideClearAlpha=s}render(s,e,t,n,i){const r=this.overrideClearColor,l=this.overrideClearAlpha,c=s.getClearAlpha(),u=r!==null,f=l>=0;u?(s.getClearColor($y),s.setClearColor(r,f?l:c)):f&&s.setClearAlpha(l),s.setRenderTarget(this.renderToScreen?null:e),s.clear(this.color,this.depth,this.stencil),u?s.setClearColor($y,c):f&&s.setClearAlpha(c)}},QN=class extends Ii{constructor(s,e){super("MaskPass",s,e),this.needsSwap=!1,this.clearPass=new NM(!1,!1,!0),this.inverse=!1}set mainScene(s){this.scene=s}set mainCamera(s){this.camera=s}get inverted(){return this.inverse}set inverted(s){this.inverse=s}get clear(){return this.clearPass.enabled}set clear(s){this.clearPass.enabled=s}getClearPass(){return this.clearPass}isInverted(){return this.inverted}setInverted(s){this.inverted=s}render(s,e,t,n,i){const r=s.getContext(),l=s.state.buffers,c=this.scene,u=this.camera,f=this.clearPass,d=this.inverted?0:1,p=1-d;l.color.setMask(!1),l.depth.setMask(!1),l.color.setLocked(!0),l.depth.setLocked(!0),l.stencil.setTest(!0),l.stencil.setOp(r.REPLACE,r.REPLACE,r.REPLACE),l.stencil.setFunc(r.ALWAYS,d,4294967295),l.stencil.setClear(p),l.stencil.setLocked(!0),this.clearPass.enabled&&(this.renderToScreen?f.render(s,null):(f.render(s,e),f.render(s,t))),this.renderToScreen?(s.setRenderTarget(null),s.render(c,u)):(s.setRenderTarget(e),s.render(c,u),s.setRenderTarget(t),s.render(c,u)),l.color.setLocked(!1),l.depth.setLocked(!1),l.stencil.setLocked(!1),l.stencil.setFunc(r.EQUAL,1,4294967295),l.stencil.setOp(r.KEEP,r.KEEP,r.KEEP),l.stencil.setLocked(!0)}},$N=class{constructor(s=null,{depthBuffer:e=!0,stencilBuffer:t=!1,multisampling:n=0,frameBufferType:i}={}){this.renderer=null,this.inputBuffer=this.createBuffer(e,t,i,n),this.outputBuffer=this.inputBuffer.clone(),this.copyPass=new DM,this.depthTexture=null,this.passes=[],this.timer=new YN,this.autoRenderToScreen=!0,this.setRenderer(s)}get multisampling(){return this.inputBuffer.samples||0}set multisampling(s){const e=this.inputBuffer,t=this.multisampling;t>0&&s>0?(this.inputBuffer.samples=s,this.outputBuffer.samples=s,this.inputBuffer.dispose(),this.outputBuffer.dispose()):t!==s&&(this.inputBuffer.dispose(),this.outputBuffer.dispose(),this.inputBuffer=this.createBuffer(e.depthBuffer,e.stencilBuffer,e.texture.type,s),this.inputBuffer.depthTexture=this.depthTexture,this.outputBuffer=this.inputBuffer.clone())}getTimer(){return this.timer}getRenderer(){return this.renderer}setRenderer(s){if(this.renderer=s,s!==null){const e=s.getSize(new oe),t=s.getContext().getContextAttributes().alpha,n=this.inputBuffer.texture.type;n===Bn&&s.outputColorSpace===kt&&(this.inputBuffer.texture.colorSpace=kt,this.outputBuffer.texture.colorSpace=kt,this.inputBuffer.dispose(),this.outputBuffer.dispose()),s.autoClear=!1,this.setSize(e.width,e.height);for(const i of this.passes)i.initialize(s,t,n)}}replaceRenderer(s,e=!0){const t=this.renderer,n=t.domElement.parentNode;return this.setRenderer(s),e&&n!==null&&(n.removeChild(t.domElement),n.appendChild(s.domElement)),t}createDepthTexture(){const s=this.depthTexture=new Dc;return this.inputBuffer.depthTexture=s,this.inputBuffer.dispose(),this.inputBuffer.stencilBuffer?(s.format=La,s.type=Na):s.type=Rs,s}deleteDepthTexture(){if(this.depthTexture!==null){this.depthTexture.dispose(),this.depthTexture=null,this.inputBuffer.depthTexture=null,this.inputBuffer.dispose();for(const s of this.passes)s.setDepthTexture(null)}}createBuffer(s,e,t,n){const i=this.renderer,r=i===null?new oe:i.getDrawingBufferSize(new oe),l={minFilter:jt,magFilter:jt,stencilBuffer:e,depthBuffer:s,type:t},c=new Sn(r.width,r.height,l);return n>0&&(c.ignoreDepthForMultisampleCopy=!1,c.samples=n),t===Bn&&i!==null&&i.outputColorSpace===kt&&(c.texture.colorSpace=kt),c.texture.name="EffectComposer.Buffer",c.texture.generateMipmaps=!1,c}setMainScene(s){for(const e of this.passes)e.mainScene=s}setMainCamera(s){for(const e of this.passes)e.mainCamera=s}addPass(s,e){const t=this.passes,n=this.renderer,i=n.getDrawingBufferSize(new oe),r=n.getContext().getContextAttributes().alpha,l=this.inputBuffer.texture.type;if(s.setRenderer(n),s.setSize(i.width,i.height),s.initialize(n,r,l),this.autoRenderToScreen&&(t.length>0&&(t[t.length-1].renderToScreen=!1),s.renderToScreen&&(this.autoRenderToScreen=!1)),e!==void 0?t.splice(e,0,s):t.push(s),this.autoRenderToScreen&&(t[t.length-1].renderToScreen=!0),s.needsDepthTexture||this.depthTexture!==null)if(this.depthTexture===null){const c=this.createDepthTexture();for(s of t)s.setDepthTexture(c)}else s.setDepthTexture(this.depthTexture)}removePass(s){const e=this.passes,t=e.indexOf(s);if(t!==-1&&e.splice(t,1).length>0){if(this.depthTexture!==null){const r=(c,u)=>c||u.needsDepthTexture;e.reduce(r,!1)||(s.getDepthTexture()===this.depthTexture&&s.setDepthTexture(null),this.deleteDepthTexture())}this.autoRenderToScreen&&t===e.length&&(s.renderToScreen=!1,e.length>0&&(e[e.length-1].renderToScreen=!0))}}removeAllPasses(){const s=this.passes;this.deleteDepthTexture(),s.length>0&&(this.autoRenderToScreen&&(s[s.length-1].renderToScreen=!1),this.passes=[])}render(s){const e=this.renderer,t=this.copyPass;let n=this.inputBuffer,i=this.outputBuffer,r=!1,l,c,u;s===void 0&&(this.timer.update(),s=this.timer.getDelta());for(const f of this.passes)f.enabled&&(f.render(e,n,i,s,r),f.needsSwap&&(r&&(t.renderToScreen=f.renderToScreen,l=e.getContext(),c=e.state.buffers.stencil,c.setFunc(l.NOTEQUAL,1,4294967295),t.render(e,n,i,s,r),c.setFunc(l.EQUAL,1,4294967295)),u=n,n=i,i=u),f instanceof QN?r=!0:f instanceof jN&&(r=!1))}setSize(s,e,t){const n=this.renderer,i=n.getSize(new oe);(s===void 0||e===void 0)&&(s=i.width,e=i.height),(i.width!==s||i.height!==e)&&n.setSize(s,e,t);const r=n.getDrawingBufferSize(new oe);this.inputBuffer.setSize(r.width,r.height),this.outputBuffer.setSize(r.width,r.height);for(const l of this.passes)l.setSize(r.width,r.height)}reset(){this.dispose(),this.autoRenderToScreen=!0}dispose(){for(const s of this.passes)s.dispose();this.passes=[],this.inputBuffer!==null&&this.inputBuffer.dispose(),this.outputBuffer!==null&&this.outputBuffer.dispose(),this.deleteDepthTexture(),this.copyPass.dispose(),this.timer.dispose(),Ii.fullscreenGeometry.dispose()}},Ca={NONE:0,DEPTH:1,CONVOLUTION:2},Bt={FRAGMENT_HEAD:"FRAGMENT_HEAD",FRAGMENT_MAIN_UV:"FRAGMENT_MAIN_UV",FRAGMENT_MAIN_IMAGE:"FRAGMENT_MAIN_IMAGE",VERTEX_HEAD:"VERTEX_HEAD",VERTEX_MAIN_SUPPORT:"VERTEX_MAIN_SUPPORT"},eL=class{constructor(){this.shaderParts=new Map([[Bt.FRAGMENT_HEAD,null],[Bt.FRAGMENT_MAIN_UV,null],[Bt.FRAGMENT_MAIN_IMAGE,null],[Bt.VERTEX_HEAD,null],[Bt.VERTEX_MAIN_SUPPORT,null]]),this.defines=new Map,this.uniforms=new Map,this.blendModes=new Map,this.extensions=new Set,this.attributes=Ca.NONE,this.varyings=new Set,this.uvTransformation=!1,this.readDepth=!1,this.colorSpace=bn}},xm=!1,ex=class{constructor(s=null){this.originalMaterials=new Map,this.material=null,this.materials=null,this.materialsBackSide=null,this.materialsDoubleSide=null,this.materialsFlatShaded=null,this.materialsFlatShadedBackSide=null,this.materialsFlatShadedDoubleSide=null,this.setMaterial(s),this.meshCount=0,this.replaceMaterial=e=>{if(e.isMesh){let t;if(e.material.flatShading)switch(e.material.side){case ri:t=this.materialsFlatShadedDoubleSide;break;case En:t=this.materialsFlatShadedBackSide;break;default:t=this.materialsFlatShaded;break}else switch(e.material.side){case ri:t=this.materialsDoubleSide;break;case En:t=this.materialsBackSide;break;default:t=this.materials;break}this.originalMaterials.set(e,e.material),e.isSkinnedMesh?e.material=t[2]:e.isInstancedMesh?e.material=t[1]:e.material=t[0],++this.meshCount}}}cloneMaterial(s){if(!(s instanceof zn))return s.clone();const e=s.uniforms,t=new Map;for(const i in e){const r=e[i].value;r.isRenderTargetTexture&&(e[i].value=null,t.set(i,r))}const n=s.clone();for(const i of t)e[i[0]].value=i[1],n.uniforms[i[0]].value=i[1];return n}setMaterial(s){if(this.disposeMaterials(),this.material=s,s!==null){const e=this.materials=[this.cloneMaterial(s),this.cloneMaterial(s),this.cloneMaterial(s)];for(const t of e)t.uniforms=Object.assign({},s.uniforms),t.side=fs;e[2].skinning=!0,this.materialsBackSide=e.map(t=>{const n=this.cloneMaterial(t);return n.uniforms=Object.assign({},s.uniforms),n.side=En,n}),this.materialsDoubleSide=e.map(t=>{const n=this.cloneMaterial(t);return n.uniforms=Object.assign({},s.uniforms),n.side=ri,n}),this.materialsFlatShaded=e.map(t=>{const n=this.cloneMaterial(t);return n.uniforms=Object.assign({},s.uniforms),n.flatShading=!0,n}),this.materialsFlatShadedBackSide=e.map(t=>{const n=this.cloneMaterial(t);return n.uniforms=Object.assign({},s.uniforms),n.flatShading=!0,n.side=En,n}),this.materialsFlatShadedDoubleSide=e.map(t=>{const n=this.cloneMaterial(t);return n.uniforms=Object.assign({},s.uniforms),n.flatShading=!0,n.side=ri,n})}}render(s,e,t){const n=s.shadowMap.enabled;if(s.shadowMap.enabled=!1,xm){const i=this.originalMaterials;this.meshCount=0,e.traverse(this.replaceMaterial),s.render(e,t);for(const r of i)r[0].material=r[1];this.meshCount!==i.size&&i.clear()}else{const i=e.overrideMaterial;e.overrideMaterial=this.material,s.render(e,t),e.overrideMaterial=i}s.shadowMap.enabled=n}disposeMaterials(){if(this.material!==null){const s=this.materials.concat(this.materialsBackSide).concat(this.materialsDoubleSide).concat(this.materialsFlatShaded).concat(this.materialsFlatShadedBackSide).concat(this.materialsFlatShadedDoubleSide);for(const e of s)e.dispose()}}dispose(){this.originalMaterials.clear(),this.disposeMaterials()}static get workaroundEnabled(){return xm}static set workaroundEnabled(s){xm=s}},Er=-1,Zs=class extends Pi{constructor(s,e=Er,t=Er,n=1){super(),this.resizable=s,this.baseSize=new oe(1,1),this.preferredSize=new oe(e,t),this.target=this.preferredSize,this.s=n,this.effectiveSize=new oe,this.addEventListener("change",()=>this.updateEffectiveSize()),this.updateEffectiveSize()}updateEffectiveSize(){const s=this.baseSize,e=this.preferredSize,t=this.effectiveSize,n=this.scale;e.width!==Er?t.width=e.width:e.height!==Er?t.width=Math.round(e.height*(s.width/Math.max(s.height,1))):t.width=Math.round(s.width*n),e.height!==Er?t.height=e.height:e.width!==Er?t.height=Math.round(e.width/Math.max(s.width/Math.max(s.height,1),1)):t.height=Math.round(s.height*n)}get width(){return this.effectiveSize.width}set width(s){this.preferredWidth=s}get height(){return this.effectiveSize.height}set height(s){this.preferredHeight=s}getWidth(){return this.width}getHeight(){return this.height}get scale(){return this.s}set scale(s){this.s!==s&&(this.s=s,this.preferredSize.setScalar(Er),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getScale(){return this.scale}setScale(s){this.scale=s}get baseWidth(){return this.baseSize.width}set baseWidth(s){this.baseSize.width!==s&&(this.baseSize.width=s,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseWidth(){return this.baseWidth}setBaseWidth(s){this.baseWidth=s}get baseHeight(){return this.baseSize.height}set baseHeight(s){this.baseSize.height!==s&&(this.baseSize.height=s,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseHeight(){return this.baseHeight}setBaseHeight(s){this.baseHeight=s}setBaseSize(s,e){(this.baseSize.width!==s||this.baseSize.height!==e)&&(this.baseSize.set(s,e),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}get preferredWidth(){return this.preferredSize.width}set preferredWidth(s){this.preferredSize.width!==s&&(this.preferredSize.width=s,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredWidth(){return this.preferredWidth}setPreferredWidth(s){this.preferredWidth=s}get preferredHeight(){return this.preferredSize.height}set preferredHeight(s){this.preferredSize.height!==s&&(this.preferredSize.height=s,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredHeight(){return this.preferredHeight}setPreferredHeight(s){this.preferredHeight=s}setPreferredSize(s,e){(this.preferredSize.width!==s||this.preferredSize.height!==e)&&(this.preferredSize.set(s,e),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}copy(s){this.s=s.scale,this.baseSize.set(s.baseWidth,s.baseHeight),this.preferredSize.set(s.preferredWidth,s.preferredHeight),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height)}static get AUTO_SIZE(){return Er}},At={ADD:0,ALPHA:1,AVERAGE:2,COLOR:3,COLOR_BURN:4,COLOR_DODGE:5,DARKEN:6,DIFFERENCE:7,DIVIDE:8,DST:9,EXCLUSION:10,HARD_LIGHT:11,HARD_MIX:12,HUE:13,INVERT:14,INVERT_RGB:15,LIGHTEN:16,LINEAR_BURN:17,LINEAR_DODGE:18,LINEAR_LIGHT:19,LUMINOSITY:20,MULTIPLY:21,NEGATION:22,NORMAL:23,OVERLAY:24,PIN_LIGHT:25,REFLECT:26,SATURATION:27,SCREEN:28,SOFT_LIGHT:29,SRC:30,SUBTRACT:31,VIVID_LIGHT:32},tL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(x.rgb+y.rgb,y.a),opacity);}",nL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,y.a*opacity);}",iL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4((x.rgb+y.rgb)*0.5,y.a),opacity);}",sL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.xy,xHSL.z));return mix(x,vec4(z,y.a),opacity);}",rL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 a=x.rgb,b=y.rgb;vec3 z=mix(step(0.0,b)*(1.0-min(vec3(1.0),(1.0-a)/b)),vec3(1.0),step(1.0,a));return mix(x,vec4(z,y.a),opacity);}",aL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 a=x.rgb,b=y.rgb;vec3 z=step(0.0,a)*mix(min(vec3(1.0),a/max(1.0-b,1e-9)),vec3(1.0),step(1.0,b));return mix(x,vec4(z,y.a),opacity);}",oL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(min(x.rgb,y.rgb),y.a),opacity);}",lL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(abs(x.rgb-y.rgb),y.a),opacity);}",cL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(x.rgb/max(y.rgb,1e-12),y.a),opacity);}",uL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4((x.rgb+y.rgb-2.0*x.rgb*y.rgb),y.a),opacity);}",hL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 a=min(x.rgb,1.0);vec3 b=min(y.rgb,1.0);vec3 z=mix(2.0*a*b,1.0-2.0*(1.0-a)*(1.0-b),step(0.5,b));return mix(x,vec4(z,y.a),opacity);}",fL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(step(1.0,x.rgb+y.rgb),y.a),opacity);}",dL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.x,xHSL.yz));return mix(x,vec4(z,y.a),opacity);}",pL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(1.0-y.rgb,y.a),opacity);}",mL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(y.rgb*(1.0-x.rgb),y.a),opacity);}",gL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(max(x.rgb,y.rgb),y.a),opacity);}",vL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(clamp(y.rgb+x.rgb-1.0,0.0,1.0),y.a),opacity);}",_L="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(min(x.rgb+y.rgb,1.0),y.a),opacity);}",yL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(clamp(2.0*y.rgb+x.rgb-1.0,0.0,1.0),y.a),opacity);}",xL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.xy,yHSL.z));return mix(x,vec4(z,y.a),opacity);}",SL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(x.rgb*y.rgb,y.a),opacity);}",ML="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(1.0-abs(1.0-x.rgb-y.rgb),y.a),opacity);}",EL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,opacity);}",bL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 z=mix(2.0*y.rgb*x.rgb,1.0-2.0*(1.0-y.rgb)*(1.0-x.rgb),step(0.5,x.rgb));return mix(x,vec4(z,y.a),opacity);}",TL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 y2=2.0*y.rgb;vec3 z=mix(mix(y2,x.rgb,step(0.5*x.rgb,y.rgb)),max(y2-1.0,vec3(0.0)),step(x.rgb,y2-1.0));return mix(x,vec4(z,y.a),opacity);}",AL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 z=mix(min(x.rgb*x.rgb/max(1.0-y.rgb,1e-12),1.0),y.rgb,step(1.0,y.rgb));return mix(x,vec4(z,y.a),opacity);}",RL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.x,yHSL.y,xHSL.z));return mix(x,vec4(z,y.a),opacity);}",wL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(x.rgb+y.rgb-min(x.rgb*y.rgb,1.0),y.a),opacity);}",CL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 a=x.rgb;vec3 b=y.rgb;vec3 y2=2.0*b;vec3 w=step(0.5,b);vec3 c=a-(1.0-y2)*a*(1.0-a);vec3 d=mix(a+(y2-1.0)*(sqrt(a)-a),a+(y2-1.0)*a*((16.0*a-12.0)*a+3.0),w*(1.0-step(0.25,a)));vec3 z=mix(c,d,w);return mix(x,vec4(z,y.a),opacity);}",DL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y;}",NL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(max(x.rgb+y.rgb-1.0,0.0),y.a),opacity);}",LL="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 z=mix(max(1.0-min((1.0-x.rgb)/(2.0*y.rgb),1.0),0.0),min(x.rgb/(2.0*(1.0-y.rgb)),1.0),step(0.5,y.rgb));return mix(x,vec4(z,y.a),opacity);}",UL=new Map([[At.ADD,tL],[At.ALPHA,nL],[At.AVERAGE,iL],[At.COLOR,sL],[At.COLOR_BURN,rL],[At.COLOR_DODGE,aL],[At.DARKEN,oL],[At.DIFFERENCE,lL],[At.DIVIDE,cL],[At.DST,null],[At.EXCLUSION,uL],[At.HARD_LIGHT,hL],[At.HARD_MIX,fL],[At.HUE,dL],[At.INVERT,pL],[At.INVERT_RGB,mL],[At.LIGHTEN,gL],[At.LINEAR_BURN,vL],[At.LINEAR_DODGE,_L],[At.LINEAR_LIGHT,yL],[At.LUMINOSITY,xL],[At.MULTIPLY,SL],[At.NEGATION,ML],[At.NORMAL,EL],[At.OVERLAY,bL],[At.PIN_LIGHT,TL],[At.REFLECT,AL],[At.SATURATION,RL],[At.SCREEN,wL],[At.SOFT_LIGHT,CL],[At.SRC,DL],[At.SUBTRACT,NL],[At.VIVID_LIGHT,LL]]),PL=class extends Pi{constructor(s,e=1){super(),this._blendFunction=s,this.opacity=new Vt(e)}getOpacity(){return this.opacity.value}setOpacity(s){this.opacity.value=s}get blendFunction(){return this._blendFunction}set blendFunction(s){this._blendFunction=s,this.dispatchEvent({type:"change"})}getBlendFunction(){return this.blendFunction}setBlendFunction(s){this.blendFunction=s}getShaderCode(){return UL.get(this.blendFunction)}},qm=class extends Pi{constructor(s,e,{attributes:t=Ca.NONE,blendFunction:n=At.NORMAL,defines:i=new Map,uniforms:r=new Map,extensions:l=null,vertexShader:c=null}={}){super(),this.name=s,this.renderer=null,this.attributes=t,this.fragmentShader=e,this.vertexShader=c,this.defines=i,this.uniforms=r,this.extensions=l,this.blendMode=new PL(n),this.blendMode.addEventListener("change",u=>this.setChanged()),this._inputColorSpace=bn,this._outputColorSpace=cs}get inputColorSpace(){return this._inputColorSpace}set inputColorSpace(s){this._inputColorSpace=s,this.setChanged()}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(s){this._outputColorSpace=s,this.setChanged()}set mainScene(s){}set mainCamera(s){}getName(){return this.name}setRenderer(s){this.renderer=s}getDefines(){return this.defines}getUniforms(){return this.uniforms}getExtensions(){return this.extensions}getBlendMode(){return this.blendMode}getAttributes(){return this.attributes}setAttributes(s){this.attributes=s,this.setChanged()}getFragmentShader(){return this.fragmentShader}setFragmentShader(s){this.fragmentShader=s,this.setChanged()}getVertexShader(){return this.vertexShader}setVertexShader(s){this.vertexShader=s,this.setChanged()}setChanged(){this.dispatchEvent({type:"change"})}setDepthTexture(s,e=Ur){}update(s,e,t){}setSize(s,e){}initialize(s,e,t){}dispose(){for(const s of Object.keys(this)){const e=this[s];(e instanceof Sn||e instanceof gn||e instanceof nn||e instanceof Ii)&&this[s].dispose()}}},IL=`#include <common>
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#ifdef RANGE
uniform vec2 range;
#elif defined(THRESHOLD)
uniform float threshold;uniform float smoothing;
#endif
varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);float l=luminance(texel.rgb);
#ifdef RANGE
float low=step(range.x,l);float high=step(l,range.y);l*=low*high;
#elif defined(THRESHOLD)
l=smoothstep(threshold,threshold+smoothing,l)*l;
#endif
#ifdef COLOR
gl_FragColor=vec4(texel.rgb*clamp(l,0.0,1.0),l);
#else
gl_FragColor=vec4(l);
#endif
}`,OL=class extends zn{constructor(s=!1,e=null){super({name:"LuminanceMaterial",defines:{THREE_REVISION:Fa.replace(/\D+/g,"")},uniforms:{inputBuffer:new Vt(null),threshold:new Vt(0),smoothing:new Vt(1),range:new Vt(null)},blending:mi,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:IL,vertexShader:Gg}),this.colorOutput=s,this.luminanceRange=e}set inputBuffer(s){this.uniforms.inputBuffer.value=s}setInputBuffer(s){this.uniforms.inputBuffer.value=s}get threshold(){return this.uniforms.threshold.value}set threshold(s){this.smoothing>0||s>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.threshold.value=s}getThreshold(){return this.threshold}setThreshold(s){this.threshold=s}get smoothing(){return this.uniforms.smoothing.value}set smoothing(s){this.threshold>0||s>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.smoothing.value=s}getSmoothingFactor(){return this.smoothing}setSmoothingFactor(s){this.smoothing=s}get useThreshold(){return this.threshold>0||this.smoothing>0}set useThreshold(s){}get colorOutput(){return this.defines.COLOR!==void 0}set colorOutput(s){s?this.defines.COLOR="1":delete this.defines.COLOR,this.needsUpdate=!0}isColorOutputEnabled(s){return this.colorOutput}setColorOutputEnabled(s){this.colorOutput=s}get useRange(){return this.luminanceRange!==null}set useRange(s){this.luminanceRange=null}get luminanceRange(){return this.uniforms.range.value}set luminanceRange(s){s!==null?this.defines.RANGE="1":delete this.defines.RANGE,this.uniforms.range.value=s,this.needsUpdate=!0}getLuminanceRange(){return this.luminanceRange}setLuminanceRange(s){this.luminanceRange=s}},BL=class extends Ii{constructor({renderTarget:s,luminanceRange:e,colorOutput:t,resolutionScale:n=1,width:i=Zs.AUTO_SIZE,height:r=Zs.AUTO_SIZE,resolutionX:l=i,resolutionY:c=r}={}){super("LuminancePass"),this.fullscreenMaterial=new OL(t,e),this.needsSwap=!1,this.renderTarget=s,this.renderTarget===void 0&&(this.renderTarget=new Sn(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="LuminancePass.Target");const u=this.resolution=new Zs(this,l,c,n);u.addEventListener("change",f=>this.setSize(u.baseWidth,u.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}render(s,e,t,n,i){const r=this.fullscreenMaterial;r.inputBuffer=e.texture,s.setRenderTarget(this.renderToScreen?null:this.renderTarget),s.render(this.scene,this.camera)}setSize(s,e){const t=this.resolution;t.setBaseSize(s,e),this.renderTarget.setSize(t.width,t.height)}initialize(s,e,t){t!==void 0&&t!==Bn&&(this.renderTarget.texture.type=t,this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}},LM=class extends Ii{constructor(s,e,t=null){super("RenderPass",s,e),this.needsSwap=!1,this.clearPass=new NM,this.overrideMaterialManager=t===null?null:new ex(t),this.ignoreBackground=!1,this.skipShadowMapUpdate=!1,this.selection=null}set mainScene(s){this.scene=s}set mainCamera(s){this.camera=s}get renderToScreen(){return super.renderToScreen}set renderToScreen(s){super.renderToScreen=s,this.clearPass.renderToScreen=s}get overrideMaterial(){const s=this.overrideMaterialManager;return s!==null?s.material:null}set overrideMaterial(s){const e=this.overrideMaterialManager;s!==null?e!==null?e.setMaterial(s):this.overrideMaterialManager=new ex(s):e!==null&&(e.dispose(),this.overrideMaterialManager=null)}getOverrideMaterial(){return this.overrideMaterial}setOverrideMaterial(s){this.overrideMaterial=s}get clear(){return this.clearPass.enabled}set clear(s){this.clearPass.enabled=s}getSelection(){return this.selection}setSelection(s){this.selection=s}isBackgroundDisabled(){return this.ignoreBackground}setBackgroundDisabled(s){this.ignoreBackground=s}isShadowMapDisabled(){return this.skipShadowMapUpdate}setShadowMapDisabled(s){this.skipShadowMapUpdate=s}getClearPass(){return this.clearPass}render(s,e,t,n,i){const r=this.scene,l=this.camera,c=this.selection,u=l.layers.mask,f=r.background,d=s.shadowMap.autoUpdate,p=this.renderToScreen?null:e;c!==null&&l.layers.set(c.getLayer()),this.skipShadowMapUpdate&&(s.shadowMap.autoUpdate=!1),(this.ignoreBackground||this.clearPass.overrideClearColor!==null)&&(r.background=null),this.clearPass.enabled&&this.clearPass.render(s,e),s.setRenderTarget(p),this.overrideMaterialManager!==null?this.overrideMaterialManager.render(s,r,l):s.render(r,l),l.layers.mask=u,r.background=f,s.shadowMap.autoUpdate=d}},wi={LINEAR:0,REINHARD:1,REINHARD2:2,REINHARD2_ADAPTIVE:3,OPTIMIZED_CINEON:5,CINEON:5,ACES_FILMIC:6,AGX:7,NEUTRAL:8},zL=`#include <packing>
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
#ifdef DOWNSAMPLE_NORMALS
uniform lowp sampler2D normalBuffer;
#endif
varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}int findBestDepth(const in float samples[4]){float c=(samples[0]+samples[1]+samples[2]+samples[3])*0.25;float distances[4];distances[0]=abs(c-samples[0]);distances[1]=abs(c-samples[1]);distances[2]=abs(c-samples[2]);distances[3]=abs(c-samples[3]);float maxDistance=max(max(distances[0],distances[1]),max(distances[2],distances[3]));int remaining[3];int rejected[3];int i,j,k;for(i=0,j=0,k=0;i<4;++i){if(distances[i]<maxDistance){remaining[j++]=i;}else{rejected[k++]=i;}}for(;j<3;++j){remaining[j]=rejected[--k];}vec3 s=vec3(samples[remaining[0]],samples[remaining[1]],samples[remaining[2]]);c=(s.x+s.y+s.z)/3.0;distances[0]=abs(c-s.x);distances[1]=abs(c-s.y);distances[2]=abs(c-s.z);float minDistance=min(distances[0],min(distances[1],distances[2]));for(i=0;i<3;++i){if(distances[i]==minDistance){break;}}return remaining[i];}void main(){float d[4];d[0]=readDepth(vUv0);d[1]=readDepth(vUv1);d[2]=readDepth(vUv2);d[3]=readDepth(vUv3);int index=findBestDepth(d);
#ifdef DOWNSAMPLE_NORMALS
vec3 n[4];n[0]=texture2D(normalBuffer,vUv0).rgb;n[1]=texture2D(normalBuffer,vUv1).rgb;n[2]=texture2D(normalBuffer,vUv2).rgb;n[3]=texture2D(normalBuffer,vUv3).rgb;
#else
vec3 n[4];n[0]=vec3(0.0);n[1]=vec3(0.0);n[2]=vec3(0.0);n[3]=vec3(0.0);
#endif
gl_FragColor=vec4(n[index],d[index]);}`,FL="uniform vec2 texelSize;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vUv0=uv;vUv1=vec2(uv.x,uv.y+texelSize.y);vUv2=vec2(uv.x+texelSize.x,uv.y);vUv3=uv+texelSize;gl_Position=vec4(position.xy,1.0,1.0);}",HL=class extends zn{constructor(){super({name:"DepthDownsamplingMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new Vt(null),normalBuffer:new Vt(null),texelSize:new Vt(new oe)},blending:mi,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:zL,vertexShader:FL})}set depthBuffer(s){this.uniforms.depthBuffer.value=s}set depthPacking(s){this.defines.DEPTH_PACKING=s.toFixed(0),this.needsUpdate=!0}setDepthBuffer(s,e=Ur){this.depthBuffer=s,this.depthPacking=e}set normalBuffer(s){this.uniforms.normalBuffer.value=s,s!==null?this.defines.DOWNSAMPLE_NORMALS="1":delete this.defines.DOWNSAMPLE_NORMALS,this.needsUpdate=!0}setNormalBuffer(s){this.normalBuffer=s}setTexelSize(s,e){this.uniforms.texelSize.value.set(s,e)}setSize(s,e){this.uniforms.texelSize.value.set(1/s,1/e)}},VL=class extends Ii{constructor({normalBuffer:s=null,resolutionScale:e=.5,width:t=Zs.AUTO_SIZE,height:n=Zs.AUTO_SIZE,resolutionX:i=t,resolutionY:r=n}={}){super("DepthDownsamplingPass");const l=new HL;l.normalBuffer=s,this.fullscreenMaterial=l,this.needsDepthTexture=!0,this.needsSwap=!1,this.renderTarget=new Sn(1,1,{minFilter:an,magFilter:an,depthBuffer:!1,type:Kn}),this.renderTarget.texture.name="DepthDownsamplingPass.Target",this.renderTarget.texture.generateMipmaps=!1;const c=this.resolution=new Zs(this,i,r,e);c.addEventListener("change",u=>this.setSize(c.baseWidth,c.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}setDepthTexture(s,e=Ur){this.fullscreenMaterial.depthBuffer=s,this.fullscreenMaterial.depthPacking=e}render(s,e,t,n,i){s.setRenderTarget(this.renderToScreen?null:this.renderTarget),s.render(this.scene,this.camera)}setSize(s,e){const t=this.resolution;t.setBaseSize(s,e),this.renderTarget.setSize(t.width,t.height),this.fullscreenMaterial.setSize(s,e)}initialize(s,e,t){const n=s.getContext();if(!(n.getExtension("EXT_color_buffer_float")||n.getExtension("EXT_color_buffer_half_float")))throw new Error("Rendering to float texture is not supported.")}},GL=`#include <packing>
#define packFloatToRGBA(v) packDepthToRGBA(v)
#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)
uniform lowp sampler2D luminanceBuffer0;uniform lowp sampler2D luminanceBuffer1;uniform float minLuminance;uniform float deltaTime;uniform float tau;varying vec2 vUv;void main(){float l0=unpackRGBAToFloat(texture2D(luminanceBuffer0,vUv));
#if __VERSION__ < 300
float l1=texture2DLodEXT(luminanceBuffer1,vUv,MIP_LEVEL_1X1).r;
#else
float l1=textureLod(luminanceBuffer1,vUv,MIP_LEVEL_1X1).r;
#endif
l0=max(minLuminance,l0);l1=max(minLuminance,l1);float adaptedLum=l0+(l1-l0)*(1.0-exp(-deltaTime*tau));gl_FragColor=(adaptedLum==1.0)?vec4(1.0):packFloatToRGBA(adaptedLum);}`,kL=class extends zn{constructor(){super({name:"AdaptiveLuminanceMaterial",defines:{MIP_LEVEL_1X1:"0.0"},uniforms:{luminanceBuffer0:new Vt(null),luminanceBuffer1:new Vt(null),minLuminance:new Vt(.01),deltaTime:new Vt(0),tau:new Vt(1)},extensions:{shaderTextureLOD:!0},blending:mi,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:GL,vertexShader:Gg})}set luminanceBuffer0(s){this.uniforms.luminanceBuffer0.value=s}setLuminanceBuffer0(s){this.uniforms.luminanceBuffer0.value=s}set luminanceBuffer1(s){this.uniforms.luminanceBuffer1.value=s}setLuminanceBuffer1(s){this.uniforms.luminanceBuffer1.value=s}set mipLevel1x1(s){this.defines.MIP_LEVEL_1X1=s.toFixed(1),this.needsUpdate=!0}setMipLevel1x1(s){this.mipLevel1x1=s}set deltaTime(s){this.uniforms.deltaTime.value=s}setDeltaTime(s){this.uniforms.deltaTime.value=s}get minLuminance(){return this.uniforms.minLuminance.value}set minLuminance(s){this.uniforms.minLuminance.value=s}getMinLuminance(){return this.uniforms.minLuminance.value}setMinLuminance(s){this.uniforms.minLuminance.value=s}get adaptationRate(){return this.uniforms.tau.value}set adaptationRate(s){this.uniforms.tau.value=s}getAdaptationRate(){return this.uniforms.tau.value}setAdaptationRate(s){this.uniforms.tau.value=s}},XL=class extends Ii{constructor(s,{minLuminance:e=.01,adaptationRate:t=1}={}){super("AdaptiveLuminancePass"),this.fullscreenMaterial=new kL,this.needsSwap=!1,this.renderTargetPrevious=new Sn(1,1,{minFilter:an,magFilter:an,depthBuffer:!1}),this.renderTargetPrevious.texture.name="Luminance.Previous";const n=this.fullscreenMaterial;n.luminanceBuffer0=this.renderTargetPrevious.texture,n.luminanceBuffer1=s,n.minLuminance=e,n.adaptationRate=t,this.renderTargetAdapted=this.renderTargetPrevious.clone(),this.renderTargetAdapted.texture.name="Luminance.Adapted",this.copyPass=new DM(this.renderTargetPrevious,!1)}get texture(){return this.renderTargetAdapted.texture}getTexture(){return this.renderTargetAdapted.texture}set mipLevel1x1(s){this.fullscreenMaterial.mipLevel1x1=s}get adaptationRate(){return this.fullscreenMaterial.adaptationRate}set adaptationRate(s){this.fullscreenMaterial.adaptationRate=s}render(s,e,t,n,i){this.fullscreenMaterial.deltaTime=n,s.setRenderTarget(this.renderToScreen?null:this.renderTargetAdapted),s.render(this.scene,this.camera),this.copyPass.render(s,this.renderTargetAdapted)}},WL=`#include <tonemapping_pars_fragment>
uniform float whitePoint;
#if TONE_MAPPING_MODE == 2 || TONE_MAPPING_MODE == 3
uniform float middleGrey;
#if TONE_MAPPING_MODE == 3
uniform lowp sampler2D luminanceBuffer;
#else
uniform float averageLuminance;
#endif
vec3 Reinhard2ToneMapping(vec3 color){color*=toneMappingExposure;float l=luminance(color);
#if TONE_MAPPING_MODE == 3
float lumAvg=unpackRGBAToFloat(texture2D(luminanceBuffer,vec2(0.5)));
#else
float lumAvg=averageLuminance;
#endif
float lumScaled=(l*middleGrey)/max(lumAvg,1e-6);float lumCompressed=lumScaled*(1.0+lumScaled/(whitePoint*whitePoint));lumCompressed/=(1.0+lumScaled);return clamp(lumCompressed*color,0.0,1.0);}
#elif TONE_MAPPING_MODE == 4
#define A 0.15
#define B 0.50
#define C 0.10
#define D 0.20
#define E 0.02
#define F 0.30
vec3 Uncharted2Helper(const in vec3 x){return((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;}vec3 Uncharted2ToneMapping(vec3 color){color*=toneMappingExposure;return clamp(Uncharted2Helper(color)/Uncharted2Helper(vec3(whitePoint)),0.0,1.0);}
#endif
void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){
#if TONE_MAPPING_MODE == 2 || TONE_MAPPING_MODE == 3
outputColor=vec4(Reinhard2ToneMapping(inputColor.rgb),inputColor.a);
#elif TONE_MAPPING_MODE == 4
outputColor=vec4(Uncharted2ToneMapping(inputColor.rgb),inputColor.a);
#else
outputColor=vec4(toneMapping(inputColor.rgb),inputColor.a);
#endif
}`,qL=class extends qm{constructor({blendFunction:s=At.SRC,adaptive:e=!1,mode:t=e?wi.REINHARD2_ADAPTIVE:wi.AGX,resolution:n=256,maxLuminance:i=4,whitePoint:r=i,middleGrey:l=.6,minLuminance:c=.01,averageLuminance:u=1,adaptationRate:f=1}={}){super("ToneMappingEffect",WL,{blendFunction:s,uniforms:new Map([["luminanceBuffer",new Vt(null)],["maxLuminance",new Vt(i)],["whitePoint",new Vt(r)],["middleGrey",new Vt(l)],["averageLuminance",new Vt(u)]])}),this.renderTargetLuminance=new Sn(1,1,{minFilter:Di,depthBuffer:!1}),this.renderTargetLuminance.texture.generateMipmaps=!0,this.renderTargetLuminance.texture.name="Luminance",this.luminancePass=new BL({renderTarget:this.renderTargetLuminance}),this.adaptiveLuminancePass=new XL(this.luminancePass.texture,{minLuminance:c,adaptationRate:f}),this.uniforms.get("luminanceBuffer").value=this.adaptiveLuminancePass.texture,this.resolution=n,this.mode=t}get mode(){return Number(this.defines.get("TONE_MAPPING_MODE"))}set mode(s){if(this.mode===s)return;const t=Fa.replace(/\D+/g,"")>=168?"CineonToneMapping(texel)":"OptimizedCineonToneMapping(texel)";switch(this.defines.clear(),this.defines.set("TONE_MAPPING_MODE",s.toFixed(0)),s){case wi.LINEAR:this.defines.set("toneMapping(texel)","LinearToneMapping(texel)");break;case wi.REINHARD:this.defines.set("toneMapping(texel)","ReinhardToneMapping(texel)");break;case wi.CINEON:case wi.OPTIMIZED_CINEON:this.defines.set("toneMapping(texel)",t);break;case wi.ACES_FILMIC:this.defines.set("toneMapping(texel)","ACESFilmicToneMapping(texel)");break;case wi.AGX:this.defines.set("toneMapping(texel)","AgXToneMapping(texel)");break;case wi.NEUTRAL:this.defines.set("toneMapping(texel)","NeutralToneMapping(texel)");break;default:this.defines.set("toneMapping(texel)","texel");break}this.adaptiveLuminancePass.enabled=s===wi.REINHARD2_ADAPTIVE,this.setChanged()}getMode(){return this.mode}setMode(s){this.mode=s}get whitePoint(){return this.uniforms.get("whitePoint").value}set whitePoint(s){this.uniforms.get("whitePoint").value=s}get middleGrey(){return this.uniforms.get("middleGrey").value}set middleGrey(s){this.uniforms.get("middleGrey").value=s}get averageLuminance(){return this.uniforms.get("averageLuminance").value}set averageLuminance(s){this.uniforms.get("averageLuminance").value=s}get adaptiveLuminanceMaterial(){return this.adaptiveLuminancePass.fullscreenMaterial}getAdaptiveLuminanceMaterial(){return this.adaptiveLuminanceMaterial}get resolution(){return this.luminancePass.resolution.width}set resolution(s){const e=Math.max(0,Math.ceil(Math.log2(s))),t=Math.pow(2,e);this.luminancePass.resolution.setPreferredSize(t,t),this.adaptiveLuminanceMaterial.mipLevel1x1=e}getResolution(){return this.resolution}setResolution(s){this.resolution=s}get adaptive(){return this.mode===wi.REINHARD2_ADAPTIVE}set adaptive(s){this.mode=s?wi.REINHARD2_ADAPTIVE:wi.REINHARD2}get adaptationRate(){return this.adaptiveLuminanceMaterial.adaptationRate}set adaptationRate(s){this.adaptiveLuminanceMaterial.adaptationRate=s}get distinction(){return console.warn(this.name,"distinction was removed."),1}set distinction(s){console.warn(this.name,"distinction was removed.")}update(s,e,t){this.adaptiveLuminancePass.enabled&&(this.luminancePass.render(s,e),this.adaptiveLuminancePass.render(s,null,null,t))}initialize(s,e,t){this.adaptiveLuminancePass.initialize(s,e,t)}},YL=`#include <common>
#include <packing>
#include <dithering_pars_fragment>
#define packFloatToRGBA(v) packDepthToRGBA(v)
#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#if DEPTH_PACKING == 3201
uniform lowp sampler2D depthBuffer;
#elif defined(GL_FRAGMENT_PRECISION_HIGH)
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;vec4 sRGBToLinear(const in vec4 value){return vec4(mix(pow(value.rgb*0.9478672986+vec3(0.0521327014),vec3(2.4)),value.rgb*0.0773993808,vec3(lessThanEqual(value.rgb,vec3(0.04045)))),value.a);}float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}float getViewZ(const in float depth){
#ifdef PERSPECTIVE_CAMERA
return perspectiveDepthToViewZ(depth,cameraNear,cameraFar);
#else
return orthographicDepthToViewZ(depth,cameraNear,cameraFar);
#endif
}vec3 RGBToHCV(const in vec3 RGB){vec4 P=mix(vec4(RGB.bg,-1.0,2.0/3.0),vec4(RGB.gb,0.0,-1.0/3.0),step(RGB.b,RGB.g));vec4 Q=mix(vec4(P.xyw,RGB.r),vec4(RGB.r,P.yzx),step(P.x,RGB.r));float C=Q.x-min(Q.w,Q.y);float H=abs((Q.w-Q.y)/(6.0*C+EPSILON)+Q.z);return vec3(H,C,Q.x);}vec3 RGBToHSL(const in vec3 RGB){vec3 HCV=RGBToHCV(RGB);float L=HCV.z-HCV.y*0.5;float S=HCV.y/(1.0-abs(L*2.0-1.0)+EPSILON);return vec3(HCV.x,S,L);}vec3 HueToRGB(const in float H){float R=abs(H*6.0-3.0)-1.0;float G=2.0-abs(H*6.0-2.0);float B=2.0-abs(H*6.0-4.0);return clamp(vec3(R,G,B),0.0,1.0);}vec3 HSLToRGB(const in vec3 HSL){vec3 RGB=HueToRGB(HSL.x);float C=(1.0-abs(2.0*HSL.z-1.0))*HSL.y;return(RGB-0.5)*C+HSL.z;}FRAGMENT_HEAD void main(){FRAGMENT_MAIN_UV vec4 color0=texture2D(inputBuffer,UV);vec4 color1=vec4(0.0);FRAGMENT_MAIN_IMAGE color0.a=clamp(color0.a,0.0,1.0);gl_FragColor=color0;
#ifdef ENCODE_OUTPUT
#include <colorspace_fragment>
#endif
#include <dithering_fragment>
}`,KL="uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;VERTEX_HEAD void main(){vUv=position.xy*0.5+0.5;VERTEX_MAIN_SUPPORT gl_Position=vec4(position.xy,1.0,1.0);}",jL=class extends zn{constructor(s,e,t,n,i=!1){super({name:"EffectMaterial",defines:{THREE_REVISION:Fa.replace(/\D+/g,""),DEPTH_PACKING:"0",ENCODE_OUTPUT:"1"},uniforms:{inputBuffer:new Vt(null),depthBuffer:new Vt(null),resolution:new Vt(new oe),texelSize:new Vt(new oe),cameraNear:new Vt(.3),cameraFar:new Vt(1e3),aspect:new Vt(1),time:new Vt(0)},blending:mi,toneMapped:!1,depthWrite:!1,depthTest:!1,dithering:i}),s&&this.setShaderParts(s),e&&this.setDefines(e),t&&this.setUniforms(t),this.copyCameraSettings(n)}set inputBuffer(s){this.uniforms.inputBuffer.value=s}setInputBuffer(s){this.uniforms.inputBuffer.value=s}get depthBuffer(){return this.uniforms.depthBuffer.value}set depthBuffer(s){this.uniforms.depthBuffer.value=s}get depthPacking(){return Number(this.defines.DEPTH_PACKING)}set depthPacking(s){this.defines.DEPTH_PACKING=s.toFixed(0),this.needsUpdate=!0}setDepthBuffer(s,e=Ur){this.depthBuffer=s,this.depthPacking=e}setShaderData(s){this.setShaderParts(s.shaderParts),this.setDefines(s.defines),this.setUniforms(s.uniforms),this.setExtensions(s.extensions)}setShaderParts(s){return this.fragmentShader=YL.replace(Bt.FRAGMENT_HEAD,s.get(Bt.FRAGMENT_HEAD)||"").replace(Bt.FRAGMENT_MAIN_UV,s.get(Bt.FRAGMENT_MAIN_UV)||"").replace(Bt.FRAGMENT_MAIN_IMAGE,s.get(Bt.FRAGMENT_MAIN_IMAGE)||""),this.vertexShader=KL.replace(Bt.VERTEX_HEAD,s.get(Bt.VERTEX_HEAD)||"").replace(Bt.VERTEX_MAIN_SUPPORT,s.get(Bt.VERTEX_MAIN_SUPPORT)||""),this.needsUpdate=!0,this}setDefines(s){for(const e of s.entries())this.defines[e[0]]=e[1];return this.needsUpdate=!0,this}setUniforms(s){for(const e of s.entries())this.uniforms[e[0]]=e[1];return this}setExtensions(s){this.extensions={};for(const e of s)this.extensions[e]=!0;return this}get encodeOutput(){return this.defines.ENCODE_OUTPUT!==void 0}set encodeOutput(s){this.encodeOutput!==s&&(s?this.defines.ENCODE_OUTPUT="1":delete this.defines.ENCODE_OUTPUT,this.needsUpdate=!0)}isOutputEncodingEnabled(s){return this.encodeOutput}setOutputEncodingEnabled(s){this.encodeOutput=s}get time(){return this.uniforms.time.value}set time(s){this.uniforms.time.value=s}setDeltaTime(s){this.uniforms.time.value+=s}adoptCameraSettings(s){this.copyCameraSettings(s)}copyCameraSettings(s){s&&(this.uniforms.cameraNear.value=s.near,this.uniforms.cameraFar.value=s.far,s instanceof xn?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(s,e){const t=this.uniforms;t.resolution.value.set(s,e),t.texelSize.value.set(1/s,1/e),t.aspect.value=s/e}static get Section(){return Bt}};function tx(s,e,t){for(const n of e){const i="$1"+s+n.charAt(0).toUpperCase()+n.slice(1),r=new RegExp("([^\\.])(\\b"+n+"\\b)","g");for(const l of t.entries())l[1]!==null&&t.set(l[0],l[1].replace(r,i))}}function ZL(s,e,t){let n=e.getFragmentShader(),i=e.getVertexShader();const r=n!==void 0&&/mainImage/.test(n),l=n!==void 0&&/mainUv/.test(n);if(t.attributes|=e.getAttributes(),n===void 0)throw new Error(`Missing fragment shader (${e.name})`);if(l&&(t.attributes&Ca.CONVOLUTION)!==0)throw new Error(`Effects that transform UVs are incompatible with convolution effects (${e.name})`);if(!r&&!l)throw new Error(`Could not find mainImage or mainUv function (${e.name})`);{const c=/\w+\s+(\w+)\([\w\s,]*\)\s*{/g,u=t.shaderParts;let f=u.get(Bt.FRAGMENT_HEAD)||"",d=u.get(Bt.FRAGMENT_MAIN_UV)||"",p=u.get(Bt.FRAGMENT_MAIN_IMAGE)||"",g=u.get(Bt.VERTEX_HEAD)||"",v=u.get(Bt.VERTEX_MAIN_SUPPORT)||"";const x=new Set,M=new Set;if(l&&(d+=`	${s}MainUv(UV);
`,t.uvTransformation=!0),i!==null&&/mainSupport/.test(i)){const b=/mainSupport *\([\w\s]*?uv\s*?\)/.test(i);v+=`	${s}MainSupport(`,v+=b?`vUv);
`:`);
`;for(const T of i.matchAll(/(?:varying\s+\w+\s+([\S\s]*?);)/g))for(const A of T[1].split(/\s*,\s*/))t.varyings.add(A),x.add(A),M.add(A);for(const T of i.matchAll(c))M.add(T[1])}for(const b of n.matchAll(c))M.add(b[1]);for(const b of e.defines.keys())M.add(b.replace(/\([\w\s,]*\)/g,""));for(const b of e.uniforms.keys())M.add(b);M.delete("while"),M.delete("for"),M.delete("if"),e.uniforms.forEach((b,T)=>t.uniforms.set(s+T.charAt(0).toUpperCase()+T.slice(1),b)),e.defines.forEach((b,T)=>t.defines.set(s+T.charAt(0).toUpperCase()+T.slice(1),b));const S=new Map([["fragment",n],["vertex",i]]);tx(s,M,t.defines),tx(s,M,S),n=S.get("fragment"),i=S.get("vertex");const _=e.blendMode;if(t.blendModes.set(_.blendFunction,_),r){e.inputColorSpace!==null&&e.inputColorSpace!==t.colorSpace&&(p+=e.inputColorSpace===kt?`color0 = sRGBTransferOETF(color0);
	`:`color0 = sRGBToLinear(color0);
	`),e.outputColorSpace!==cs?t.colorSpace=e.outputColorSpace:e.inputColorSpace!==null&&(t.colorSpace=e.inputColorSpace);const b=/MainImage *\([\w\s,]*?depth[\w\s,]*?\)/;p+=`${s}MainImage(color0, UV, `,(t.attributes&Ca.DEPTH)!==0&&b.test(n)&&(p+="depth, ",t.readDepth=!0),p+=`color1);
	`;const T=s+"BlendOpacity";t.uniforms.set(T,_.opacity),p+=`color0 = blend${_.blendFunction}(color0, color1, ${T});

	`,f+=`uniform float ${T};

`}if(f+=n+`
`,i!==null&&(g+=i+`
`),u.set(Bt.FRAGMENT_HEAD,f),u.set(Bt.FRAGMENT_MAIN_UV,d),u.set(Bt.FRAGMENT_MAIN_IMAGE,p),u.set(Bt.VERTEX_HEAD,g),u.set(Bt.VERTEX_MAIN_SUPPORT,v),e.extensions!==null)for(const b of e.extensions)t.extensions.add(b)}}var JL=class extends Ii{constructor(s,...e){super("EffectPass"),this.fullscreenMaterial=new jL(null,null,null,s),this.listener=t=>this.handleEvent(t),this.effects=[],this.setEffects(e),this.skipRendering=!1,this.minTime=1,this.maxTime=Number.POSITIVE_INFINITY,this.timeScale=1}set mainScene(s){for(const e of this.effects)e.mainScene=s}set mainCamera(s){this.fullscreenMaterial.copyCameraSettings(s);for(const e of this.effects)e.mainCamera=s}get encodeOutput(){return this.fullscreenMaterial.encodeOutput}set encodeOutput(s){this.fullscreenMaterial.encodeOutput=s}get dithering(){return this.fullscreenMaterial.dithering}set dithering(s){const e=this.fullscreenMaterial;e.dithering=s,e.needsUpdate=!0}setEffects(s){for(const e of this.effects)e.removeEventListener("change",this.listener);this.effects=s.sort((e,t)=>t.attributes-e.attributes);for(const e of this.effects)e.addEventListener("change",this.listener)}updateMaterial(){const s=new eL;let e=0;for(const l of this.effects)if(l.blendMode.blendFunction===At.DST)s.attributes|=l.getAttributes()&Ca.DEPTH;else{if((s.attributes&l.getAttributes()&Ca.CONVOLUTION)!==0)throw new Error(`Convolution effects cannot be merged (${l.name})`);ZL("e"+e++,l,s)}let t=s.shaderParts.get(Bt.FRAGMENT_HEAD),n=s.shaderParts.get(Bt.FRAGMENT_MAIN_IMAGE),i=s.shaderParts.get(Bt.FRAGMENT_MAIN_UV);const r=/\bblend\b/g;for(const l of s.blendModes.values())t+=l.getShaderCode().replace(r,`blend${l.blendFunction}`)+`
`;(s.attributes&Ca.DEPTH)!==0?(s.readDepth&&(n=`float depth = readDepth(UV);

	`+n),this.needsDepthTexture=this.getDepthTexture()===null):this.needsDepthTexture=!1,s.colorSpace===kt&&(n+=`color0 = sRGBToLinear(color0);
	`),s.uvTransformation?(i=`vec2 transformedUv = vUv;
`+i,s.defines.set("UV","transformedUv")):s.defines.set("UV","vUv"),s.shaderParts.set(Bt.FRAGMENT_HEAD,t),s.shaderParts.set(Bt.FRAGMENT_MAIN_IMAGE,n),s.shaderParts.set(Bt.FRAGMENT_MAIN_UV,i);for(const[l,c]of s.shaderParts)c!==null&&s.shaderParts.set(l,c.trim().replace(/^#/,`
#`));this.skipRendering=e===0,this.needsSwap=!this.skipRendering,this.fullscreenMaterial.setShaderData(s)}recompile(){this.updateMaterial()}getDepthTexture(){return this.fullscreenMaterial.depthBuffer}setDepthTexture(s,e=Ur){this.fullscreenMaterial.depthBuffer=s,this.fullscreenMaterial.depthPacking=e;for(const t of this.effects)t.setDepthTexture(s,e)}render(s,e,t,n,i){for(const r of this.effects)r.update(s,e,n);if(!this.skipRendering||this.renderToScreen){const r=this.fullscreenMaterial;r.inputBuffer=e.texture,r.time+=n*this.timeScale,s.setRenderTarget(this.renderToScreen?null:t),s.render(this.scene,this.camera)}}setSize(s,e){this.fullscreenMaterial.setSize(s,e);for(const t of this.effects)t.setSize(s,e)}initialize(s,e,t){this.renderer=s;for(const n of this.effects)n.initialize(s,e,t);this.updateMaterial(),t!==void 0&&t!==Bn&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}dispose(){super.dispose();for(const s of this.effects)s.removeEventListener("change",this.listener),s.dispose()}handleEvent(s){switch(s.type){case"change":this.recompile();break}}},QL=class extends Ii{constructor(s,e,{renderTarget:t,resolutionScale:n=1,width:i=Zs.AUTO_SIZE,height:r=Zs.AUTO_SIZE,resolutionX:l=i,resolutionY:c=r}={}){super("NormalPass"),this.needsSwap=!1,this.renderPass=new LM(s,e,new xg);const u=this.renderPass;u.ignoreBackground=!0,u.skipShadowMapUpdate=!0;const f=u.getClearPass();f.overrideClearColor=new Re(7829503),f.overrideClearAlpha=1,this.renderTarget=t,this.renderTarget===void 0&&(this.renderTarget=new Sn(1,1,{minFilter:an,magFilter:an}),this.renderTarget.texture.name="NormalPass.Target");const d=this.resolution=new Zs(this,l,c,n);d.addEventListener("change",p=>this.setSize(d.baseWidth,d.baseHeight))}set mainScene(s){this.renderPass.mainScene=s}set mainCamera(s){this.renderPass.mainCamera=s}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}getResolutionScale(){return this.resolution.scale}setResolutionScale(s){this.resolution.scale=s}render(s,e,t,n,i){const r=this.renderToScreen?null:this.renderTarget;this.renderPass.render(s,r,r)}setSize(s,e){const t=this.resolution;t.setBaseSize(s,e),this.renderTarget.setSize(t.width,t.height)}};function uc(s,e,t){return e in s?Object.defineProperty(s,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):s[e]=t,s}new oe;new oe;function UM(s,e){if(!(s instanceof e))throw new TypeError("Cannot call a class as a function")}var Yi=function s(e,t,n){var i=this;UM(this,s),uc(this,"dot2",function(r,l){return i.x*r+i.y*l}),uc(this,"dot3",function(r,l,c){return i.x*r+i.y*l+i.z*c}),this.x=e,this.y=t,this.z=n},$L=[new Yi(1,1,0),new Yi(-1,1,0),new Yi(1,-1,0),new Yi(-1,-1,0),new Yi(1,0,1),new Yi(-1,0,1),new Yi(1,0,-1),new Yi(-1,0,-1),new Yi(0,1,1),new Yi(0,-1,1),new Yi(0,1,-1),new Yi(0,-1,-1)],nx=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],ix=new Array(512),sx=new Array(512),eU=function(e){e>0&&e<1&&(e*=65536),e=Math.floor(e),e<256&&(e|=e<<8);for(var t=0;t<256;t++){var n;t&1?n=nx[t]^e&255:n=nx[t]^e>>8&255,ix[t]=ix[t+256]=n,sx[t]=sx[t+256]=$L[n%12]}};eU(0);function tU(s){if(typeof s=="number")s=Math.abs(s);else if(typeof s=="string"){var e=s;s=0;for(var t=0;t<e.length;t++)s=(s+(t+1)*(e.charCodeAt(t)%96))%2147483647}return s===0&&(s=311),s}function rx(s){var e=tU(s);return function(){var t=e*48271%2147483647;return e=t,t/2147483647}}var nU=function s(e){var t=this;UM(this,s),uc(this,"seed",0),uc(this,"init",function(n){t.seed=n,t.value=rx(n)}),uc(this,"value",rx(this.seed)),this.init(e)};new nU(Math.random());const iU=He.createContext(null),ax=s=>(s.getAttributes()&2)===2,sU=He.memo(He.forwardRef(({children:s,camera:e,scene:t,resolutionScale:n,enabled:i=!0,renderPriority:r=1,autoClear:l=!0,depthBuffer:c,enableNormalPass:u,stencilBuffer:f,multisampling:d=8,frameBufferType:p=Lr},g)=>{const{gl:v,scene:x,camera:M,size:S}=wa(),_=t||x,b=e||M,[T,A,U]=He.useMemo(()=>{const I=new $N(v,{depthBuffer:c,stencilBuffer:f,multisampling:d,frameBufferType:p});I.addPass(new LM(_,b));let w=null,R=null;return u&&(R=new QL(_,b),R.enabled=!1,I.addPass(R),n!==void 0&&(w=new VL({normalBuffer:R.texture,resolutionScale:n}),w.enabled=!1,I.addPass(w))),[I,R,w]},[b,v,c,f,d,p,_,u,n]);He.useEffect(()=>T==null?void 0:T.setSize(S.width,S.height),[T,S]),Fg((I,w)=>{if(i){const R=v.autoClear;v.autoClear=l,f&&!l&&v.clearStencil(),T.render(w),v.autoClear=R}},i?r:0);const D=He.useRef(null);He.useLayoutEffect(()=>{var R;const I=[],w=D.current.__r3f;if(w&&T){const F=w.children;for(let j=0;j<F.length;j++){const k=F[j].object;if(k instanceof qm){const J=[k];if(!ax(k)){let V=null;for(;(V=(R=F[j+1])==null?void 0:R.object)instanceof qm&&!ax(V);)J.push(V),j++}const se=new JL(b,...J);I.push(se)}else k instanceof Ii&&I.push(k)}for(const j of I)T==null||T.addPass(j);A&&(A.enabled=!0),U&&(U.enabled=!0)}return()=>{for(const F of I)T==null||T.removePass(F);A&&(A.enabled=!1),U&&(U.enabled=!1)}},[T,s,b,A,U]),He.useEffect(()=>{const I=v.toneMapping;return v.toneMapping=hs,()=>{v.toneMapping=I}},[v]);const P=He.useMemo(()=>({composer:T,normalPass:A,downSamplingPass:U,resolutionScale:n,camera:b,scene:_}),[T,A,U,n,b,_]);return He.useImperativeHandle(g,()=>T,[T]),Jt.jsx(iU.Provider,{value:P,children:Jt.jsx("group",{ref:D,children:s})})}));let rU=0;const ox=new WeakMap,aU=(s,e)=>function({blendFunction:t=e==null?void 0:e.blendFunction,opacity:n=e==null?void 0:e.opacity,...i}){let r=ox.get(s);if(!r){const u=`@react-three/postprocessing/${s.name}-${rU++}`;SM({[u]:s}),ox.set(s,r=u)}const l=wa(u=>u.camera),c=cx.useMemo(()=>[...(e==null?void 0:e.args)??[],...i.args??[{...e,...i}]],[JSON.stringify(i)]);return Jt.jsx(r,{camera:l,"blendMode-blendFunction":t,"blendMode-opacity-value":n,...i,args:c})},oU=aU(qL);function lU(){const s=He.useRef(null),e=Hg(hN,"/assets/3D/computer.glb");return Fg((t,n)=>{if(!s.current)return;const i=s.current;i.rotation.y+=n}),Jt.jsx("primitive",{object:e.scene,ref:s})}function cU({}){return Jt.jsxs("div",{className:"h-screen flex flex-col",children:[Jt.jsx(Ib,{}),Jt.jsxs(oN,{children:[Jt.jsx("ambientLight",{intensity:3}),Jt.jsx(uN,{makeDefault:!0,zoom:100,position:[-10,10,10],rotation:[Math.atan(-1/Math.sqrt(2)),-Math.PI/4,0,"YXZ"]}),Jt.jsx(lU,{}),Jt.jsx(sU,{children:Jt.jsx(oU,{})})]})]})}function gU({}){return[{title:"Saeed M Farahani"},{name:"description",content:"Welcome to my website"}]}const vU=Pb(function(){return Jt.jsx("div",{className:"bg-muted",children:Jt.jsx(cU,{})})});export{vU as default,gU as meta};
